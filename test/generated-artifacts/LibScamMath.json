{
	"schemaVersion": "2.0.0",
	"contractName": "LibScamMath",
	"compilerOutput": {
		"abi": [],
		"devdoc": {
			"methods": {}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x60636023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea365627a7a72315820c228fd113b348f1331b13d6c30257d5d926e4774fc3ec477a51239e0dcfb29af6c6578706572696d656e74616cf564736f6c634300050d0040",
				"opcodes": "PUSH1 0x63 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xC2 0x28 REVERT GT EXTCODESIZE CALLVALUE DUP16 SGT BALANCE 0xB1 RETURNDATASIZE PUSH13 0x30257D5D926E4774FC3EC477A5 SLT CODECOPY 0xE0 0xDC 0xFB 0x29 0xAF PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP BLOCKHASH ",
				"sourceMap": "60:418:10:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea365627a7a72315820c228fd113b348f1331b13d6c30257d5d926e4774fc3ec477a51239e0dcfb29af6c6578706572696d656e74616cf564736f6c634300050d0040",
				"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xC2 0x28 REVERT GT EXTCODESIZE CALLVALUE DUP16 SGT BALANCE 0xB1 RETURNDATASIZE PUSH13 0x30257D5D926E4774FC3EC477A5 SLT CODECOPY 0xE0 0xDC 0xFB 0x29 0xAF PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP BLOCKHASH ",
				"sourceMap": "60:418:10:-;;;;;;;;"
			}
		}
	},
	"sources": {
		"libs/LibScamMath.sol": {
			"id": 10
		}
	},
	"sourceCodes": {
		"libs/LibScamMath.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\nlibrary LibScamMath {\n\n    function fastExponentiation(uint256 x, uint256 y)\n        internal\n        pure\n        returns (uint256)\n    {\n\n        if (y == 0) {\n            return 1;\n        } else if (y == 1) {\n            return x;\n        } else if (y % 2 == 0) {\n            return fastExponentiation(x * x, y / 2);\n        } else {\n            return x * fastExponentiation(x * x, (y - 1) / 2);\n        }\n    }\n}\n"
	},
	"sourceTreeHashHex": "0xaf2dee5150076d01f1e83cb70838debc5860d3bf30e052f04ea682216a9cb6ba",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.13+commit.5b0b510c.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000000,
				"details": {
					"yul": true,
					"deduplicate": true,
					"cse": true,
					"constantOptimizer": true
				}
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"chains": {}
}