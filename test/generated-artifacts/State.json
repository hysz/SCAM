{
	"schemaVersion": "2.0.0",
	"contractName": "State",
	"compilerOutput": {
		"abi": [],
		"devdoc": {
			"methods": {}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x6080604052348015600f57600080fd5b50604c80601d6000396000f3fe6080604052600080fdfea365627a7a723158203ab51674a715b6b9ebed0b5072228485262a64843e92d3faaed7101fdc3960a36c6578706572696d656e74616cf564736f6c634300050d0040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4C DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 GASPRICE 0xB5 AND PUSH21 0xA715B6B9EBED0B5072228485262A64843E92D3FAAE 0xD7 LT 0x1F 0xDC CODECOPY PUSH1 0xA3 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP BLOCKHASH ",
				"sourceMap": "98:47:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:47:2;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x6080604052600080fdfea365627a7a723158203ab51674a715b6b9ebed0b5072228485262a64843e92d3faaed7101fdc3960a36c6578706572696d656e74616cf564736f6c634300050d0040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 GASPRICE 0xB5 AND PUSH21 0xA715B6B9EBED0B5072228485262A64843E92D3FAAE 0xD7 LT 0x1F 0xDC CODECOPY PUSH1 0xA3 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP BLOCKHASH ",
				"sourceMap": "98:47:2:-;;;;;"
			}
		}
	},
	"sources": {
		"core/State.sol": {
			"id": 2
		},
		"interfaces/IStructs.sol": {
			"id": 6
		}
	},
	"sourceCodes": {
		"core/State.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IStructs.sol\";\n\n\ncontract State {\n\n    IStructs.State gState;\n\n}\n",
		"interfaces/IStructs.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ninterface IStructs {\n\n    struct State {\n        address xAddress;                                   // address of token x\n        address yAddress;                                   // address of token y\n        int256 x;                                           // contract's balance of token x (fixed point)\n        int256 y;                                           // contract's balance of token y (fixed point)\n        int256 pBarX;                                       // expected future price of x in terms of y (fixed point)\n        int256 pBarXInverted;                               // inverted expected future price of x in terms of y (fixed point)\n        uint256 rhoNumerator;\n        int256 rhoRatio;\n        int256 fee;\n        uint256 bisectionIterations;\n        uint256 t;                                          // most recent block\n        mapping (address => uint256) liquidityBalance;\n        uint256 l;                                          // total liquidity token balance\n\n    }\n\n}\n"
	},
	"sourceTreeHashHex": "0x06b3c8bba4a1a72e676af87eb8564a09dd9d5d1101f99b8805e9c60e926dddad",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.13+commit.5b0b510c.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000000,
				"details": {
					"yul": true,
					"deduplicate": true,
					"cse": true,
					"constantOptimizer": true
				}
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"chains": {}
}