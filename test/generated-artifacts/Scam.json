{
	"schemaVersion": "2.0.0",
	"contractName": "Scam",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int256",
						"name": "lhs1",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "mid",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "lhs",
						"type": "int256"
					}
				],
				"name": "Bisect",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "fromToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "toToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountSpent",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountReceived",
						"type": "uint256"
					}
				],
				"name": "Fill",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "amountSpent",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "amountReceived",
						"type": "int256"
					}
				],
				"name": "FillInternal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int256",
						"name": "price",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "deltaB",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "newPBarX",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "pA",
						"type": "int256"
					}
				],
				"name": "Price",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "y_amount",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "gState",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isInitialized",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "xAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "yAddress",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "x",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "y",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "l",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "pBarX",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "rhoNumerator",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "rhoRatio",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "fee",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "t",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "beta",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "eToKappa",
						"type": "int256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "xAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "yAddress",
						"type": "address"
					}
				],
				"name": "initState",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "l_amount",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "fromToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "toToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "swap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountReceived",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"addLiquidity(uint256,uint256)": {
					"details": "Allows a sender to deposit tokens into the contract to provide liquidity.",
					"params": {
						"x_amount": "The amount of x that should be taken from the sender's balance.",
						"y_amount": "The amount of x that should be taken from the sender's balance."
					}
				},
				"removeLiquidity(uint256)": {
					"details": "Allows a sender to withdraw tokens by burning liquidity tokens.",
					"params": {
						"l_amount": "The amount of liquidity tokens to burn."
					}
				}
			}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055613119806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639cd441da1161005b5780639cd441da146100f3578063afd46eb514610106578063df791e5014610127578063f2fde38b1461013a57610088565b806370a082311461008d5780637b689036146100b65780638da5cb5b146100cb5780639c8f9f23146100e0575b600080fd5b6100a061009b3660046128b2565b61014d565b6040516100ad91906130ab565b60405180910390f35b6100c96100c43660046128cd565b610179565b005b6100d361018f565b6040516100ad919061299a565b6100c96100ee366004612961565b6101ab565b6100c9610101366004612979565b6103e8565b61010e6106a1565b6040516100ad9d9c9b9a99989796959493929190612aa8565b6100a0610135366004612901565b6106f6565b6100c96101483660046128b2565b610a67565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600b60205260409020545b919050565b610181610b3a565b61018b8282610b8d565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6005546003546001916000916101dc91906101d0908690607f1c63ffffffff610ce016565b9063ffffffff610d3d16565b9050600061020383600401546101d0607f8660030154901c87610ce090919063ffffffff16565b905061021b836002015461021684610d8a565b610de0565b600284015560038301546102329061021683610d8a565b6003840155336000908152600a84016020526040902054610259908563ffffffff610e5016565b336000908152600a850160205260409020556004830154610280908563ffffffff610e9216565b60048481019190915583546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff169163a9059cbb916102e2913391879101612a82565b602060405180830381600087803b1580156102fc57600080fd5b505af1158015610310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103349190810190612941565b5060018301546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb9061038f9033908590600401612a82565b602060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103e19190810190612941565b5050505050565b600160006103fe84670de0b6b3a7640000610ed1565b9050600061040f84620f4240610ed1565b9050610428836002015482610f6b90919063ffffffff16565b600384015461043e90849063ffffffff610f6b16565b1461047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612b90565b60405180910390fd5b82546040517f23b872dd00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff16906323b872dd906104db90339030908a90600401612a23565b602060405180830381600087803b1580156104f557600080fd5b505af1158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061052d9190810190612941565b5060018301546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9061058a90339030908990600401612a23565b602060405180830381600087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105dc9190810190612941565b5060008360020154600014156105fb5750600160048401556000610621565b61061e607f8560020154901c6101d0866004015489610ce090919063ffffffff16565b90505b61062f846002015484610fbe565b600285015560038401546106439083610fbe565b6003850155336000908152600a8501602052604090205461066a908263ffffffff610e9216565b336000908152600a860160205260409020556004840154610691908263ffffffff610e9216565b8460040181905550505050505050565b600154600254600354600454600554600654600754600854600954600a54600c54600d5460ff8c169b73ffffffffffffffffffffffffffffffffffffffff61010090910481169b16999897969594939291908d565b60006107006127f8565b610708610fca565b9050806020015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480156107785750806040015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156107a6576000610793868661078d87611070565b8561107d565b905061079e816113b9565b925050610866565b806040015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480156108145750806020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b15610834576000610829868661078d876113c6565b905061079e816113d3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612d00565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906323b872dd906108bc90339030908890600401612a23565b602060405180830381600087803b1580156108d657600080fd5b505af11580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090e9190810190612941565b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612f72565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a9059cbb906109989033908690600401612a82565b602060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109ea9190810190612941565b610a20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612dcb565b7f256db8090fa51c3bac981768637d5a7c46b5540644dcef89052b89dbb2f6c8ea3386868686604051610a579594939291906129e2565b60405180910390a1509392505050565b610a6f610b3a565b73ffffffffffffffffffffffffffffffffffffffff8116610abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612ecd565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790556040517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090610b2e90339084906129bb565b60405180910390a15b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612c92565b565b60015460ff1615610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612cc9565b600180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff8581169190910291909117909155600280547fffffffffffffffffffffffff000000000000000000000000000000000000000016918316919091179055610c5160636064610ed1565b60065560636007819055610c66906064610ed1565b600855610c766005612710610ed1565b600955610c9e610c8a6001620f42406113e0565b610c926113ff565b9063ffffffff610de016565b600c55610caf6127156103e86113e0565b600d555050600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055565b600082610cef57506000610d37565b82820282848281610cfc57fe5b0414610d34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612e5f565b90505b92915050565b600081610d76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612bed565b6000828481610d8157fe5b04949350505050565b600080821215610dc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612e02565b610d37826f80000000000000000000000000000000611413565b60007f8000000000000000000000000000000000000000000000000000000000000000821415610e3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612fa9565b610e498383600003611489565b9392505050565b600082821115610e8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612c24565b50900390565b600082820183811015610d34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612b59565b600080831215610f0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612fe0565b6000821215610f48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612d37565b610e49610f65846f80000000000000000000000000000000611413565b836114ff565b60006f800000000000000000000000000000008215610f9d575065010000000000909105906a80000000000000000000005b6000610fa98585611413565b9050818181610fb457fe5b0595945050505050565b6000610e498383611489565b610fd26127f8565b50604080516101a08101825260015460ff81161515825273ffffffffffffffffffffffffffffffffffffffff610100918290048116602084015260025416928201929092526003546060820152600454608082015260055460a082015260065460c082015260075460e082015260085491810191909152600954610120820152600a54610140820152600c54610160820152600d5461018082015290565b6000610d378260126115ce565b6020810151600090819081908190819073ffffffffffffffffffffffffffffffffffffffff8a811691161480156110e35750856040015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b1561110257505050506060820151608083015160c084015160016111a2565b856040015173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161480156111705750856020015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b1561083457856080015193508560600151925061119f8660c001516111936113ff565b9063ffffffff6115dd16565b91505b6000806111b28686868c8c611606565b9150915060006111e86111cc8a6101200151610c926113ff565b6111dc8c8563ffffffff610f6b16565b9063ffffffff610f6b16565b90506111fb60008263ffffffff610de016565b9050600061120d6001620186a06113e0565b90506000821315611221576000915061124a565b80611232888463ffffffff610fbe16565b1361124a57611247818863ffffffff610de016565b91505b600061126a8b610140015161125d61170c565b8d6101600151888b611710565b6101808c0151909150611283908863ffffffff610f6b16565b8113156112a7576101808b01516112a0908863ffffffff610f6b16565b90506112db565b6112bc876111dc8d61018001516111936113ff565b8112156112db576112d8876111dc8d61018001516111936113ff565b90505b6112e361170c565b6101408c01528515611325576112ff898d63ffffffff610fbe16565b60608c0152611314888463ffffffff610fbe16565b60808c015260c08b01819052611361565b611335888463ffffffff610fbe16565b60608c015261134a898d63ffffffff610fbe16565b60808c015261135b816111936113ff565b60c08c01525b61136a8b6117ee565b7f666804e599b015edcfb9de12153bf8a48aa5a84b8861b8fa88c1cf4b11974c15338d8560405161139d93929190612a54565b60405180910390a150506000039b9a5050505050505050505050565b6000610d378260066118f0565b6000610d378260066115ce565b6000610d378260126118f0565b6000610e49610f65846f80000000000000000000000000000000611413565b6f8000000000000000000000000000000090565b6000821580611420575081155b1561142d57506000610d37565b508181028183828161143b57fe5b0514158061145257508282828161144e57fe5b0514155b15610d37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612f04565b81810160008312801561149c5750600082125b80156114a757508281135b806114c857506000831380156114bd5750600082135b80156114c857508281125b15610d37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612f3b565b600081611538576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104759061303d565b7f8000000000000000000000000000000000000000000000000000000000000000831480156115865750817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff145b156115bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590613074565b8183816115c657fe5b059392505050565b6000610e498383600a0a610ed1565b60006115f7610f65846a8000000000000000000000611413565b65010000000000029392505050565b60008061161a878787866101000151611900565b9150600082816116308a8863ffffffff610fbe16565b905060005b60148110156116fc57600061164a85856119f9565b90506000611666611661838d63ffffffff6115dd16565b611a21565b9050600061169d61167d8c8563ffffffff610f6b16565b611691856111dc898763ffffffff610f6b16565b9063ffffffff610fbe16565b90507f4add19bbbe358caf4af4a31b1299356fc4dccf8b4cf3c87e401b0fa60062f31e8284836040516116d293929190612b20565b60405180910390a18c8113156116ea578295506116ee565b8296505b505050806001019050611635565b5091925050509550959350505050565b4390565b60008061171e878703610d8a565b9050600061174361173e61173188611ace565b849063ffffffff610f6b16565b6121b8565b9050600061175382610c926113ff565b90506000611767878363ffffffff610f6b16565b9050600061177b878563ffffffff610f6b16565b905060006117a7611792858b63ffffffff6115dd16565b6117a2878b63ffffffff6115dd16565b610fbe565b905060006117b7826111936113ff565b905060006117dc6117c860026127c6565b61119384611691898963ffffffff610fbe16565b9e9d5050505050505050505050505050565b80516001805460208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909116921515929092177fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff9384168102919091179091556040830151600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909316179091556060820151600355608082015160045560a082015160055560c082015160065560e0820151600755810151600855610120810151600955610140810151600a55610160810151600c556101800151600d55565b6000610e4982600a0a84026127e2565b600080611913848763ffffffff610f6b16565b90506000611927868363ffffffff6115dd16565b9050600061193b838863ffffffff6115dd16565b9050600061194b86610c926113ff565b905060006119576113ff565b8412156119755761196e61173e836111dc87611ace565b9050611993565b61199061198861173e846111dc87611ace565b6111936113ff565b90505b6119a3818963ffffffff610f6b16565b95507f3cf9bd989028bfc957ca46fd34c8ed26f90d849442378ee442fcd56cf5cac44f8a8a8a8a6119d38b6127e2565b6040516119e4959493929190612b36565b60405180910390a15050505050949350505050565b6000610e49611a11611a096113ff565b6116916113ff565b611193858563ffffffff610fbe16565b600080611a34838063ffffffff610f6b16565b90506000611a48848363ffffffff610f6b16565b90506000611a5c828063ffffffff610f6b16565b90506000611a70828063ffffffff610f6b16565b90506000611a84828063ffffffff610f6b16565b90506000611a98828063ffffffff610f6b16565b90506000611aac828063ffffffff610f6b16565b90506000611ac0828863ffffffff610f6b16565b9a9950505050505050505050565b60006f80000000000000000000000000000000821315611b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612d94565b60008213611b54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612c5b565b6f80000000000000000000000000000000821415611b7457506000610174565b640733048c5a8213611ba757507fffffffffffffffffffffffffffffffe010000000000000000000000000000000610174565b60008060006a01c8464f761647600000008513611c06577ffffffffffffffffffffffffffffffff000000000000000000000000000000000909301926a01c8464f761647600000006f8000000000000000000000000000000086020594505b6cf1aaddd7742e900000000000008513611c64577ffffffffffffffffffffffffffffffff800000000000000000000000000000000909301926cf1aaddd7742e900000000000006f8000000000000000000000000000000086020594505b6e0afe10820813d780000000000000008513611cc6577ffffffffffffffffffffffffffffffffc00000000000000000000000000000000909301926e0afe10820813d780000000000000006f8000000000000000000000000000000086020594505b6f02582ab704279ec000000000000000008513611d2a577ffffffffffffffffffffffffffffffffe00000000000000000000000000000000909301926f02582ab704279ec000000000000000006f8000000000000000000000000000000086020594505b6f1152aaa3bf81cc0000000000000000008513611d8e577fffffffffffffffffffffffffffffffff00000000000000000000000000000000909301926f1152aaa3bf81cc0000000000000000006f8000000000000000000000000000000086020594505b6f2f16ac6c59de700000000000000000008513611df2577fffffffffffffffffffffffffffffffff80000000000000000000000000000000909301926f2f16ac6c59de700000000000000000006f8000000000000000000000000000000086020594505b6f4da2cbf1be58280000000000000000008513611e56577fffffffffffffffffffffffffffffffffc0000000000000000000000000000000909301926f4da2cbf1be58280000000000000000006f8000000000000000000000000000000086020594505b6f63afbe7ab2082c0000000000000000008513611eba577fffffffffffffffffffffffffffffffffe0000000000000000000000000000000909301926f63afbe7ab2082c0000000000000000006f8000000000000000000000000000000086020594505b6f70f5a893b608861e1f58934f97aea57d8513611f1e577ffffffffffffffffffffffffffffffffff0000000000000000000000000000000909301926f70f5a893b608861e1f58934f97aea57d6f8000000000000000000000000000000086020594505b7fffffffffffffffffffffffffffffffff80000000000000000000000000000000850192508291506f80000000000000000000000000000000828002059050700100000000000000000000000000000000838103830205840193506f8000000000000000000000000000000081830281611f9457fe5b059150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281611fc557fe5b05840193506f8000000000000000000000000000000081830281611fe557fe5b059150700300000000000000000000000000000000836f999999999999999999999999999999990383028161201657fe5b05840193506f800000000000000000000000000000008183028161203657fe5b059150700400000000000000000000000000000000836f924924924924924924924924924924920383028161206757fe5b05840193506f800000000000000000000000000000008183028161208757fe5b059150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302816120b857fe5b05840193506f80000000000000000000000000000000818302816120d857fe5b059150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b0383028161210957fe5b05840193506f800000000000000000000000000000008183028161212957fe5b059150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d890383028161215a57fe5b05840193506f800000000000000000000000000000008183028161217a57fe5b059150700800000000000000000000000000000000836f88888888888888888888888888888888038302816121ab57fe5b0584019350505050919050565b60007fffffffffffffffffffffffffffffffe0100000000000000000000000000000008212156121ea57506000610174565b8161220657506f80000000000000000000000000000000610174565b6000821315612241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612e96565b6f800000000000000000000000000000006f1000000000000000000000000000000083078080028290056710e1b3be415a0000810293909301929091818302059050806705a0913f6b1e000002830192506f80000000000000000000000000000000828202816122ad57fe5b05905080670168244fdac7800002830192506f80000000000000000000000000000000828202816122da57fe5b05905080664807432bc1800002830192506f800000000000000000000000000000008282028161230657fe5b05905080660c0135dca0400002830192506f800000000000000000000000000000008282028161233257fe5b059050806601b707b1cdc00002830192506f800000000000000000000000000000008282028161235e57fe5b059050806536e0f639b80002830192506f800000000000000000000000000000008282028161238957fe5b05905080650618fee9f80002830192506f80000000000000000000000000000000828202816123b457fe5b05905080649c197dcc0002830192506f80000000000000000000000000000000828202816123de57fe5b05905080640e30dce40002830192506f800000000000000000000000000000008282028161240857fe5b0590508064012ebd130002830192506f800000000000000000000000000000008282028161243257fe5b059050806317499f0002830192506f800000000000000000000000000000008282028161245b57fe5b059050806301a9d48002830192506f800000000000000000000000000000008282028161248457fe5b05905080621c638002830192506f80000000000000000000000000000000828202816124ac57fe5b059050806201c63802830192506f80000000000000000000000000000000828202816124d457fe5b05905080611ab802830192506f80000000000000000000000000000000828202816124fb57fe5b0590508061017c02830192506f800000000000000000000000000000008282028161252257fe5b05905080601402830192506f800000000000000000000000000000008282028161254857fe5b600095909503946721c3677c82b400009190059384010582016f80000000000000000000000000000000019290507010000000000000000000000000000000008416156125b7577243cbaf42a000812488fc5c220ad7b97bf6e99e6cf1aaddd7742e56d32fb9f9974484020592505b7008000000000000000000000000000000008416156125f9577105d27a9f51c31b7c2f8038212a05747799916e0afe10820813d65dfe6a33c07f738f84020592505b70040000000000000000000000000000000084161561263b57701b4c902e273a58678d6d3bfdb93db96d026f02582ab704279e8efd15e0265855c47a84020592505b70020000000000000000000000000000000084161561267d577003b1cc971a9bb5b9867477440d6d1577506f1152aaa3bf81cb9fdb76eae12d02957184020592505b7001000000000000000000000000000000008416156126bf5770015bf0a8b1457695355fb8ac404e7a79e36f2f16ac6c59de6f8d5d6f63c1482a7c8684020592505b6f800000000000000000000000000000008416156126ff576fd3094c70f034de4b96ff7d5b6f99fcd86f4da2cbf1be5827f9eb3ad1aa9866ebb384020592505b6f4000000000000000000000000000000084161561273f576fa45af1e1f40c333b3de1db4dd55f29a76f63afbe7ab2082ba1a0ae5e4eb1b479dc84020592505b6f2000000000000000000000000000000084161561277f576f910b022db7ae67ce76b441c27035c6a16f70f5a893b608861e1f58934f97aea57d84020592505b6f100000000000000000000000000000008416156127bf576f88415abbe9a76bead8d00cf112e4d4a86f783eafef1c0a8f3978c7f81824d62ebf84020592505b5050919050565b6000610d37826f80000000000000000000000000000000611413565b6f80000000000000000000000000000000900590565b604051806101a00160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d3757600080fd5b6000602082840312156128c3578081fd5b610e49838361288e565b600080604083850312156128df578081fd5b6128e9848461288e565b91506128f8846020850161288e565b90509250929050565b600080600060608486031215612915578081fd5b8335612920816130b4565b92506020840135612930816130b4565b929592945050506040919091013590565b600060208284031215612952578081fd5b81518015158114610d34578182fd5b600060208284031215612972578081fd5b5035919050565b6000806040838503121561298b578182fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b9c15158d5273ffffffffffffffffffffffffffffffffffffffff9b8c1660208e015299909a1660408c015260608b019790975260808a019590955260a089019390935260c088019190915260e08701526101008601526101208501526101408401526101608301919091526101808201526101a00190565b9283526020830191909152604082015260600190565b948552602085019390935260408401919091526060830152608082015260a00190565b60208082526011908201527f736166654164643a206f766572666c6f77000000000000000000000000000000604082015260600190565b6020808252602a908201527f4c697175696474793a416d6f756e74206465706f7369746564206e6f7420707260408201527f6f706f7274696f6e616c00000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f736166654469763a206f766572666c6f77000000000000000000000000000000604082015260600190565b60208082526012908201527f736166655375623a20756e646572666c6f770000000000000000000000000000604082015260600190565b60208082526013908201527f6c6e3a2076616c756520746f6f20736d616c6c00000000000000000000000000604082015260600190565b6020808252600e908201527f4f6e6c794f776e65724572726f72000000000000000000000000000000000000604082015260600190565b60208082526013908201527f416c726561647920496e697469616c697a656400000000000000000000000000604082015260600190565b60208082526017908201527f496e76616c696420746f6b656e20616464726573736573000000000000000000604082015260600190565b60208082526038908201527f746f46697865642875696e742c75696e74293a2064656e6f6d696e61746f722060408201527f63616e6e6f74206265206c657373207468616e207a65726f0000000000000000606082015260800190565b60208082526013908201527f6c6e3a2076616c756520746f6f206c6172676500000000000000000000000000604082015260600190565b6020808252601d908201527f494e53554646494349454e545f544f5f544f4b454e5f42414c414e4345000000604082015260600190565b60208082526027908201527f746f46697865643a2076616c75652063616e6e6f74206265206c65737320746860408201527f616e207a65726f00000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f736166654d756c3a206f766572666c6f77000000000000000000000000000000604082015260600190565b60208082526014908201527f6578703a2076616c756520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526018908201527f5472616e736665724f776e6572546f5a65726f4572726f720000000000000000604082015260600190565b6020808252600e908201527f5f6d756c3a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f5f6164643a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252601f908201527f494e53554646494349454e545f46524f4d5f544f4b454e5f42414c414e434500604082015260600190565b60208082526014908201527f7375623a2076616c756520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526036908201527f746f46697865642875696e742c75696e74293a206e756d657261746f7220636160408201527f6e6e6f74206265206c657373207468616e207a65726f00000000000000000000606082015260800190565b60208082526014908201527f5f6469763a20646976696465206279207a65726f000000000000000000000000604082015260600190565b6020808252600e908201527f5f6469763a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610b3757600080fdfea365627a7a72315820e7c884ee601545769c36981b2481387caeac6ef4c86d6d82b57001b8544020026c6578706572696d656e74616cf564736f6c634300050d0040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x3119 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CD441DA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xAFD46EB5 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13A JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x7B689036 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x28B2 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x30AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x28CD JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x299A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x2979 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AA8 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x2901 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x28B2 JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x18B DUP3 DUP3 PUSH2 0xB8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1D0 SWAP1 DUP7 SWAP1 PUSH1 0x7F SHR PUSH4 0xFFFFFFFF PUSH2 0xCE0 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD3D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x203 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1D0 PUSH1 0x7F DUP7 PUSH1 0x3 ADD SLOAD SWAP1 SHR DUP8 PUSH2 0xCE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x21B DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x216 DUP5 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x232 SWAP1 PUSH2 0x216 DUP4 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x259 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE50 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x280 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE92 AND JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x2E2 SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x310 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x334 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x38F SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x3E1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x3FE DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40F DUP5 PUSH3 0xF4240 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP PUSH2 0x428 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xF6B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x43E SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST EQ PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x4DB SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x52D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x58A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5DC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5FB JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0x0 PUSH2 0x621 JUMP JUMPDEST PUSH2 0x61E PUSH1 0x7F DUP6 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x1D0 DUP7 PUSH1 0x4 ADD SLOAD DUP10 PUSH2 0xCE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x62F DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x643 SWAP1 DUP4 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x66A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE92 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x691 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE92 AND JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xFF DUP13 AND SWAP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP14 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x700 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x708 PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x778 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 PUSH2 0x793 DUP7 DUP7 PUSH2 0x78D DUP8 PUSH2 0x1070 JUMP JUMPDEST DUP6 PUSH2 0x107D JUMP JUMPDEST SWAP1 POP PUSH2 0x79E DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x866 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x814 JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 PUSH2 0x829 DUP7 DUP7 PUSH2 0x78D DUP8 PUSH2 0x13C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x79E DUP2 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x8BC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x90E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x998 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x9EA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2DCB JUMP JUMPDEST PUSH32 0x256DB8090FA51C3BAC981768637D5A7C46B5540644DCEF89052B89DBB2F6C8EA CALLER DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA57 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA6F PUSH2 0xB3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2ECD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH2 0xB2E SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0x29BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2C92 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND PUSH2 0x100 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xC51 PUSH1 0x63 PUSH1 0x64 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x63 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0xC66 SWAP1 PUSH1 0x64 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xC76 PUSH1 0x5 PUSH2 0x2710 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xC9E PUSH2 0xC8A PUSH1 0x1 PUSH3 0xF4240 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE0 AND JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xCAF PUSH2 0x2715 PUSH2 0x3E8 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCEF JUMPI POP PUSH1 0x0 PUSH2 0xD37 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xCFC JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2E5F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xD81 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0xD37 DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0xE49 DUP4 DUP4 PUSH1 0x0 SUB PUSH2 0x1489 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2C24 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2B59 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2FE0 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0xE49 PUSH2 0xF65 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST DUP4 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 ISZERO PUSH2 0xF9D JUMPI POP PUSH6 0x10000000000 SWAP1 SWAP2 SDIV SWAP1 PUSH11 0x8000000000000000000000 JUMPDEST PUSH1 0x0 PUSH2 0xFA9 DUP6 DUP6 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 PUSH2 0xFB4 JUMPI INVALID JUMPDEST SDIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0xFD2 PUSH2 0x27F8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 SLOAD AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x9 SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xC SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH2 0x180 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x12 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x10E3 JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1102 JUMPI POP POP POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x1 PUSH2 0x11A2 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1170 JUMPI POP DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x834 JUMPI DUP6 PUSH1 0x80 ADD MLOAD SWAP4 POP DUP6 PUSH1 0x60 ADD MLOAD SWAP3 POP PUSH2 0x119F DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11B2 DUP7 DUP7 DUP7 DUP13 DUP13 PUSH2 0x1606 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x11E8 PUSH2 0x11CC DUP11 PUSH2 0x120 ADD MLOAD PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x11DC DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH2 0x11FB PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xDE0 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x120D PUSH1 0x1 PUSH3 0x186A0 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x124A JUMP JUMPDEST DUP1 PUSH2 0x1232 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SGT PUSH2 0x124A JUMPI PUSH2 0x1247 DUP2 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xDE0 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x126A DUP12 PUSH2 0x140 ADD MLOAD PUSH2 0x125D PUSH2 0x170C JUMP JUMPDEST DUP14 PUSH2 0x160 ADD MLOAD DUP9 DUP12 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x180 DUP13 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1283 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x12A7 JUMPI PUSH2 0x180 DUP12 ADD MLOAD PUSH2 0x12A0 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x12BC DUP8 PUSH2 0x11DC DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x12DB JUMPI PUSH2 0x12D8 DUP8 PUSH2 0x11DC DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x12E3 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x140 DUP13 ADD MSTORE DUP6 ISZERO PUSH2 0x1325 JUMPI PUSH2 0x12FF DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x1314 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xC0 DUP12 ADD DUP2 SWAP1 MSTORE PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x1335 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x134A DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH2 0x135B DUP2 PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MSTORE JUMPDEST PUSH2 0x136A DUP12 PUSH2 0x17EE JUMP JUMPDEST PUSH32 0x666804E599B015EDCFB9DE12153BF8A48AA5A84B8861B8FA88C1CF4B11974C15 CALLER DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x139D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 SUB SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x6 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x6 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x12 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 PUSH2 0xF65 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x1420 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x142D JUMPI POP PUSH1 0x0 PUSH2 0xD37 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x143B JUMPI INVALID JUMPDEST SDIV EQ ISZERO DUP1 PUSH2 0x1452 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x144E JUMPI INVALID JUMPDEST SDIV EQ ISZERO JUMPDEST ISZERO PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2F04 JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x149C JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0x14A7 JUMPI POP DUP3 DUP2 SGT JUMPDEST DUP1 PUSH2 0x14C8 JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x14BD JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 ISZERO PUSH2 0x14C8 JUMPI POP DUP3 DUP2 SLT JUMPDEST ISZERO PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x303D JUMP JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ DUP1 ISZERO PUSH2 0x1586 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ JUMPDEST ISZERO PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x3074 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x15C6 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH1 0xA EXP PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F7 PUSH2 0xF65 DUP5 PUSH11 0x8000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH6 0x10000000000 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x161A DUP8 DUP8 DUP8 DUP7 PUSH2 0x100 ADD MLOAD PUSH2 0x1900 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 DUP2 PUSH2 0x1630 DUP11 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 PUSH2 0x164A DUP6 DUP6 PUSH2 0x19F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1666 PUSH2 0x1661 DUP4 DUP14 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST PUSH2 0x1A21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x169D PUSH2 0x167D DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST PUSH2 0x1691 DUP6 PUSH2 0x11DC DUP10 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SWAP1 POP PUSH32 0x4ADD19BBBE358CAF4AF4A31B1299356FC4DCCF8B4CF3C87E401B0FA60062F31E DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP13 DUP2 SGT ISZERO PUSH2 0x16EA JUMPI DUP3 SWAP6 POP PUSH2 0x16EE JUMP JUMPDEST DUP3 SWAP7 POP JUMPDEST POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1635 JUMP JUMPDEST POP SWAP2 SWAP3 POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST NUMBER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x171E DUP8 DUP8 SUB PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1743 PUSH2 0x173E PUSH2 0x1731 DUP9 PUSH2 0x1ACE JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1753 DUP3 PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1767 DUP8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177B DUP8 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17A7 PUSH2 0x1792 DUP6 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST PUSH2 0x17A2 DUP8 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17B7 DUP3 PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17DC PUSH2 0x17C8 PUSH1 0x2 PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1193 DUP5 PUSH2 0x1691 DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND PUSH2 0x100 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 SSTORE DUP2 ADD MLOAD PUSH1 0x8 SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xC SSTORE PUSH2 0x180 ADD MLOAD PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP3 PUSH1 0xA EXP DUP5 MUL PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1913 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1927 DUP7 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x193B DUP4 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x194B DUP7 PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1957 PUSH2 0x13FF JUMP JUMPDEST DUP5 SLT ISZERO PUSH2 0x1975 JUMPI PUSH2 0x196E PUSH2 0x173E DUP4 PUSH2 0x11DC DUP8 PUSH2 0x1ACE JUMP JUMPDEST SWAP1 POP PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1990 PUSH2 0x1988 PUSH2 0x173E DUP5 PUSH2 0x11DC DUP8 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x19A3 DUP2 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP6 POP PUSH32 0x3CF9BD989028BFC957CA46FD34C8ED26F90D849442378EE442FCD56CF5CAC44F DUP11 DUP11 DUP11 DUP11 PUSH2 0x19D3 DUP12 PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 PUSH2 0x1A11 PUSH2 0x1A09 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x1691 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x1193 DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A34 DUP4 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A48 DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A5C DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A70 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A84 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A98 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AAC DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AC0 DUP3 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 SGT ISZERO PUSH2 0x1B1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0x1B54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2C5B JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1B74 JUMPI POP PUSH1 0x0 PUSH2 0x174 JUMP JUMPDEST PUSH5 0x733048C5A DUP3 SGT PUSH2 0x1BA7 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH11 0x1C8464F76164760000000 DUP6 SGT PUSH2 0x1C06 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH11 0x1C8464F76164760000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH13 0xF1AADDD7742E90000000000000 DUP6 SGT PUSH2 0x1C64 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH13 0xF1AADDD7742E90000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH15 0xAFE10820813D78000000000000000 DUP6 SGT PUSH2 0x1CC6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH15 0xAFE10820813D78000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2582AB704279EC00000000000000000 DUP6 SGT PUSH2 0x1D2A JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2582AB704279EC00000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x1152AAA3BF81CC000000000000000000 DUP6 SGT PUSH2 0x1D8E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x1152AAA3BF81CC000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2F16AC6C59DE70000000000000000000 DUP6 SGT PUSH2 0x1DF2 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2F16AC6C59DE70000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x4DA2CBF1BE5828000000000000000000 DUP6 SGT PUSH2 0x1E56 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x4DA2CBF1BE5828000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x63AFBE7AB2082C000000000000000000 DUP6 SGT PUSH2 0x1EBA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x63AFBE7AB2082C000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP6 SGT PUSH2 0x1F1E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x70F5A893B608861E1F58934F97AEA57D PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 DUP6 ADD SWAP3 POP DUP3 SWAP2 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP1 MUL SDIV SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 DUP2 SUB DUP4 MUL SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1F94 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x200000000000000000000000000000000 DUP4 PUSH16 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA SUB DUP4 MUL DUP2 PUSH2 0x1FC5 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1FE5 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x300000000000000000000000000000000 DUP4 PUSH16 0x99999999999999999999999999999999 SUB DUP4 MUL DUP2 PUSH2 0x2016 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x2036 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x400000000000000000000000000000000 DUP4 PUSH16 0x92492492492492492492492492492492 SUB DUP4 MUL DUP2 PUSH2 0x2067 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x2087 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x500000000000000000000000000000000 DUP4 PUSH16 0x8E38E38E38E38E38E38E38E38E38E38E SUB DUP4 MUL DUP2 PUSH2 0x20B8 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x20D8 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x600000000000000000000000000000000 DUP4 PUSH16 0x8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B SUB DUP4 MUL DUP2 PUSH2 0x2109 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x2129 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x700000000000000000000000000000000 DUP4 PUSH16 0x89D89D89D89D89D89D89D89D89D89D89 SUB DUP4 MUL DUP2 PUSH2 0x215A JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x217A JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x800000000000000000000000000000000 DUP4 PUSH16 0x88888888888888888888888888888888 SUB DUP4 MUL DUP2 PUSH2 0x21AB JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 DUP3 SLT ISZERO PUSH2 0x21EA JUMPI POP PUSH1 0x0 PUSH2 0x174 JUMP JUMPDEST DUP2 PUSH2 0x2206 JUMPI POP PUSH16 0x80000000000000000000000000000000 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 PUSH16 0x10000000000000000000000000000000 DUP4 SMOD DUP1 DUP1 MUL DUP3 SWAP1 SDIV PUSH8 0x10E1B3BE415A0000 DUP2 MUL SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP2 DUP4 MUL SDIV SWAP1 POP DUP1 PUSH8 0x5A0913F6B1E0000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22AD JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH8 0x168244FDAC78000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22DA JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x4807432BC18000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2306 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0xC0135DCA04000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2332 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x1B707B1CDC000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x235E JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x36E0F639B800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2389 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x618FEE9F800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x23B4 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x9C197DCC00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x23DE JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0xE30DCE400 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2408 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x12EBD1300 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2432 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x17499F00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x245B JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x1A9D480 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2484 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C6380 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x24AC JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C638 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x24D4 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x1AB8 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x24FB JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x17C MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2522 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH1 0x14 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2548 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP6 SWAP1 SWAP6 SUB SWAP5 PUSH8 0x21C3677C82B40000 SWAP2 SWAP1 SDIV SWAP4 DUP5 ADD SDIV DUP3 ADD PUSH16 0x80000000000000000000000000000000 ADD SWAP3 SWAP1 POP PUSH17 0x1000000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x25B7 JUMPI PUSH19 0x43CBAF42A000812488FC5C220AD7B97BF6E99E PUSH13 0xF1AADDD7742E56D32FB9F99744 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x800000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x25F9 JUMPI PUSH18 0x5D27A9F51C31B7C2F8038212A0574779991 PUSH15 0xAFE10820813D65DFE6A33C07F738F DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x400000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x263B JUMPI PUSH17 0x1B4C902E273A58678D6D3BFDB93DB96D02 PUSH16 0x2582AB704279E8EFD15E0265855C47A DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x200000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x267D JUMPI PUSH17 0x3B1CC971A9BB5B9867477440D6D157750 PUSH16 0x1152AAA3BF81CB9FDB76EAE12D029571 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x100000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x26BF JUMPI PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 PUSH16 0x2F16AC6C59DE6F8D5D6F63C1482A7C86 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x26FF JUMPI PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 PUSH16 0x4DA2CBF1BE5827F9EB3AD1AA9866EBB3 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x40000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x273F JUMPI PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 PUSH16 0x63AFBE7AB2082BA1A0AE5E4EB1B479DC DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x20000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x277F JUMPI PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x10000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x27BF JUMPI PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 PUSH16 0x783EAFEF1C0A8F3978C7F81824D62EBF DUP5 MUL SDIV SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 SDIV SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE49 DUP4 DUP4 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28DF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x28E9 DUP5 DUP5 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP PUSH2 0x28F8 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x288E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2915 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2920 DUP2 PUSH2 0x30B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2930 DUP2 PUSH2 0x30B4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2952 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD34 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2972 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x298B JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP13 ISZERO ISZERO DUP14 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 SWAP1 SWAP11 AND PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP11 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP10 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654164643A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4C697175696474793A416D6F756E74206465706F7369746564206E6F74207072 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F706F7274696F6E616C00000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654469763A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166655375623A20756E646572666C6F770000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F20736D616C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C794F776E65724572726F72000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C726561647920496E697469616C697A656400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573736573000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A2064656E6F6D696E61746F7220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74206265206C657373207468616E207A65726F0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F206C6172676500000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F544F5F544F4B454E5F42414C414E4345000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865643A2076616C75652063616E6E6F74206265206C657373207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654D756C3A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578703A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E736665724F776E6572546F5A65726F4572726F720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6D756C3A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6164643A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F46524F4D5F544F4B454E5F42414C414E434500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x7375623A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A206E756D657261746F72206361 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6E6F74206265206C657373207468616E207A65726F00000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A20646976696465206279207A65726F000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xE7 0xC8 DUP5 0xEE PUSH1 0x15 GASLIMIT PUSH23 0x9C36981B2481387CAEAC6EF4C86D6D82B57001B8544020 MUL PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP BLOCKHASH ",
				"sourceMap": "148:99:0:-;;;210:35;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;212:5:2;:18;;-1:-1:-1;;;;;;212:18:2;220:10;212:18;;;148:99:0;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80639cd441da1161005b5780639cd441da146100f3578063afd46eb514610106578063df791e5014610127578063f2fde38b1461013a57610088565b806370a082311461008d5780637b689036146100b65780638da5cb5b146100cb5780639c8f9f23146100e0575b600080fd5b6100a061009b3660046128b2565b61014d565b6040516100ad91906130ab565b60405180910390f35b6100c96100c43660046128cd565b610179565b005b6100d361018f565b6040516100ad919061299a565b6100c96100ee366004612961565b6101ab565b6100c9610101366004612979565b6103e8565b61010e6106a1565b6040516100ad9d9c9b9a99989796959493929190612aa8565b6100a0610135366004612901565b6106f6565b6100c96101483660046128b2565b610a67565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600b60205260409020545b919050565b610181610b3a565b61018b8282610b8d565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6005546003546001916000916101dc91906101d0908690607f1c63ffffffff610ce016565b9063ffffffff610d3d16565b9050600061020383600401546101d0607f8660030154901c87610ce090919063ffffffff16565b905061021b836002015461021684610d8a565b610de0565b600284015560038301546102329061021683610d8a565b6003840155336000908152600a84016020526040902054610259908563ffffffff610e5016565b336000908152600a850160205260409020556004830154610280908563ffffffff610e9216565b60048481019190915583546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff169163a9059cbb916102e2913391879101612a82565b602060405180830381600087803b1580156102fc57600080fd5b505af1158015610310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103349190810190612941565b5060018301546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb9061038f9033908590600401612a82565b602060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103e19190810190612941565b5050505050565b600160006103fe84670de0b6b3a7640000610ed1565b9050600061040f84620f4240610ed1565b9050610428836002015482610f6b90919063ffffffff16565b600384015461043e90849063ffffffff610f6b16565b1461047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612b90565b60405180910390fd5b82546040517f23b872dd00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff16906323b872dd906104db90339030908a90600401612a23565b602060405180830381600087803b1580156104f557600080fd5b505af1158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061052d9190810190612941565b5060018301546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9061058a90339030908990600401612a23565b602060405180830381600087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105dc9190810190612941565b5060008360020154600014156105fb5750600160048401556000610621565b61061e607f8560020154901c6101d0866004015489610ce090919063ffffffff16565b90505b61062f846002015484610fbe565b600285015560038401546106439083610fbe565b6003850155336000908152600a8501602052604090205461066a908263ffffffff610e9216565b336000908152600a860160205260409020556004840154610691908263ffffffff610e9216565b8460040181905550505050505050565b600154600254600354600454600554600654600754600854600954600a54600c54600d5460ff8c169b73ffffffffffffffffffffffffffffffffffffffff61010090910481169b16999897969594939291908d565b60006107006127f8565b610708610fca565b9050806020015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480156107785750806040015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156107a6576000610793868661078d87611070565b8561107d565b905061079e816113b9565b925050610866565b806040015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480156108145750806020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b15610834576000610829868661078d876113c6565b905061079e816113d3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612d00565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906323b872dd906108bc90339030908890600401612a23565b602060405180830381600087803b1580156108d657600080fd5b505af11580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090e9190810190612941565b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612f72565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a9059cbb906109989033908690600401612a82565b602060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109ea9190810190612941565b610a20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612dcb565b7f256db8090fa51c3bac981768637d5a7c46b5540644dcef89052b89dbb2f6c8ea3386868686604051610a579594939291906129e2565b60405180910390a1509392505050565b610a6f610b3a565b73ffffffffffffffffffffffffffffffffffffffff8116610abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612ecd565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790556040517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090610b2e90339084906129bb565b60405180910390a15b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612c92565b565b60015460ff1615610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612cc9565b600180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff8581169190910291909117909155600280547fffffffffffffffffffffffff000000000000000000000000000000000000000016918316919091179055610c5160636064610ed1565b60065560636007819055610c66906064610ed1565b600855610c766005612710610ed1565b600955610c9e610c8a6001620f42406113e0565b610c926113ff565b9063ffffffff610de016565b600c55610caf6127156103e86113e0565b600d555050600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055565b600082610cef57506000610d37565b82820282848281610cfc57fe5b0414610d34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612e5f565b90505b92915050565b600081610d76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612bed565b6000828481610d8157fe5b04949350505050565b600080821215610dc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612e02565b610d37826f80000000000000000000000000000000611413565b60007f8000000000000000000000000000000000000000000000000000000000000000821415610e3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612fa9565b610e498383600003611489565b9392505050565b600082821115610e8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612c24565b50900390565b600082820183811015610d34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612b59565b600080831215610f0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612fe0565b6000821215610f48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612d37565b610e49610f65846f80000000000000000000000000000000611413565b836114ff565b60006f800000000000000000000000000000008215610f9d575065010000000000909105906a80000000000000000000005b6000610fa98585611413565b9050818181610fb457fe5b0595945050505050565b6000610e498383611489565b610fd26127f8565b50604080516101a08101825260015460ff81161515825273ffffffffffffffffffffffffffffffffffffffff610100918290048116602084015260025416928201929092526003546060820152600454608082015260055460a082015260065460c082015260075460e082015260085491810191909152600954610120820152600a54610140820152600c54610160820152600d5461018082015290565b6000610d378260126115ce565b6020810151600090819081908190819073ffffffffffffffffffffffffffffffffffffffff8a811691161480156110e35750856040015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b1561110257505050506060820151608083015160c084015160016111a2565b856040015173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161480156111705750856020015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b1561083457856080015193508560600151925061119f8660c001516111936113ff565b9063ffffffff6115dd16565b91505b6000806111b28686868c8c611606565b9150915060006111e86111cc8a6101200151610c926113ff565b6111dc8c8563ffffffff610f6b16565b9063ffffffff610f6b16565b90506111fb60008263ffffffff610de016565b9050600061120d6001620186a06113e0565b90506000821315611221576000915061124a565b80611232888463ffffffff610fbe16565b1361124a57611247818863ffffffff610de016565b91505b600061126a8b610140015161125d61170c565b8d6101600151888b611710565b6101808c0151909150611283908863ffffffff610f6b16565b8113156112a7576101808b01516112a0908863ffffffff610f6b16565b90506112db565b6112bc876111dc8d61018001516111936113ff565b8112156112db576112d8876111dc8d61018001516111936113ff565b90505b6112e361170c565b6101408c01528515611325576112ff898d63ffffffff610fbe16565b60608c0152611314888463ffffffff610fbe16565b60808c015260c08b01819052611361565b611335888463ffffffff610fbe16565b60608c015261134a898d63ffffffff610fbe16565b60808c015261135b816111936113ff565b60c08c01525b61136a8b6117ee565b7f666804e599b015edcfb9de12153bf8a48aa5a84b8861b8fa88c1cf4b11974c15338d8560405161139d93929190612a54565b60405180910390a150506000039b9a5050505050505050505050565b6000610d378260066118f0565b6000610d378260066115ce565b6000610d378260126118f0565b6000610e49610f65846f80000000000000000000000000000000611413565b6f8000000000000000000000000000000090565b6000821580611420575081155b1561142d57506000610d37565b508181028183828161143b57fe5b0514158061145257508282828161144e57fe5b0514155b15610d37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612f04565b81810160008312801561149c5750600082125b80156114a757508281135b806114c857506000831380156114bd5750600082135b80156114c857508281125b15610d37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612f3b565b600081611538576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104759061303d565b7f8000000000000000000000000000000000000000000000000000000000000000831480156115865750817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff145b156115bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590613074565b8183816115c657fe5b059392505050565b6000610e498383600a0a610ed1565b60006115f7610f65846a8000000000000000000000611413565b65010000000000029392505050565b60008061161a878787866101000151611900565b9150600082816116308a8863ffffffff610fbe16565b905060005b60148110156116fc57600061164a85856119f9565b90506000611666611661838d63ffffffff6115dd16565b611a21565b9050600061169d61167d8c8563ffffffff610f6b16565b611691856111dc898763ffffffff610f6b16565b9063ffffffff610fbe16565b90507f4add19bbbe358caf4af4a31b1299356fc4dccf8b4cf3c87e401b0fa60062f31e8284836040516116d293929190612b20565b60405180910390a18c8113156116ea578295506116ee565b8296505b505050806001019050611635565b5091925050509550959350505050565b4390565b60008061171e878703610d8a565b9050600061174361173e61173188611ace565b849063ffffffff610f6b16565b6121b8565b9050600061175382610c926113ff565b90506000611767878363ffffffff610f6b16565b9050600061177b878563ffffffff610f6b16565b905060006117a7611792858b63ffffffff6115dd16565b6117a2878b63ffffffff6115dd16565b610fbe565b905060006117b7826111936113ff565b905060006117dc6117c860026127c6565b61119384611691898963ffffffff610fbe16565b9e9d5050505050505050505050505050565b80516001805460208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909116921515929092177fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff9384168102919091179091556040830151600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909316179091556060820151600355608082015160045560a082015160055560c082015160065560e0820151600755810151600855610120810151600955610140810151600a55610160810151600c556101800151600d55565b6000610e4982600a0a84026127e2565b600080611913848763ffffffff610f6b16565b90506000611927868363ffffffff6115dd16565b9050600061193b838863ffffffff6115dd16565b9050600061194b86610c926113ff565b905060006119576113ff565b8412156119755761196e61173e836111dc87611ace565b9050611993565b61199061198861173e846111dc87611ace565b6111936113ff565b90505b6119a3818963ffffffff610f6b16565b95507f3cf9bd989028bfc957ca46fd34c8ed26f90d849442378ee442fcd56cf5cac44f8a8a8a8a6119d38b6127e2565b6040516119e4959493929190612b36565b60405180910390a15050505050949350505050565b6000610e49611a11611a096113ff565b6116916113ff565b611193858563ffffffff610fbe16565b600080611a34838063ffffffff610f6b16565b90506000611a48848363ffffffff610f6b16565b90506000611a5c828063ffffffff610f6b16565b90506000611a70828063ffffffff610f6b16565b90506000611a84828063ffffffff610f6b16565b90506000611a98828063ffffffff610f6b16565b90506000611aac828063ffffffff610f6b16565b90506000611ac0828863ffffffff610f6b16565b9a9950505050505050505050565b60006f80000000000000000000000000000000821315611b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612d94565b60008213611b54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612c5b565b6f80000000000000000000000000000000821415611b7457506000610174565b640733048c5a8213611ba757507fffffffffffffffffffffffffffffffe010000000000000000000000000000000610174565b60008060006a01c8464f761647600000008513611c06577ffffffffffffffffffffffffffffffff000000000000000000000000000000000909301926a01c8464f761647600000006f8000000000000000000000000000000086020594505b6cf1aaddd7742e900000000000008513611c64577ffffffffffffffffffffffffffffffff800000000000000000000000000000000909301926cf1aaddd7742e900000000000006f8000000000000000000000000000000086020594505b6e0afe10820813d780000000000000008513611cc6577ffffffffffffffffffffffffffffffffc00000000000000000000000000000000909301926e0afe10820813d780000000000000006f8000000000000000000000000000000086020594505b6f02582ab704279ec000000000000000008513611d2a577ffffffffffffffffffffffffffffffffe00000000000000000000000000000000909301926f02582ab704279ec000000000000000006f8000000000000000000000000000000086020594505b6f1152aaa3bf81cc0000000000000000008513611d8e577fffffffffffffffffffffffffffffffff00000000000000000000000000000000909301926f1152aaa3bf81cc0000000000000000006f8000000000000000000000000000000086020594505b6f2f16ac6c59de700000000000000000008513611df2577fffffffffffffffffffffffffffffffff80000000000000000000000000000000909301926f2f16ac6c59de700000000000000000006f8000000000000000000000000000000086020594505b6f4da2cbf1be58280000000000000000008513611e56577fffffffffffffffffffffffffffffffffc0000000000000000000000000000000909301926f4da2cbf1be58280000000000000000006f8000000000000000000000000000000086020594505b6f63afbe7ab2082c0000000000000000008513611eba577fffffffffffffffffffffffffffffffffe0000000000000000000000000000000909301926f63afbe7ab2082c0000000000000000006f8000000000000000000000000000000086020594505b6f70f5a893b608861e1f58934f97aea57d8513611f1e577ffffffffffffffffffffffffffffffffff0000000000000000000000000000000909301926f70f5a893b608861e1f58934f97aea57d6f8000000000000000000000000000000086020594505b7fffffffffffffffffffffffffffffffff80000000000000000000000000000000850192508291506f80000000000000000000000000000000828002059050700100000000000000000000000000000000838103830205840193506f8000000000000000000000000000000081830281611f9457fe5b059150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281611fc557fe5b05840193506f8000000000000000000000000000000081830281611fe557fe5b059150700300000000000000000000000000000000836f999999999999999999999999999999990383028161201657fe5b05840193506f800000000000000000000000000000008183028161203657fe5b059150700400000000000000000000000000000000836f924924924924924924924924924924920383028161206757fe5b05840193506f800000000000000000000000000000008183028161208757fe5b059150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302816120b857fe5b05840193506f80000000000000000000000000000000818302816120d857fe5b059150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b0383028161210957fe5b05840193506f800000000000000000000000000000008183028161212957fe5b059150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d890383028161215a57fe5b05840193506f800000000000000000000000000000008183028161217a57fe5b059150700800000000000000000000000000000000836f88888888888888888888888888888888038302816121ab57fe5b0584019350505050919050565b60007fffffffffffffffffffffffffffffffe0100000000000000000000000000000008212156121ea57506000610174565b8161220657506f80000000000000000000000000000000610174565b6000821315612241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590612e96565b6f800000000000000000000000000000006f1000000000000000000000000000000083078080028290056710e1b3be415a0000810293909301929091818302059050806705a0913f6b1e000002830192506f80000000000000000000000000000000828202816122ad57fe5b05905080670168244fdac7800002830192506f80000000000000000000000000000000828202816122da57fe5b05905080664807432bc1800002830192506f800000000000000000000000000000008282028161230657fe5b05905080660c0135dca0400002830192506f800000000000000000000000000000008282028161233257fe5b059050806601b707b1cdc00002830192506f800000000000000000000000000000008282028161235e57fe5b059050806536e0f639b80002830192506f800000000000000000000000000000008282028161238957fe5b05905080650618fee9f80002830192506f80000000000000000000000000000000828202816123b457fe5b05905080649c197dcc0002830192506f80000000000000000000000000000000828202816123de57fe5b05905080640e30dce40002830192506f800000000000000000000000000000008282028161240857fe5b0590508064012ebd130002830192506f800000000000000000000000000000008282028161243257fe5b059050806317499f0002830192506f800000000000000000000000000000008282028161245b57fe5b059050806301a9d48002830192506f800000000000000000000000000000008282028161248457fe5b05905080621c638002830192506f80000000000000000000000000000000828202816124ac57fe5b059050806201c63802830192506f80000000000000000000000000000000828202816124d457fe5b05905080611ab802830192506f80000000000000000000000000000000828202816124fb57fe5b0590508061017c02830192506f800000000000000000000000000000008282028161252257fe5b05905080601402830192506f800000000000000000000000000000008282028161254857fe5b600095909503946721c3677c82b400009190059384010582016f80000000000000000000000000000000019290507010000000000000000000000000000000008416156125b7577243cbaf42a000812488fc5c220ad7b97bf6e99e6cf1aaddd7742e56d32fb9f9974484020592505b7008000000000000000000000000000000008416156125f9577105d27a9f51c31b7c2f8038212a05747799916e0afe10820813d65dfe6a33c07f738f84020592505b70040000000000000000000000000000000084161561263b57701b4c902e273a58678d6d3bfdb93db96d026f02582ab704279e8efd15e0265855c47a84020592505b70020000000000000000000000000000000084161561267d577003b1cc971a9bb5b9867477440d6d1577506f1152aaa3bf81cb9fdb76eae12d02957184020592505b7001000000000000000000000000000000008416156126bf5770015bf0a8b1457695355fb8ac404e7a79e36f2f16ac6c59de6f8d5d6f63c1482a7c8684020592505b6f800000000000000000000000000000008416156126ff576fd3094c70f034de4b96ff7d5b6f99fcd86f4da2cbf1be5827f9eb3ad1aa9866ebb384020592505b6f4000000000000000000000000000000084161561273f576fa45af1e1f40c333b3de1db4dd55f29a76f63afbe7ab2082ba1a0ae5e4eb1b479dc84020592505b6f2000000000000000000000000000000084161561277f576f910b022db7ae67ce76b441c27035c6a16f70f5a893b608861e1f58934f97aea57d84020592505b6f100000000000000000000000000000008416156127bf576f88415abbe9a76bead8d00cf112e4d4a86f783eafef1c0a8f3978c7f81824d62ebf84020592505b5050919050565b6000610d37826f80000000000000000000000000000000611413565b6f80000000000000000000000000000000900590565b604051806101a00160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d3757600080fd5b6000602082840312156128c3578081fd5b610e49838361288e565b600080604083850312156128df578081fd5b6128e9848461288e565b91506128f8846020850161288e565b90509250929050565b600080600060608486031215612915578081fd5b8335612920816130b4565b92506020840135612930816130b4565b929592945050506040919091013590565b600060208284031215612952578081fd5b81518015158114610d34578182fd5b600060208284031215612972578081fd5b5035919050565b6000806040838503121561298b578182fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b9c15158d5273ffffffffffffffffffffffffffffffffffffffff9b8c1660208e015299909a1660408c015260608b019790975260808a019590955260a089019390935260c088019190915260e08701526101008601526101208501526101408401526101608301919091526101808201526101a00190565b9283526020830191909152604082015260600190565b948552602085019390935260408401919091526060830152608082015260a00190565b60208082526011908201527f736166654164643a206f766572666c6f77000000000000000000000000000000604082015260600190565b6020808252602a908201527f4c697175696474793a416d6f756e74206465706f7369746564206e6f7420707260408201527f6f706f7274696f6e616c00000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f736166654469763a206f766572666c6f77000000000000000000000000000000604082015260600190565b60208082526012908201527f736166655375623a20756e646572666c6f770000000000000000000000000000604082015260600190565b60208082526013908201527f6c6e3a2076616c756520746f6f20736d616c6c00000000000000000000000000604082015260600190565b6020808252600e908201527f4f6e6c794f776e65724572726f72000000000000000000000000000000000000604082015260600190565b60208082526013908201527f416c726561647920496e697469616c697a656400000000000000000000000000604082015260600190565b60208082526017908201527f496e76616c696420746f6b656e20616464726573736573000000000000000000604082015260600190565b60208082526038908201527f746f46697865642875696e742c75696e74293a2064656e6f6d696e61746f722060408201527f63616e6e6f74206265206c657373207468616e207a65726f0000000000000000606082015260800190565b60208082526013908201527f6c6e3a2076616c756520746f6f206c6172676500000000000000000000000000604082015260600190565b6020808252601d908201527f494e53554646494349454e545f544f5f544f4b454e5f42414c414e4345000000604082015260600190565b60208082526027908201527f746f46697865643a2076616c75652063616e6e6f74206265206c65737320746860408201527f616e207a65726f00000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f736166654d756c3a206f766572666c6f77000000000000000000000000000000604082015260600190565b60208082526014908201527f6578703a2076616c756520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526018908201527f5472616e736665724f776e6572546f5a65726f4572726f720000000000000000604082015260600190565b6020808252600e908201527f5f6d756c3a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f5f6164643a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252601f908201527f494e53554646494349454e545f46524f4d5f544f4b454e5f42414c414e434500604082015260600190565b60208082526014908201527f7375623a2076616c756520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526036908201527f746f46697865642875696e742c75696e74293a206e756d657261746f7220636160408201527f6e6e6f74206265206c657373207468616e207a65726f00000000000000000000606082015260800190565b60208082526014908201527f5f6469763a20646976696465206279207a65726f000000000000000000000000604082015260600190565b6020808252600e908201527f5f6469763a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610b3757600080fdfea365627a7a72315820e7c884ee601545769c36981b2481387caeac6ef4c86d6d82b57001b8544020026c6578706572696d656e74616cf564736f6c634300050d0040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CD441DA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xAFD46EB5 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13A JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x7B689036 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x28B2 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x30AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x28CD JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x299A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x2979 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AA8 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x2901 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x28B2 JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x18B DUP3 DUP3 PUSH2 0xB8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1D0 SWAP1 DUP7 SWAP1 PUSH1 0x7F SHR PUSH4 0xFFFFFFFF PUSH2 0xCE0 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD3D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x203 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1D0 PUSH1 0x7F DUP7 PUSH1 0x3 ADD SLOAD SWAP1 SHR DUP8 PUSH2 0xCE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x21B DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x216 DUP5 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x232 SWAP1 PUSH2 0x216 DUP4 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x259 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE50 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x280 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE92 AND JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x2E2 SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x310 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x334 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x38F SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x3E1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x3FE DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40F DUP5 PUSH3 0xF4240 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP PUSH2 0x428 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xF6B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x43E SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST EQ PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x4DB SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x52D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x58A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5DC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5FB JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0x0 PUSH2 0x621 JUMP JUMPDEST PUSH2 0x61E PUSH1 0x7F DUP6 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x1D0 DUP7 PUSH1 0x4 ADD SLOAD DUP10 PUSH2 0xCE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x62F DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x643 SWAP1 DUP4 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x66A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE92 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x691 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE92 AND JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xFF DUP13 AND SWAP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP14 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x700 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x708 PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x778 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 PUSH2 0x793 DUP7 DUP7 PUSH2 0x78D DUP8 PUSH2 0x1070 JUMP JUMPDEST DUP6 PUSH2 0x107D JUMP JUMPDEST SWAP1 POP PUSH2 0x79E DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x866 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x814 JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 PUSH2 0x829 DUP7 DUP7 PUSH2 0x78D DUP8 PUSH2 0x13C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x79E DUP2 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x8BC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x90E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x998 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x9EA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2941 JUMP JUMPDEST PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2DCB JUMP JUMPDEST PUSH32 0x256DB8090FA51C3BAC981768637D5A7C46B5540644DCEF89052B89DBB2F6C8EA CALLER DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA57 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA6F PUSH2 0xB3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2ECD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH2 0xB2E SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0x29BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2C92 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND PUSH2 0x100 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xC51 PUSH1 0x63 PUSH1 0x64 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x63 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0xC66 SWAP1 PUSH1 0x64 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xC76 PUSH1 0x5 PUSH2 0x2710 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xC9E PUSH2 0xC8A PUSH1 0x1 PUSH3 0xF4240 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE0 AND JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xCAF PUSH2 0x2715 PUSH2 0x3E8 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCEF JUMPI POP PUSH1 0x0 PUSH2 0xD37 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xCFC JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2E5F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xD81 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0xD37 DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0xE49 DUP4 DUP4 PUSH1 0x0 SUB PUSH2 0x1489 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2C24 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2B59 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2FE0 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST PUSH2 0xE49 PUSH2 0xF65 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST DUP4 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 ISZERO PUSH2 0xF9D JUMPI POP PUSH6 0x10000000000 SWAP1 SWAP2 SDIV SWAP1 PUSH11 0x8000000000000000000000 JUMPDEST PUSH1 0x0 PUSH2 0xFA9 DUP6 DUP6 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 PUSH2 0xFB4 JUMPI INVALID JUMPDEST SDIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0xFD2 PUSH2 0x27F8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 SLOAD AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x9 SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xC SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH2 0x180 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x12 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x10E3 JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1102 JUMPI POP POP POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x1 PUSH2 0x11A2 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1170 JUMPI POP DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x834 JUMPI DUP6 PUSH1 0x80 ADD MLOAD SWAP4 POP DUP6 PUSH1 0x60 ADD MLOAD SWAP3 POP PUSH2 0x119F DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11B2 DUP7 DUP7 DUP7 DUP13 DUP13 PUSH2 0x1606 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x11E8 PUSH2 0x11CC DUP11 PUSH2 0x120 ADD MLOAD PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x11DC DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH2 0x11FB PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xDE0 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x120D PUSH1 0x1 PUSH3 0x186A0 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x124A JUMP JUMPDEST DUP1 PUSH2 0x1232 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SGT PUSH2 0x124A JUMPI PUSH2 0x1247 DUP2 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xDE0 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x126A DUP12 PUSH2 0x140 ADD MLOAD PUSH2 0x125D PUSH2 0x170C JUMP JUMPDEST DUP14 PUSH2 0x160 ADD MLOAD DUP9 DUP12 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x180 DUP13 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1283 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x12A7 JUMPI PUSH2 0x180 DUP12 ADD MLOAD PUSH2 0x12A0 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x12BC DUP8 PUSH2 0x11DC DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x12DB JUMPI PUSH2 0x12D8 DUP8 PUSH2 0x11DC DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x12E3 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x140 DUP13 ADD MSTORE DUP6 ISZERO PUSH2 0x1325 JUMPI PUSH2 0x12FF DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x1314 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xC0 DUP12 ADD DUP2 SWAP1 MSTORE PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x1335 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x134A DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH2 0x135B DUP2 PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MSTORE JUMPDEST PUSH2 0x136A DUP12 PUSH2 0x17EE JUMP JUMPDEST PUSH32 0x666804E599B015EDCFB9DE12153BF8A48AA5A84B8861B8FA88C1CF4B11974C15 CALLER DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x139D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 SUB SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x6 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x6 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH1 0x12 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 PUSH2 0xF65 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x1420 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x142D JUMPI POP PUSH1 0x0 PUSH2 0xD37 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x143B JUMPI INVALID JUMPDEST SDIV EQ ISZERO DUP1 PUSH2 0x1452 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x144E JUMPI INVALID JUMPDEST SDIV EQ ISZERO JUMPDEST ISZERO PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2F04 JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x149C JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0x14A7 JUMPI POP DUP3 DUP2 SGT JUMPDEST DUP1 PUSH2 0x14C8 JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x14BD JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 ISZERO PUSH2 0x14C8 JUMPI POP DUP3 DUP2 SLT JUMPDEST ISZERO PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x303D JUMP JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ DUP1 ISZERO PUSH2 0x1586 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ JUMPDEST ISZERO PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x3074 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x15C6 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH1 0xA EXP PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F7 PUSH2 0xF65 DUP5 PUSH11 0x8000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH6 0x10000000000 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x161A DUP8 DUP8 DUP8 DUP7 PUSH2 0x100 ADD MLOAD PUSH2 0x1900 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 DUP2 PUSH2 0x1630 DUP11 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 PUSH2 0x164A DUP6 DUP6 PUSH2 0x19F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1666 PUSH2 0x1661 DUP4 DUP14 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST PUSH2 0x1A21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x169D PUSH2 0x167D DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST PUSH2 0x1691 DUP6 PUSH2 0x11DC DUP10 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SWAP1 POP PUSH32 0x4ADD19BBBE358CAF4AF4A31B1299356FC4DCCF8B4CF3C87E401B0FA60062F31E DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP13 DUP2 SGT ISZERO PUSH2 0x16EA JUMPI DUP3 SWAP6 POP PUSH2 0x16EE JUMP JUMPDEST DUP3 SWAP7 POP JUMPDEST POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1635 JUMP JUMPDEST POP SWAP2 SWAP3 POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST NUMBER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x171E DUP8 DUP8 SUB PUSH2 0xD8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1743 PUSH2 0x173E PUSH2 0x1731 DUP9 PUSH2 0x1ACE JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1753 DUP3 PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1767 DUP8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177B DUP8 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17A7 PUSH2 0x1792 DUP6 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST PUSH2 0x17A2 DUP8 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17B7 DUP3 PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17DC PUSH2 0x17C8 PUSH1 0x2 PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1193 DUP5 PUSH2 0x1691 DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND PUSH2 0x100 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 SSTORE DUP2 ADD MLOAD PUSH1 0x8 SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xC SSTORE PUSH2 0x180 ADD MLOAD PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP3 PUSH1 0xA EXP DUP5 MUL PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1913 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1927 DUP7 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x193B DUP4 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x15DD AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x194B DUP7 PUSH2 0xC92 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1957 PUSH2 0x13FF JUMP JUMPDEST DUP5 SLT ISZERO PUSH2 0x1975 JUMPI PUSH2 0x196E PUSH2 0x173E DUP4 PUSH2 0x11DC DUP8 PUSH2 0x1ACE JUMP JUMPDEST SWAP1 POP PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1990 PUSH2 0x1988 PUSH2 0x173E DUP5 PUSH2 0x11DC DUP8 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1193 PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x19A3 DUP2 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP6 POP PUSH32 0x3CF9BD989028BFC957CA46FD34C8ED26F90D849442378EE442FCD56CF5CAC44F DUP11 DUP11 DUP11 DUP11 PUSH2 0x19D3 DUP12 PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 PUSH2 0x1A11 PUSH2 0x1A09 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x1691 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x1193 DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xFBE AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A34 DUP4 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A48 DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A5C DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A70 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A84 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A98 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AAC DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AC0 DUP3 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF6B AND JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 SGT ISZERO PUSH2 0x1B1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0x1B54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2C5B JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1B74 JUMPI POP PUSH1 0x0 PUSH2 0x174 JUMP JUMPDEST PUSH5 0x733048C5A DUP3 SGT PUSH2 0x1BA7 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH11 0x1C8464F76164760000000 DUP6 SGT PUSH2 0x1C06 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH11 0x1C8464F76164760000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH13 0xF1AADDD7742E90000000000000 DUP6 SGT PUSH2 0x1C64 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH13 0xF1AADDD7742E90000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH15 0xAFE10820813D78000000000000000 DUP6 SGT PUSH2 0x1CC6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH15 0xAFE10820813D78000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2582AB704279EC00000000000000000 DUP6 SGT PUSH2 0x1D2A JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2582AB704279EC00000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x1152AAA3BF81CC000000000000000000 DUP6 SGT PUSH2 0x1D8E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x1152AAA3BF81CC000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2F16AC6C59DE70000000000000000000 DUP6 SGT PUSH2 0x1DF2 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2F16AC6C59DE70000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x4DA2CBF1BE5828000000000000000000 DUP6 SGT PUSH2 0x1E56 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x4DA2CBF1BE5828000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x63AFBE7AB2082C000000000000000000 DUP6 SGT PUSH2 0x1EBA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x63AFBE7AB2082C000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP6 SGT PUSH2 0x1F1E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x70F5A893B608861E1F58934F97AEA57D PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 DUP6 ADD SWAP3 POP DUP3 SWAP2 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP1 MUL SDIV SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 DUP2 SUB DUP4 MUL SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1F94 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x200000000000000000000000000000000 DUP4 PUSH16 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA SUB DUP4 MUL DUP2 PUSH2 0x1FC5 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1FE5 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x300000000000000000000000000000000 DUP4 PUSH16 0x99999999999999999999999999999999 SUB DUP4 MUL DUP2 PUSH2 0x2016 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x2036 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x400000000000000000000000000000000 DUP4 PUSH16 0x92492492492492492492492492492492 SUB DUP4 MUL DUP2 PUSH2 0x2067 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x2087 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x500000000000000000000000000000000 DUP4 PUSH16 0x8E38E38E38E38E38E38E38E38E38E38E SUB DUP4 MUL DUP2 PUSH2 0x20B8 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x20D8 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x600000000000000000000000000000000 DUP4 PUSH16 0x8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B SUB DUP4 MUL DUP2 PUSH2 0x2109 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x2129 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x700000000000000000000000000000000 DUP4 PUSH16 0x89D89D89D89D89D89D89D89D89D89D89 SUB DUP4 MUL DUP2 PUSH2 0x215A JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x217A JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x800000000000000000000000000000000 DUP4 PUSH16 0x88888888888888888888888888888888 SUB DUP4 MUL DUP2 PUSH2 0x21AB JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 DUP3 SLT ISZERO PUSH2 0x21EA JUMPI POP PUSH1 0x0 PUSH2 0x174 JUMP JUMPDEST DUP2 PUSH2 0x2206 JUMPI POP PUSH16 0x80000000000000000000000000000000 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 PUSH16 0x10000000000000000000000000000000 DUP4 SMOD DUP1 DUP1 MUL DUP3 SWAP1 SDIV PUSH8 0x10E1B3BE415A0000 DUP2 MUL SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP2 DUP4 MUL SDIV SWAP1 POP DUP1 PUSH8 0x5A0913F6B1E0000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22AD JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH8 0x168244FDAC78000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22DA JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x4807432BC18000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2306 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0xC0135DCA04000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2332 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x1B707B1CDC000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x235E JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x36E0F639B800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2389 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x618FEE9F800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x23B4 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x9C197DCC00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x23DE JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0xE30DCE400 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2408 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x12EBD1300 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2432 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x17499F00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x245B JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x1A9D480 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2484 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C6380 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x24AC JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C638 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x24D4 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x1AB8 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x24FB JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x17C MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2522 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH1 0x14 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2548 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP6 SWAP1 SWAP6 SUB SWAP5 PUSH8 0x21C3677C82B40000 SWAP2 SWAP1 SDIV SWAP4 DUP5 ADD SDIV DUP3 ADD PUSH16 0x80000000000000000000000000000000 ADD SWAP3 SWAP1 POP PUSH17 0x1000000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x25B7 JUMPI PUSH19 0x43CBAF42A000812488FC5C220AD7B97BF6E99E PUSH13 0xF1AADDD7742E56D32FB9F99744 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x800000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x25F9 JUMPI PUSH18 0x5D27A9F51C31B7C2F8038212A0574779991 PUSH15 0xAFE10820813D65DFE6A33C07F738F DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x400000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x263B JUMPI PUSH17 0x1B4C902E273A58678D6D3BFDB93DB96D02 PUSH16 0x2582AB704279E8EFD15E0265855C47A DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x200000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x267D JUMPI PUSH17 0x3B1CC971A9BB5B9867477440D6D157750 PUSH16 0x1152AAA3BF81CB9FDB76EAE12D029571 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x100000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x26BF JUMPI PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 PUSH16 0x2F16AC6C59DE6F8D5D6F63C1482A7C86 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x26FF JUMPI PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 PUSH16 0x4DA2CBF1BE5827F9EB3AD1AA9866EBB3 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x40000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x273F JUMPI PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 PUSH16 0x63AFBE7AB2082BA1A0AE5E4EB1B479DC DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x20000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x277F JUMPI PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x10000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x27BF JUMPI PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 PUSH16 0x783EAFEF1C0A8F3978C7F81824D62EBF DUP5 MUL SDIV SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x1413 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 SDIV SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE49 DUP4 DUP4 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28DF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x28E9 DUP5 DUP5 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP PUSH2 0x28F8 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x288E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2915 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2920 DUP2 PUSH2 0x30B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2930 DUP2 PUSH2 0x30B4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2952 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD34 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2972 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x298B JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP13 ISZERO ISZERO DUP14 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 SWAP1 SWAP11 AND PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP11 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP10 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654164643A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4C697175696474793A416D6F756E74206465706F7369746564206E6F74207072 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F706F7274696F6E616C00000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654469763A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166655375623A20756E646572666C6F770000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F20736D616C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C794F776E65724572726F72000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C726561647920496E697469616C697A656400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573736573000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A2064656E6F6D696E61746F7220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74206265206C657373207468616E207A65726F0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F206C6172676500000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F544F5F544F4B454E5F42414C414E4345000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865643A2076616C75652063616E6E6F74206265206C657373207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654D756C3A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578703A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E736665724F776E6572546F5A65726F4572726F720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6D756C3A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6164643A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F46524F4D5F544F4B454E5F42414C414E434500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x7375623A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A206E756D657261746F72206361 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6E6F74206265206C657373207468616E207A65726F00000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A20646976696465206279207A65726F000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xE7 0xC8 DUP5 0xEE PUSH1 0x15 GASLIMIT PUSH23 0x9C36981B2481387CAEAC6EF4C86D6D82B57001B8544020 MUL PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP BLOCKHASH ",
				"sourceMap": "148:99:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;148:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:196:1;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;543:141:3;;;;;;;;;:::i;:::-;;50:20:2;;;:::i;:::-;;;;;;;;2536:1002:1;;;;;;;;;:::i;845:1544::-;;;;;;;;;:::i;264:28:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;492:1572:4;;;;;;;;;:::i;320:293:2:-;;;;;;;;;:::i;380:196:1:-;538:31;;;461:7;538:31;;;:22;:31;;;;;;380:196;;;;:::o;543:141:3:-;274:22:2;:20;:22::i;:::-;647:30:3;658:8;668;647:10;:30::i;:::-;543:141;;:::o;50:20:2:-;;;;;;:::o;2536:1002:1:-;2843:7;;2818;;2679:6;;2648:28;;2793:58;;2843:7;2793:41;;:8;;2830:3;2810:23;2793:41;:16;:41;:::i;:::-;:49;:58;:49;:58;:::i;:::-;2774:77;;2861:16;2880:58;2930:5;:7;;;2880:41;2917:3;2905:5;:7;;;2897:23;;2880:8;:16;;:41;;;;:::i;:58::-;2861:77;;3003:57;3020:5;:7;;;3029:30;3050:8;3029:20;:30::i;:::-;3003:16;:57::i;:::-;2993:7;;;:67;3097:7;;;;3080:57;;3106:30;3127:8;3106:20;:30::i;3080:57::-;3070:7;;;:67;3248:10;3225:34;;;;:22;;;:34;;;;;;:74;;3281:8;3225:74;:42;:74;:::i;:::-;3211:10;3188:34;;;;:22;;;:34;;;;;:111;3319:7;;;;:25;;3335:8;3319:25;:15;:25;:::i;:::-;3309:7;;;;:35;;;;3422:14;;3415:53;;;;;3422:14;;;;;;;3415:31;;:53;;3447:10;;3459:8;;3415:53;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3415:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3415:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3415:53:1;;;;;;;;;-1:-1:-1;3485:14:1;;;;3478:53;;;;;3485:14;;;;;3478:31;;:53;;3510:10;;3522:8;;3478:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3478:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3478:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3478:53:1;;;;;;;;;;2536:1002;;;;:::o;845:1544::-;1003:6;972:28;1041:38;1062:8;1072:6;1041:20;:38::i;:::-;1019:60;;1089:19;1111:37;1132:8;1142:5;1111:20;:37::i;:::-;1089:59;;1296:25;1313:5;:7;;;1296:12;:16;;:25;;;;:::i;:::-;1284:7;;;;1267:25;;:12;;:25;:16;:25;:::i;:::-;:54;1246:143;;;;;;;;;;;;;;;;;;;;;;1485:14;;1478:72;;;;;1485:14;;;;;;;1478:35;;:72;;1514:10;;1534:4;;1541:8;;1478:72;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1478:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1478:72:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1478:72:1;;;;;;;;;-1:-1:-1;1567:14:1;;;;1560:72;;;;;1567:14;;;;;1560:35;;:72;;1596:10;;1616:4;;1623:8;;1560:72;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1560:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1560:72:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1560:72:1;;;;;;;;;;1769:24;1807:5;:7;;;1818:1;1807:12;1803:196;;;-1:-1:-1;1879:1:1;1869:7;;;:11;1854:1;1803:196;;;1930:58;1984:3;1972:5;:7;;;1964:23;;1930:25;1947:5;:7;;;1930:8;:16;;:25;;;;:::i;:58::-;1911:77;;1803:196;2063:39;2080:5;:7;;;2089:12;2063:16;:39::i;:::-;2053:7;;;:49;2139:7;;;;2122:39;;2148:12;2122:16;:39::i;:::-;2112:7;;;:49;2270:10;2247:34;;;;:22;;;:34;;;;;;:82;;2303:16;2247:82;:42;:82;:::i;:::-;2233:10;2210:34;;;;:22;;;:34;;;;;:119;2349:7;;;;:33;;2365:16;2349:33;:15;:33;:::i;:::-;2339:5;:7;;:43;;;;845:1544;;;;;;:::o;264:28:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;492:1572:4:-;620:22;658:27;;:::i;:::-;688:18;:16;:18::i;:::-;658:48;;734:5;:14;;;721:27;;:9;:27;;;:56;;;;;763:5;:14;;;752:25;;:7;:25;;;721:56;717:727;;;793:26;822:139;845:9;872:7;897:27;917:6;897:19;:27::i;:::-;942:5;822;:139::i;:::-;793:168;;992:43;1015:19;992:22;:43::i;:::-;975:60;;717:727;;;;1068:5;:14;;;1055:27;;:9;:27;;;:56;;;;;1097:5;:14;;;1086:25;;:7;:25;;;1055:56;1052:392;;;1127:26;1156:140;1179:9;1206:7;1231:28;1252:6;1231:20;:28::i;1156:140::-;1127:169;;1327:42;1349:19;1327:21;:42::i;1052:392::-;1400:33;;;;;;;;;;;1052:392;1501:65;;;;;:30;;;;;;:65;;1532:10;;1552:4;;1559:6;;1501:65;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1501:65:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1501:65:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1501:65:4;;;;;;;;;1480:143;;;;;;;;;;;;;;1742:52;;;;;:24;;;;;;:52;;1767:10;;1779:14;;1742:52;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1742:52:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1742:52:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1742:52:4;;;;;;;;;1633:216;;;;;;;;;;;;;;1887:138;1913:10;1937:9;1960:7;1981:6;2001:14;1887:138;;;;;;;;;;;;;;;;;;;-1:-1:-1;492:1572:4;;;;;:::o;320:293:2:-;274:22;:20;:22::i;:::-;416;;;412:195;;454:34;;;;;;;;;;;412:195;519:5;:16;;;;;;;;;;554:42;;;;;;575:10;;519:16;;554:42;;;;;;;;;;412:195;320:293;:::o;619:156::-;713:5;;;;699:10;:19;695:74;;734:24;;;;;;;;;;;695:74;619:156::o;690:800:3:-;799:6;:20;;;798:21;777:87;;;;;;;;;;;;;;875:6;:26;;;;;;;;;;;;;;;;;;;;911:15;:26;;;;;;;;;;;;;962:47;991:2;1004:3;962:20;:47::i;:::-;947:12;:62;1089:2;1059:19;:33;;;1120:47;;1162:3;1120:20;:47::i;:::-;1102:15;:65;1190:48;1219:1;1231:5;1190:20;:48::i;:::-;1177:10;:61;1275:94;1311:48;1177:6;1350:7;1311:20;:48::i;:::-;1275:18;:16;:18::i;:::-;:22;:94;:22;:94;:::i;:::-;1261:11;:108;1397:49;1425:5;1440:4;1397:20;:49::i;:::-;1379:15;:67;-1:-1:-1;;1379:6:3;1456:27;;;;;;;;690:800::o;53:282:9:-;139:7;166:6;162:45;;-1:-1:-1;195:1:9;188:8;;162:45;228:5;;;232:1;228;:5;:1;247:5;;;;;:10;243:68;;273:27;;;;;;;;;;;243:68;327:1;-1:-1:-1;53:282:9;;;;;:::o;341:224::-;427:7;454:6;450:64;;476:27;;;;;;;;;;;450:64;523:9;539:1;535;:5;;;;;;;341:224;-1:-1:-1;;;;341:224:9:o;4349:216:8:-;4400:8;4443:1;4431;4424:21;4420:101;;;4461:49;;;;;;;;;;;4420:101;4534:24;4546:1;794:66;4534:4;:24::i;1936:186::-;1992:8;928:66;2016:1;:18;2012:79;;;2050:30;;;;;;;;;;;2012:79;2104:11;2109:1;2113;2112:2;;2104:4;:11::i;:::-;2100:15;1936:186;-1:-1:-1;;;1936:186:8:o;571:201:9:-;657:7;688:1;684;:5;680:64;;;705:28;;;;;;;;;;;680:64;-1:-1:-1;760:5:9;;;571:201::o;778:223::-;864:7;899:5;;;918;;;914:63;;;939:27;;;;;;;;;;;4715:386:8;4777:8;4820:1;4808;4801:21;4797:116;;;4838:64;;;;;;;;;;;4797:116;4945:1;4933;4926:21;4922:118;;;4963:66;;;;;;;;;;;4922:118;5053:41;5058:24;5070:1;794:66;5058:4;:24::i;:::-;5091:1;5053:4;:41::i;2219:252::-;2275:8;794:66;2330:6;;2326:73;;-1:-1:-1;2357:5:8;2352:10;;;;2383:5;2326:73;2409:14;2426:10;2431:1;2434;2426:4;:10::i;:::-;2409:27;;2460:4;2450:7;:14;;;;;;;2219:252;-1:-1:-1;;;;;2219:252:8:o;1748:97::-;1804:8;1828:10;1833:1;1836;1828:4;:10::i;299:125:3:-;361:27;;:::i;:::-;-1:-1:-1;404:13:3;;;;;;;;411:6;404:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:125;:::o;182:177:11:-;265:18;306:46;331:6;125:2;306:24;:46::i;2070:2553:4:-;2434:14;;;;2237:21;;;;;;;;;;2421:27;;;;;;;:56;;;;;2463:5;:14;;;2452:25;;:7;:25;;;2421:56;2417:433;;;-1:-1:-1;;;;2497:7:4;;;;2522;;;;2551:11;;;;2586:4;2417:433;;;2623:5;:14;;;2610:27;;:9;:27;;;:56;;;;;2652:5;:14;;;2641:25;;:7;:25;;;2610:56;2607:243;;;2686:5;:7;;;2682:11;;2711:5;:7;;;2707:11;;2740:35;2763:5;:11;;;2740:18;:16;:18::i;:::-;:22;:35;:22;:35;:::i;:::-;2732:43;;2607:243;2880:9;2891:12;2907:105;2928:1;2943;2958:5;2977:6;2997:5;2907:7;:105::i;:::-;2879:133;;;;3060:13;3076:112;3141:33;3164:5;:9;;;3141:18;:16;:18::i;:33::-;3076:30;:6;3100:5;3076:30;:23;:30;:::i;:::-;:47;:112;:47;:112;:::i;:::-;3060:128;-1:-1:-1;3207:21:4;3214:1;3060:128;3207:21;:13;:21;:::i;:::-;3198:30;;3271:14;3288:47;3316:1;3327:6;3288:20;:47::i;:::-;3271:64;;3394:1;3385:6;:10;3381:135;;;3420:1;3411:10;;3381:135;;;3459:7;3442:13;:1;3448:6;3442:13;:5;:13;:::i;:::-;:24;3438:78;;3491:14;:7;3503:1;3491:14;:11;:14;:::i;:::-;3482:23;;3438:78;3566:15;3584:155;3625:5;:7;;;3646:24;:22;:24::i;:::-;3684:5;:10;;;3708:2;3724:5;3584:27;:155::i;:::-;3764:14;;;;3566:173;;-1:-1:-1;3764:25:4;;3783:5;3764:25;:18;:25;:::i;:::-;3753:8;:36;3749:259;;;3816:14;;;;:25;;3835:5;3816:25;:18;:25;:::i;:::-;3805:36;;3749:259;;;3872:49;3915:5;3872:38;3895:5;:14;;;3872:18;:16;:18::i;:49::-;3861:8;:60;3858:150;;;3948:49;3991:5;3948:38;3971:5;:14;;;3948:18;:16;:18::i;:49::-;3937:60;;3858:150;4052:24;:22;:24::i;:::-;4042:7;;;:34;4086:285;;;;4123:13;:1;4129:6;4123:13;:5;:13;:::i;:::-;4113:7;;;:23;4160:13;:1;4166:6;4160:13;:5;:13;:::i;:::-;4150:7;;;:23;4187:11;;;:22;;;4086:285;;;4250:13;:1;4256:6;4250:13;:5;:13;:::i;:::-;4240:7;;;:23;4287:13;:1;4293:6;4287:13;:5;:13;:::i;:::-;4277:7;;;:23;4328:32;4351:8;4328:18;:16;:18::i;:32::-;4314:11;;;:46;4086:285;4405:23;4422:5;4405:16;:23::i;:::-;4444:106;4482:10;4510:6;4534;4444:106;;;;;;;;;;;;;;;;;-1:-1:-1;;4578:7:4;;;2070:2553;-1:-1:-1;;;;;;;;;;;2070:2553:4:o;737:183:11:-;822:19;864:49;891:6;174:1;864:26;:49::i;552:179::-;636:18;677:47;702:6;174:1;677:24;:47::i;365:181::-;449:19;491:48;518:6;125:2;491:26;:48::i;4091:116:8:-;4151:8;4175:25;4180:16;4185:1;794:66;4180:4;:16::i;1581:76::-;794:66;;1581:76::o;16304:245::-;16360:8;16384:6;;;:16;;-1:-1:-1;16394:6:8;;16384:16;16380:55;;;-1:-1:-1;16423:1:8;16416:8;;16380:55;-1:-1:-1;16448:5:8;;;16452:1;16448;:5;:1;16467:5;;;;;:10;;:24;;;;16490:1;16485;16481;:5;;;;;;:10;;16467:24;16463:80;;;16508:24;;;;;;;;;;;16956:210;17036:5;;;17012:8;17056:5;;:14;;;;;17069:1;17065;:5;17056:14;:23;;;;;17078:1;17074;:5;17056:23;17055:54;;;;17089:1;17085;:5;:14;;;;;17098:1;17094;:5;17085:14;:23;;;;;17107:1;17103;:5;17085:23;17051:109;;;17125:24;;;;;;;;;;;16636:260;16692:8;16716:6;16712:67;;16738:30;;;;;;;;;;;16712:67;928:66;16792:1;:18;:29;;;;;16814:1;16819:2;16814:7;16792:29;16788:83;;;16836:24;;;;;;;;;;;16788:83;16888:1;16884;:5;;;;;;;16636:260;-1:-1:-1;;;16636:260:8:o;3337:195:10:-;3441:18;3482:43;3503:6;3515:9;3511:2;:13;3482:20;:43::i;2539:128:8:-;2595:8;2619:33;2624:24;2629:1;2632:15;2624:4;:24::i;2619:33::-;2655:5;2619:41;;2539:128;-1:-1:-1;;;2539:128:8:o;4715:1244:4:-;4890:9;4901:8;5019:125;5071:1;5086;5101:5;5120;:14;;;5019:38;:125::i;:::-;5014:130;-1:-1:-1;5190:17:4;5014:130;5190:17;5321:13;:1;5327:6;5321:13;:5;:13;:::i;:::-;5300:34;-1:-1:-1;5361:9:4;5356:563;5380:2;5376:1;:6;5356:563;;;5403:10;5416:51;5444:10;5456;5416:27;:51::i;:::-;5403:64;-1:-1:-1;5481:11:4;5495:51;5531:14;5403:64;5539:5;5531:14;:7;:14;:::i;:::-;5495:35;:51::i;:::-;5481:65;-1:-1:-1;5560:10:4;5573:102;5659:15;:6;5670:3;5659:15;:10;:15;:::i;:::-;5573:64;5633:3;5573:38;:11;5606:4;5573:38;:32;:38;:::i;:64::-;:85;:102;:85;:102;:::i;:::-;5560:115;;5694:84;5718:4;5740:3;5761;5694:84;;;;;;;;;;;;;;;;;5802:1;5796:3;:7;5792:117;;;5836:3;5823:16;;5792:117;;;5891:3;5878:16;;5792:117;5356:563;;;5384:3;;;;;5356:563;;;-1:-1:-1;5941:10:4;;-1:-1:-1;;;4715:1244:4;;;;;;;;:::o;5965:117::-;6063:12;5965:117;:::o;1173:790:10:-;1341:6;1363:13;1379:30;1407:1;1400:4;:8;1379:20;:30::i;:::-;1363:46;;1419:19;1441:27;:21;1452:9;:4;:7;:9::i;:::-;1441:6;;:21;:10;:21;:::i;:::-;:25;:27::i;:::-;1419:49;;1478:24;1505:36;1528:12;1505:18;:16;:18::i;:36::-;1478:63;-1:-1:-1;1551:12:10;1566:25;:2;1478:63;1566:25;:6;:25;:::i;:::-;1551:40;-1:-1:-1;1601:12:10;1616:23;:5;1626:12;1616:23;:9;:23;:::i;:::-;1601:38;-1:-1:-1;1650:23:10;1676:102;1706:25;:17;1728:2;1706:25;:21;:25;:::i;:::-;1745:23;:12;1762:5;1745:23;:16;:23;:::i;:::-;1676:16;:102::i;:::-;1650:128;;1788:12;1803:40;1826:16;1803:18;:16;:18::i;:40::-;1788:55;;1853:13;1869:64;1901:31;1929:1;1901:20;:31::i;:::-;1869:27;1890:5;1869:16;:5;1879;1869:16;:9;:16;:::i;:64::-;1853:80;1173:790;-1:-1:-1;;;;;;;;;;;;;;1173:790:10:o;430:107:3:-;516:14;;:6;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:107::o;3538:207:10:-;3643:19;3693:44;3714:9;3710:2;:13;3694:6;:30;3693:42;:44::i;367:800::-;526:13;;567:12;:5;577:1;567:12;:9;:12;:::i;:::-;555:24;-1:-1:-1;589:10:10;602:12;:1;555:24;602:12;:5;:12;:::i;:::-;589:25;-1:-1:-1;624:10:10;637:12;:5;647:1;637:12;:9;:12;:::i;:::-;624:25;;659:9;671:32;694:8;671:18;:16;:18::i;:32::-;659:44;;713:12;748:18;:16;:18::i;:::-;739:6;:27;735:215;;;790:28;:22;806:5;790:11;:6;:9;:11::i;:28::-;782:36;;735:215;;;857:82;897:28;:22;913:5;897:11;:6;:9;:11::i;:28::-;857:18;:16;:18::i;:82::-;849:90;;735:215;968:16;:5;978;968:16;:9;:16;:::i;:::-;959:25;;1000:136;1037:1;1052;1067:5;1086:8;1108:18;:6;:16;:18::i;:::-;1000:136;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;367:800:10;;;;;;:::o;1969:240::-;2070:15;2108:56;2121:42;2144:18;:16;:18::i;:::-;2121;:16;:18::i;:42::-;2108:8;:1;2114;2108:8;:5;:8;:::i;2260:676::-;2354:6;;2441:14;2450:4;;2441:14;:8;:14;:::i;:::-;2420:35;-1:-1:-1;2465:16:10;2484:21;:4;2420:35;2484:21;:8;:21;:::i;:::-;2465:40;-1:-1:-1;2515:16:10;2534:24;2465:40;;2534:24;:13;:24;:::i;:::-;2515:43;-1:-1:-1;2568:19:10;2590:24;2515:43;;2590:24;:13;:24;:::i;:::-;2568:46;-1:-1:-1;2624:23:10;2650:30;2568:46;;2650:30;:16;:30;:::i;:::-;2624:56;-1:-1:-1;2690:24:10;2717:38;2624:56;;2717:38;:20;:38;:::i;:::-;2690:65;-1:-1:-1;2765:22:10;2790:40;2690:65;;2790:40;:21;:40;:::i;:::-;2765:65;-1:-1:-1;2840:23:10;2866:30;2765:65;2886:9;2866:30;:19;:30;:::i;:::-;2840:56;2260:676;-1:-1:-1;;;;;;;;;;2260:676:10:o;5352:5160:8:-;5397:8;794:66;5421:1;:14;5417:74;;;5451:29;;;;;;;;;;;5417:74;5509:1;5504;:6;5500:66;;5526:29;;;;;;;;;;;5500:66;794;5579:1;:12;5575:51;;;-1:-1:-1;5614:1:8;5607:8;;5575:51;1273:66;5639:1;:15;5635:64;;-1:-1:-1;1453:75:8;5670:18;;5635:64;5709:8;5727;5745;6058:66;6046:1;:79;6042:316;;6141:79;;;;;6267:66;794;6246:11;;:88;6242:92;;6042:316;6402:66;6390:1;:79;6386:316;;6485:79;;;;;6611:66;794;6590:11;;:88;6586:92;;6386:316;6745:66;6733:1;:79;6729:314;;6828:79;;;;;6953:66;794;6932:11;;:88;6928:92;;6729:314;7086:66;7074:1;:79;7070:314;;7169:79;;;;;7294:66;794;7273:11;;:88;7269:92;;7070:314;7427:66;7415:1;:79;7411:314;;7510:79;;;;;7635:66;794;7614:11;;:88;7610:92;;7411:314;7768:66;7756:1;:79;7752:314;;7851:79;;;;;7976:66;7863;7955:11;;:88;7951:92;;7752:314;8111:66;8099:1;:79;8095:318;;8194:79;;;;;8321:66;794;8300:11;;:88;8296:92;;8095:318;8459:66;8447:1;:79;8443:320;;8542:79;;;;;8670:66;794;8649:11;;:88;8645:92;;8443:320;8810:66;8798:1;:79;8794:322;;8893:79;;;;;9022:66;794;9001:11;;:88;8997:92;;8794:322;9281:11;;;;-1:-1:-1;9281:11:8;;-1:-1:-1;794:66:8;9306:5;;;:15;;-1:-1:-1;9384:35:8;9341:39;;;9336:45;;:83;9331:88;;;;794:66;9429:1;9425;:5;:15;;;;;;9421:19;;9532:35;9527:1;9489:35;:39;9484:1;:45;:83;;;;;;9479:88;;;;794:66;9577:1;9573;:5;:15;;;;;;9569:19;;9680:35;9675:1;9637:35;:39;9632:1;:45;:83;;;;;;9627:88;;;;794:66;9725:1;9721;:5;:15;;;;;;9717:19;;9828:35;9823:1;9785:35;:39;9780:1;:45;:83;;;;;;9775:88;;;;794:66;9873:1;9869;:5;:15;;;;;;9865:19;;9976:35;9971:1;9933:35;:39;9928:1;:45;:83;;;;;;9923:88;;;;794:66;10021:1;10017;:5;:15;;;;;;10013:19;;10124:35;10119:1;10081:35;:39;10076:1;:45;:83;;;;;;10071:88;;;;794:66;10169:1;10165;:5;:15;;;;;;10161:19;;10272:35;10267:1;10229:35;:39;10224:1;:45;:83;;;;;;10219:88;;;;794:66;10317:1;10313;:5;:15;;;;;;10309:19;;10420:35;10415:1;10377:35;:39;10372:1;:45;:83;;;;;;10367:88;;;;5352:5160;;;;;;:::o;10609:5613::-;10655:8;1453:75;10679:15;;10675:105;;;-1:-1:-1;10768:1:8;10761:8;;10675:105;10793:6;10789:51;;-1:-1:-1;794:66:8;10815:14;;10789:51;1393:1;10853;:15;10849:77;;;10885:30;;;;;;;;;;;10849:77;794:66;11395;11391:70;;11475:5;;;:15;;;11501:18;11497:22;;11492:27;;;;;11391:70;;11559:5;;;:15;11555:19;;11581:1;11585:18;11581:22;11576:27;;;;794:66;11647:1;11643;:5;:15;;;;;;11639:19;;11665:1;11669:18;11665:22;11660:27;;;;794:66;11731:1;11727;:5;:15;;;;;;11723:19;;11749:1;11753:18;11749:22;11744:27;;;;794:66;11815:1;11811;:5;:15;;;;;;11807:19;;11833:1;11837:18;11833:22;11828:27;;;;794:66;11899:1;11895;:5;:15;;;;;;11891:19;;11917:1;11921:18;11917:22;11912:27;;;;794:66;11983:1;11979;:5;:15;;;;;;11975:19;;12001:1;12005:18;12001:22;11996:27;;;;794:66;12067:1;12063;:5;:15;;;;;;12059:19;;12085:1;12089:18;12085:22;12080:27;;;;794:66;12151:1;12147;:5;:15;;;;;;12143:19;;12169:1;12173:18;12169:22;12164:27;;;;794:66;12235:1;12231;:5;:15;;;;;;12227:19;;12253:1;12257:18;12253:22;12248:27;;;;794:66;12319:1;12315;:5;:15;;;;;;12311:19;;12337:1;12341:18;12337:22;12332:27;;;;794:66;12403:1;12399;:5;:15;;;;;;12395:19;;12421:1;12425:18;12421:22;12416:27;;;;794:66;12487:1;12483;:5;:15;;;;;;12479:19;;12505:1;12509:18;12505:22;12500:27;;;;794:66;12571:1;12567;:5;:15;;;;;;12563:19;;12589:1;12593:18;12589:22;12584:27;;;;794:66;12655:1;12651;:5;:15;;;;;;12647:19;;12673:1;12677:18;12673:22;12668:27;;;;794:66;12739:1;12735;:5;:15;;;;;;12731:19;;12757:1;12761:18;12757:22;12752:27;;;;794:66;12823:1;12819;:5;:15;;;;;;12815:19;;12841:1;12845:18;12841:22;12836:27;;;;794:66;12907:1;12903;:5;:15;;;;;;12899:19;;12925:1;12929:18;12925:22;12920:27;;;;794:66;12991:1;12987;:5;:15;;;;;13221:2;;;;;;13075:18;12987:15;;;13004:27;;;13071:22;:26;;794:66;13071:36;;12987:15;-1:-1:-1;13268:66:8;13257:78;;13256:85;13252:304;;13465:66;13372;13361:78;;:171;13357:175;;13252:304;13600:66;13589:78;;13588:85;13584:304;;13797:66;13704;13693:78;;:171;13689:175;;13584:304;13931:66;13920:78;;13919:85;13915:303;;14128:66;14035;14024:78;;:171;14020:175;;13915:303;14261:66;14250:78;;14249:85;14245:303;;14458:66;14365;14354:78;;:171;14350:175;;14245:303;14591:66;14580:78;;14579:85;14575:303;;14788:66;14695;14684:78;;:171;14680:175;;14575:303;14921:66;14910:78;;14909:85;14905:303;;15118:66;15025;15014:78;;:171;15010:175;;14905:303;15253:66;15242:78;;15241:85;15237:305;;15450:66;15357;15346:78;;:171;15342:175;;15237:305;15588:66;15577:78;;15576:85;15572:306;;15785:66;15692;15681:78;;:171;15677:175;;15572:306;15925:66;15914:78;;15913:85;15909:307;;16122:66;16029;16018:78;;:171;16014:175;;15909:307;10609:5613;;;;;:::o;3925:97::-;3975:8;3999:16;4004:1;794:66;3999:4;:16::i;5164:97::-;794:66;5243:11;;;5164:97::o;148:99:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;26594:42;26583:54;;27166:35;;27156:2;;27215:1;;27205:12;414:241;;518:2;506:9;497:7;493:23;489:32;486:2;;;-1:-1;;524:12;486:2;586:53;631:7;607:22;586:53;;662:366;;;783:2;771:9;762:7;758:23;754:32;751:2;;;-1:-1;;789:12;751:2;851:53;896:7;872:22;851:53;;;841:63;;959:53;1004:7;941:2;984:9;980:22;959:53;;;949:63;;745:283;;;;;;1035:491;;;;1173:2;1161:9;1152:7;1148:23;1144:32;1141:2;;;-1:-1;;1179:12;1141:2;85:6;72:20;97:33;124:5;97:33;;;1231:63;-1:-1;1331:2;1370:22;;72:20;97:33;72:20;97:33;;;1135:391;;1339:63;;-1:-1;;;1439:2;1478:22;;;;344:20;;1135:391;1533:257;;1645:2;1633:9;1624:7;1620:23;1616:32;1613:2;;;-1:-1;;1651:12;1613:2;223:6;217:13;27312:5;26417:13;26410:21;27290:5;27287:32;27277:2;;-1:-1;;27323:12;1797:241;;1901:2;1889:9;1880:7;1876:23;1872:32;1869:2;;;-1:-1;;1907:12;1869:2;-1:-1;344:20;;1863:175;-1:-1;1863:175;2045:366;;;2166:2;2154:9;2145:7;2141:23;2137:32;2134:2;;;-1:-1;;2172:12;2134:2;-1:-1;;344:20;;;2324:2;2363:22;;;344:20;;-1:-1;2128:283;11645:213;26594:42;26583:54;;;;2638:37;;11763:2;11748:18;;11734:124;11865:340;26594:42;26583:54;;;2497:58;;26583:54;;12191:2;12176:18;;2638:37;12019:2;12004:18;;11990:215;12212:675;26594:42;26583:54;;;2497:58;;26583:54;;;12623:2;12608:18;;2638:37;26583:54;;;;12706:2;12691:18;;2638:37;12789:2;12774:18;;2867:36;;;;12872:3;12857:19;;2867:36;;;;12450:3;12435:19;;12421:466;12894:451;26594:42;26583:54;;;2497:58;;26583:54;;;;13248:2;13233:18;;2638:37;13331:2;13316:18;;2867:36;;;;13076:2;13061:18;;13047:298;13352:443;26594:42;26583:54;;;;2497:58;;13700:2;13685:18;;2867:36;;;;13781:2;13766:18;;2867:36;13530:2;13515:18;;13501:294;13802:340;26594:42;26583:54;;;;2497:58;;14128:2;14113:18;;2867:36;13956:2;13941:18;;13927:215;14149:1521;26417:13;;26410:21;2752:34;;26594:42;26583:54;;;14745:2;14730:18;;2638:37;26583:54;;;;14828:2;14813:18;;2638:37;14909:2;14894:18;;2867:36;;;;14990:3;14975:19;;2867:36;;;;15074:3;15059:19;;2867:36;;;;15156:3;15141:19;;2867:36;;;;15240:3;15225:19;;2867:36;15322:3;15307:19;;2867:36;15404:3;15389:19;;2867:36;15489:3;15474:19;;2867:36;15572:3;15557:19;;2867:36;;;;15655:3;15640:19;;2867:36;14586:3;14571:19;;14557:1113;15677:423;2867:36;;;16005:2;15990:18;;2867:36;;;;16086:2;16071:18;;2867:36;15845:2;15830:18;;15816:284;16107:639;2867:36;;;16488:2;16473:18;;2867:36;;;;16569:2;16554:18;;2867:36;;;;16650:2;16635:18;;2867:36;16731:3;16716:19;;2867:36;16327:3;16312:19;;16298:448;16753:407;16944:2;16958:47;;;3140:2;16929:18;;;26185:19;3176:66;26225:14;;;3156:87;3262:12;;;16915:245;17167:407;17358:2;17372:47;;;3513:2;17343:18;;;26185:19;3549:66;26225:14;;;3529:87;3650:66;3636:12;;;3629:88;3736:12;;;17329:245;17581:407;17772:2;17786:47;;;3987:2;17757:18;;;26185:19;4023:66;26225:14;;;4003:87;4109:12;;;17743:245;17995:407;18186:2;18200:47;;;4360:2;18171:18;;;26185:19;4396:66;26225:14;;;4376:87;4482:12;;;18157:245;18409:407;18600:2;18614:47;;;4733:2;18585:18;;;26185:19;4769:66;26225:14;;;4749:87;4855:12;;;18571:245;18823:407;19014:2;19028:47;;;5106:2;18999:18;;;26185:19;5142:66;26225:14;;;5122:87;5228:12;;;18985:245;19237:407;19428:2;19442:47;;;5479:2;19413:18;;;26185:19;5515:66;26225:14;;;5495:87;5601:12;;;19399:245;19651:407;19842:2;19856:47;;;5852:2;19827:18;;;26185:19;5888:66;26225:14;;;5868:87;5974:12;;;19813:245;20065:407;20256:2;20270:47;;;6225:2;20241:18;;;26185:19;6261:66;26225:14;;;6241:87;6362:66;6348:12;;;6341:88;6448:12;;;20227:245;20479:407;20670:2;20684:47;;;6699:2;20655:18;;;26185:19;6735:66;26225:14;;;6715:87;6821:12;;;20641:245;20893:407;21084:2;21098:47;;;7072:2;21069:18;;;26185:19;7108:66;26225:14;;;7088:87;7194:12;;;21055:245;21307:407;21498:2;21512:47;;;7445:2;21483:18;;;26185:19;7481:66;26225:14;;;7461:87;7582:66;7568:12;;;7561:88;7668:12;;;21469:245;21721:407;21912:2;21926:47;;;7919:2;21897:18;;;26185:19;7955:66;26225:14;;;7935:87;8041:12;;;21883:245;22135:407;22326:2;22340:47;;;8292:2;22311:18;;;26185:19;8328:66;26225:14;;;8308:87;8414:12;;;22297:245;22549:407;22740:2;22754:47;;;8665:2;22725:18;;;26185:19;8701:66;26225:14;;;8681:87;8787:12;;;22711:245;22963:407;23154:2;23168:47;;;9038:2;23139:18;;;26185:19;9074:66;26225:14;;;9054:87;9160:12;;;23125:245;23377:407;23568:2;23582:47;;;9411:2;23553:18;;;26185:19;9447:66;26225:14;;;9427:87;9533:12;;;23539:245;23791:407;23982:2;23996:47;;;9784:2;23967:18;;;26185:19;9820:66;26225:14;;;9800:87;9906:12;;;23953:245;24205:407;24396:2;24410:47;;;10157:2;24381:18;;;26185:19;10193:66;26225:14;;;10173:87;10279:12;;;24367:245;24619:407;24810:2;24824:47;;;10530:2;24795:18;;;26185:19;10566:66;26225:14;;;10546:87;10667:66;10653:12;;;10646:88;10753:12;;;24781:245;25033:407;25224:2;25238:47;;;11004:2;25209:18;;;26185:19;11040:66;26225:14;;;11020:87;11126:12;;;25195:245;25447:407;25638:2;25652:47;;;11377:2;25623:18;;;26185:19;11413:66;26225:14;;;11393:87;11499:12;;;25609:245;25861:213;2867:36;;;25979:2;25964:18;;25950:124;27107:117;26594:42;27194:5;26583:54;27169:5;27166:35;27156:2;;27215:1;;27205:12"
			}
		}
	},
	"sources": {
		"Scam.sol": {
			"id": 0
		},
		"core/State.sol": {
			"id": 3
		},
		"interfaces/IStructs.sol": {
			"id": 7
		},
		"libs/LibFixedMath.sol": {
			"id": 8
		},
		"libs/LibScamMath.sol": {
			"id": 10
		},
		"core/Ownable.sol": {
			"id": 2
		},
		"core/Liquidity.sol": {
			"id": 1
		},
		"libs/LibSafeMath.sol": {
			"id": 9
		},
		"interfaces/IERC20.sol": {
			"id": 5
		},
		"core/Swapper.sol": {
			"id": 4
		},
		"interfaces/IEvents.sol": {
			"id": 6
		},
		"libs/LibToken.sol": {
			"id": 11
		}
	},
	"sourceCodes": {
		"Scam.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"./core/State.sol\";\nimport \"./core/Liquidity.sol\";\nimport \"./core/Swapper.sol\";\n\n\ncontract Scam is\n    State,\n    Liquidity,\n    Swapper\n{\n\n    constructor()\n        public\n    {}\n}\n",
		"core/State.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IStructs.sol\";\nimport \"../libs/LibFixedMath.sol\";\nimport \"../libs/LibScamMath.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract State is\n    Ownable\n{\n\n    using LibFixedMath for int256;\n\n    IStructs.State public gState;\n\n    function _loadGlobalState()\n        internal\n        returns (IStructs.State memory state)\n    {\n        return gState;\n    }\n\n    function _saveGlobalState(IStructs.State memory state)\n        internal\n    {\n        gState = state;\n    }\n\n    function initState(address xAddress, address yAddress)\n        external\n        onlyOwner\n    {\n        _initState(xAddress, yAddress);\n    }\n\n    function _initState(address xAddress, address yAddress)\n        internal\n    {\n        require(\n            !gState.isInitialized,\n            'Already Initialized'\n        );\n\n        gState.xAddress = xAddress;\n        gState.yAddress = yAddress;\n        gState.pBarX = LibFixedMath.toFixed(uint256(99), uint256(100));  // initial expected price of X given Y\n        gState.rhoNumerator = uint256(99);\n        gState.rhoRatio = LibFixedMath.toFixed(uint256(99), uint256(100));\n        gState.fee = LibFixedMath.toFixed(uint256(5), uint256(10000));    // 0.0005\n        gState.beta = LibFixedMath.one().sub(\n            LibFixedMath.toFixed(int256(1), int256(1000000))\n        );\n        gState.eToKappa = LibFixedMath.toFixed(int256(10005), int256(1000));\n        gState.isInitialized = true;\n    }\n\n}\n",
		"interfaces/IStructs.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ninterface IStructs {\n\n    struct State {\n        bool isInitialized;\n        address xAddress;                                   // address of token x\n        address yAddress;                                   // address of token y\n        int256 x;                                           // contract's balance of token x (fixed point)\n        int256 y;                                           // contract's balance of token y (fixed point)\n        uint256 l;                                          // total liquidity token balance\n        int256 pBarX;                                       // expected future price of x in terms of y (fixed point)\n        uint256 rhoNumerator;\n        int256 rhoRatio;\n        int256 fee;\n        uint256 t;                                          // most recent block\n        mapping (address => uint256) liquidityBalance;\n        int256 beta;    // persistence of expercted price - the larger the more persistent\n        int256 eToKappa;   // clamp that prevents the expected price changing by a lot in an expected tx\n    }\n\n}\n",
		"libs/LibFixedMath.sol": "/*\n  Copyright 2017 Bprotocol Foundation, 2019 ZeroEx Intl.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\npragma solidity ^0.5.9;\n\n\n// solhint-disable indent\n/// @dev Signed, fixed-point, 127-bit precision math library.\nlibrary LibFixedMath {\n\n    // 1\n    int256 private constant FIXED_1 = int256(0x0000000000000000000000000000000080000000000000000000000000000000);\n    // 2**255\n    int256 private constant MIN_FIXED_VAL = int256(0x8000000000000000000000000000000000000000000000000000000000000000);\n    // 1^2 (in fixed-point)\n    int256 private constant FIXED_1_SQUARED = int256(0x4000000000000000000000000000000000000000000000000000000000000000);\n    // 1\n    int256 private constant LN_MAX_VAL = FIXED_1;\n    // e ^ -63.875\n    int256 private constant LN_MIN_VAL = int256(0x0000000000000000000000000000000000000000000000000000000733048c5a);\n    // 0\n    int256 private constant EXP_MAX_VAL = 0;\n    // -63.875\n    int256 private constant EXP_MIN_VAL = -int256(0x0000000000000000000000000000001ff0000000000000000000000000000000);\n\n    /// @dev Get one as a fixed-point number.\n    function one() internal pure returns (int256 f) {\n        f = FIXED_1;\n    }\n\n    /// @dev Returns the addition of two fixed point numbers, reverting on overflow.\n    function add(int256 a, int256 b) internal pure returns (int256 c) {\n        c = _add(a, b);\n    }\n\n    /// @dev Returns the addition of two fixed point numbers, reverting on overflow.\n    function sub(int256 a, int256 b) internal pure returns (int256 c) {\n        if (b == MIN_FIXED_VAL) {\n            revert(\"sub: value too small\");\n        }\n        c = _add(a, -b);\n    }\n\n    /// @dev Returns the multiplication of two fixed point numbers, reverting on overflow.\n    function mul(int256 a, int256 b) internal pure returns (int256 c) {\n        int256 base = FIXED_1;\n        if (b != 0) {\n            b /= 2**40;\n            base = 2**87;\n        }\n\n        int256 product = _mul(a, b);\n        c = product / base;\n    }\n\n    /// @dev Returns the division of two fixed point numbers.\n    function div(int256 a, int256 b) internal pure returns (int256 c) {\n        c = _div(_mul(a, FIXED_1 / 2**40), b) * 2**40;\n    }\n\n    /// @dev Performs (a * n) / d, without scaling for precision.\n    function mulDiv(int256 a, int256 n, int256 d) internal pure returns (int256 c) {\n        c = _div(_mul(a, n), d);\n    }\n\n    /// @dev Returns the unsigned integer result of multiplying a fixed-point\n    ///      number with an integer, reverting if the multiplication overflows.\n    ///      Negative results are clamped to zero.\n    function uintMul(int256 f, uint256 u) internal pure returns (uint256) {\n        if (int256(u) < int256(0)) {\n            revert(\"uintMul: overflow\");\n        }\n        int256 c = _mul(f, int256(u));\n        if (c <= 0) {\n            return 0;\n        }\n        return uint256(uint256(c) >> 127);\n    }\n\n    /// @dev Returns the absolute value of a fixed point number.\n    function abs(int256 f) internal pure returns (int256 c) {\n        if (f == MIN_FIXED_VAL) {\n           revert(\"abs: value too small\");\n        }\n        if (f >= 0) {\n            c = f;\n        } else {\n            c = -f;\n        }\n    }\n\n    /// @dev Returns 1 / `x`, where `x` is a fixed-point number.\n    function invert(int256 f) internal pure returns (int256 c) {\n        c = _div(FIXED_1_SQUARED, f);\n    }\n\n    /// @dev Convert signed `n` / 1 to a fixed-point number.\n    function toFixed(int256 n) internal pure returns (int256 f) {\n        f = _mul(n, FIXED_1);\n    }\n\n    /// @dev Convert signed `n` / `d` to a fixed-point number.\n    function toFixed(int256 n, int256 d) internal pure returns (int256 f) {\n        f = _div(_mul(n, FIXED_1), d);\n    }\n\n    /// @dev Convert unsigned `n` / 1 to a fixed-point number.\n    ///      Reverts if `n` is too large to fit in a fixed-point number.\n    function toFixed(uint256 n) internal pure returns (int256 f) {\n        if (int256(n) < int256(0)) {\n            revert(\"toFixed: value cannot be less than zero\");\n        }\n        f = _mul(int256(n), FIXED_1);\n    }\n\n    /// @dev Convert unsigned `n` / `d` to a fixed-point number.\n    ///      Reverts if `n` / `d` is too large to fit in a fixed-point number.\n    function toFixed(uint256 n, uint256 d) internal pure returns (int256 f) {\n        if (int256(n) < int256(0)) {\n            revert(\"toFixed(uint,uint): numerator cannot be less than zero\");\n        }\n        if (int256(d) < int256(0)) {\n            revert(\"toFixed(uint,uint): denominator cannot be less than zero\");\n        }\n        f = _div(_mul(int256(n), FIXED_1), int256(d));\n    }\n\n    /// @dev Convert a fixed-point number to an integer.\n    function toInteger(int256 f) internal pure returns (int256 n) {\n        return f / FIXED_1;\n    }\n\n    /// @dev Get the natural logarithm of a fixed-point number 0 < `x` <= LN_MAX_VAL\n    function ln(int256 x) internal pure returns (int256 r) {\n        if (x > LN_MAX_VAL) {\n            revert(\"ln: value too large\");\n        }\n        if (x <= 0) {\n            revert(\"ln: value too small\");\n        }\n        if (x == FIXED_1) {\n            return 0;\n        }\n        if (x <= LN_MIN_VAL) {\n            return EXP_MIN_VAL;\n        }\n\n        int256 y;\n        int256 z;\n        int256 w;\n\n        // Rewrite the input as a quotient of negative natural exponents and a single residual q, such that 1 < q < 2\n        // For example: log(0.3) = log(e^-1 * e^-0.25 * 1.0471028872385522)\n        //              = 1 - 0.25 - log(1 + 0.0471028872385522)\n        // e ^ -32\n        if (x <= int256(0x00000000000000000000000000000000000000000001c8464f76164760000000)) {\n            r -= int256(0x0000000000000000000000000000001000000000000000000000000000000000); // - 32\n            x = x * FIXED_1 / int256(0x00000000000000000000000000000000000000000001c8464f76164760000000); // / e ^ -32\n        }\n        // e ^ -16\n        if (x <= int256(0x00000000000000000000000000000000000000f1aaddd7742e90000000000000)) {\n            r -= int256(0x0000000000000000000000000000000800000000000000000000000000000000); // - 16\n            x = x * FIXED_1 / int256(0x00000000000000000000000000000000000000f1aaddd7742e90000000000000); // / e ^ -16\n        }\n        // e ^ -8\n        if (x <= int256(0x00000000000000000000000000000000000afe10820813d78000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000400000000000000000000000000000000); // - 8\n            x = x * FIXED_1 / int256(0x00000000000000000000000000000000000afe10820813d78000000000000000); // / e ^ -8\n        }\n        // e ^ -4\n        if (x <= int256(0x0000000000000000000000000000000002582ab704279ec00000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000200000000000000000000000000000000); // - 4\n            x = x * FIXED_1 / int256(0x0000000000000000000000000000000002582ab704279ec00000000000000000); // / e ^ -4\n        }\n        // e ^ -2\n        if (x <= int256(0x000000000000000000000000000000001152aaa3bf81cc000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000100000000000000000000000000000000); // - 2\n            x = x * FIXED_1 / int256(0x000000000000000000000000000000001152aaa3bf81cc000000000000000000); // / e ^ -2\n        }\n        // e ^ -1\n        if (x <= int256(0x000000000000000000000000000000002f16ac6c59de70000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000080000000000000000000000000000000); // - 1\n            x = x * FIXED_1 / int256(0x000000000000000000000000000000002f16ac6c59de70000000000000000000); // / e ^ -1\n        }\n        // e ^ -0.5\n        if (x <= int256(0x000000000000000000000000000000004da2cbf1be5828000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000040000000000000000000000000000000); // - 0.5\n            x = x * FIXED_1 / int256(0x000000000000000000000000000000004da2cbf1be5828000000000000000000); // / e ^ -0.5\n        }\n        // e ^ -0.25\n        if (x <= int256(0x0000000000000000000000000000000063afbe7ab2082c000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000020000000000000000000000000000000); // - 0.25\n            x = x * FIXED_1 / int256(0x0000000000000000000000000000000063afbe7ab2082c000000000000000000); // / e ^ -0.25\n        }\n        // e ^ -0.125\n        if (x <= int256(0x0000000000000000000000000000000070f5a893b608861e1f58934f97aea57d)) {\n            r -= int256(0x0000000000000000000000000000000010000000000000000000000000000000); // - 0.125\n            x = x * FIXED_1 / int256(0x0000000000000000000000000000000070f5a893b608861e1f58934f97aea57d); // / e ^ -0.125\n        }\n        // `x` is now our residual in the range of 1 <= x <= 2 (or close enough).\n\n        // Add the taylor series for log(1 + z), where z = x - 1\n        z = y = x - FIXED_1;\n        w = y * y / FIXED_1;\n        r += z * (0x100000000000000000000000000000000 - y) / 0x100000000000000000000000000000000; z = z * w / FIXED_1; // add y^01 / 01 - y^02 / 02\n        r += z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y) / 0x200000000000000000000000000000000; z = z * w / FIXED_1; // add y^03 / 03 - y^04 / 04\n        r += z * (0x099999999999999999999999999999999 - y) / 0x300000000000000000000000000000000; z = z * w / FIXED_1; // add y^05 / 05 - y^06 / 06\n        r += z * (0x092492492492492492492492492492492 - y) / 0x400000000000000000000000000000000; z = z * w / FIXED_1; // add y^07 / 07 - y^08 / 08\n        r += z * (0x08e38e38e38e38e38e38e38e38e38e38e - y) / 0x500000000000000000000000000000000; z = z * w / FIXED_1; // add y^09 / 09 - y^10 / 10\n        r += z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y) / 0x600000000000000000000000000000000; z = z * w / FIXED_1; // add y^11 / 11 - y^12 / 12\n        r += z * (0x089d89d89d89d89d89d89d89d89d89d89 - y) / 0x700000000000000000000000000000000; z = z * w / FIXED_1; // add y^13 / 13 - y^14 / 14\n        r += z * (0x088888888888888888888888888888888 - y) / 0x800000000000000000000000000000000;                      // add y^15 / 15 - y^16 / 16\n    }\n\n    /// @dev Compute the natural exponent for a fixed-point number EXP_MIN_VAL <= `x` <= 1\n    function exp(int256 x) internal pure returns (int256 r) {\n        if (x < EXP_MIN_VAL) {\n            // Saturate to zero below EXP_MIN_VAL.\n            return 0;\n        }\n        if (x == 0) {\n            return FIXED_1;\n        }\n        if (x > EXP_MAX_VAL) {\n             revert(\"exp: value too small\");\n        }\n\n        // Rewrite the input as a product of natural exponents and a\n        // single residual q, where q is a number of small magnitude.\n        // For example: e^-34.419 = e^(-32 - 2 - 0.25 - 0.125 - 0.044)\n        //              = e^-32 * e^-2 * e^-0.25 * e^-0.125 * e^-0.044\n        //              -> q = -0.044\n\n        // Multiply with the taylor series for e^q\n        int256 y;\n        int256 z;\n        // q = x % 0.125 (the residual)\n        z = y = x % 0x0000000000000000000000000000000010000000000000000000000000000000;\n        z = z * y / FIXED_1; r += z * 0x10e1b3be415a0000; // add y^02 * (20! / 02!)\n        z = z * y / FIXED_1; r += z * 0x05a0913f6b1e0000; // add y^03 * (20! / 03!)\n        z = z * y / FIXED_1; r += z * 0x0168244fdac78000; // add y^04 * (20! / 04!)\n        z = z * y / FIXED_1; r += z * 0x004807432bc18000; // add y^05 * (20! / 05!)\n        z = z * y / FIXED_1; r += z * 0x000c0135dca04000; // add y^06 * (20! / 06!)\n        z = z * y / FIXED_1; r += z * 0x0001b707b1cdc000; // add y^07 * (20! / 07!)\n        z = z * y / FIXED_1; r += z * 0x000036e0f639b800; // add y^08 * (20! / 08!)\n        z = z * y / FIXED_1; r += z * 0x00000618fee9f800; // add y^09 * (20! / 09!)\n        z = z * y / FIXED_1; r += z * 0x0000009c197dcc00; // add y^10 * (20! / 10!)\n        z = z * y / FIXED_1; r += z * 0x0000000e30dce400; // add y^11 * (20! / 11!)\n        z = z * y / FIXED_1; r += z * 0x000000012ebd1300; // add y^12 * (20! / 12!)\n        z = z * y / FIXED_1; r += z * 0x0000000017499f00; // add y^13 * (20! / 13!)\n        z = z * y / FIXED_1; r += z * 0x0000000001a9d480; // add y^14 * (20! / 14!)\n        z = z * y / FIXED_1; r += z * 0x00000000001c6380; // add y^15 * (20! / 15!)\n        z = z * y / FIXED_1; r += z * 0x000000000001c638; // add y^16 * (20! / 16!)\n        z = z * y / FIXED_1; r += z * 0x0000000000001ab8; // add y^17 * (20! / 17!)\n        z = z * y / FIXED_1; r += z * 0x000000000000017c; // add y^18 * (20! / 18!)\n        z = z * y / FIXED_1; r += z * 0x0000000000000014; // add y^19 * (20! / 19!)\n        z = z * y / FIXED_1; r += z * 0x0000000000000001; // add y^20 * (20! / 20!)\n        r = r / 0x21c3677c82b40000 + y + FIXED_1; // divide by 20! and then add y^1 / 1! + y^0 / 0!\n\n        // Multiply with the non-residual terms.\n        x = -x;\n        // e ^ -32\n        if ((x & int256(0x0000000000000000000000000000001000000000000000000000000000000000)) != 0) {\n            r = r * int256(0x00000000000000000000000000000000000000f1aaddd7742e56d32fb9f99744)\n                / int256(0x0000000000000000000000000043cbaf42a000812488fc5c220ad7b97bf6e99e); // * e ^ -32\n        }\n        // e ^ -16\n        if ((x & int256(0x0000000000000000000000000000000800000000000000000000000000000000)) != 0) {\n            r = r * int256(0x00000000000000000000000000000000000afe10820813d65dfe6a33c07f738f)\n                / int256(0x000000000000000000000000000005d27a9f51c31b7c2f8038212a0574779991); // * e ^ -16\n        }\n        // e ^ -8\n        if ((x & int256(0x0000000000000000000000000000000400000000000000000000000000000000)) != 0) {\n            r = r * int256(0x0000000000000000000000000000000002582ab704279e8efd15e0265855c47a)\n                / int256(0x0000000000000000000000000000001b4c902e273a58678d6d3bfdb93db96d02); // * e ^ -8\n        }\n        // e ^ -4\n        if ((x & int256(0x0000000000000000000000000000000200000000000000000000000000000000)) != 0) {\n            r = r * int256(0x000000000000000000000000000000001152aaa3bf81cb9fdb76eae12d029571)\n                / int256(0x00000000000000000000000000000003b1cc971a9bb5b9867477440d6d157750); // * e ^ -4\n        }\n        // e ^ -2\n        if ((x & int256(0x0000000000000000000000000000000100000000000000000000000000000000)) != 0) {\n            r = r * int256(0x000000000000000000000000000000002f16ac6c59de6f8d5d6f63c1482a7c86)\n                / int256(0x000000000000000000000000000000015bf0a8b1457695355fb8ac404e7a79e3); // * e ^ -2\n        }\n        // e ^ -1\n        if ((x & int256(0x0000000000000000000000000000000080000000000000000000000000000000)) != 0) {\n            r = r * int256(0x000000000000000000000000000000004da2cbf1be5827f9eb3ad1aa9866ebb3)\n                / int256(0x00000000000000000000000000000000d3094c70f034de4b96ff7d5b6f99fcd8); // * e ^ -1\n        }\n        // e ^ -0.5\n        if ((x & int256(0x0000000000000000000000000000000040000000000000000000000000000000)) != 0) {\n            r = r * int256(0x0000000000000000000000000000000063afbe7ab2082ba1a0ae5e4eb1b479dc)\n                / int256(0x00000000000000000000000000000000a45af1e1f40c333b3de1db4dd55f29a7); // * e ^ -0.5\n        }\n        // e ^ -0.25\n        if ((x & int256(0x0000000000000000000000000000000020000000000000000000000000000000)) != 0) {\n            r = r * int256(0x0000000000000000000000000000000070f5a893b608861e1f58934f97aea57d)\n                / int256(0x00000000000000000000000000000000910b022db7ae67ce76b441c27035c6a1); // * e ^ -0.25\n        }\n        // e ^ -0.125\n        if ((x & int256(0x0000000000000000000000000000000010000000000000000000000000000000)) != 0) {\n            r = r * int256(0x00000000000000000000000000000000783eafef1c0a8f3978c7f81824d62ebf)\n                / int256(0x0000000000000000000000000000000088415abbe9a76bead8d00cf112e4d4a8); // * e ^ -0.125\n        }\n    }\n\n    /// @dev Returns the multiplication two numbers, reverting on overflow.\n    function _mul(int256 a, int256 b) private pure returns (int256 c) {\n        if (a == 0 || b == 0) {\n            return 0;\n        }\n        c = a * b;\n        if (c / a != b || c / b != a) {\n             revert(\"_mul: overflow\");\n        }\n    }\n\n    /// @dev Returns the division of two numbers, reverting on division by zero.\n    function _div(int256 a, int256 b) private pure returns (int256 c) {\n        if (b == 0) {\n            revert(\"_div: divide by zero\");\n        }\n        if (a == MIN_FIXED_VAL && b == -1) {\n           revert(\"_div: overflow\");\n        }\n        c = a / b;\n    }\n\n    /// @dev Adds two numbers, reverting on overflow.\n    function _add(int256 a, int256 b) private pure returns (int256 c) {\n        c = a + b;\n        if ((a < 0 && b < 0 && c > a) || (a > 0 && b > 0 && c < a)) {\n            revert(\"_add: overflow\");\n        }\n    }\n}",
		"libs/LibScamMath.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"./LibFixedMath.sol\";\n\nlibrary LibScamMath {\n\n    using LibFixedMath for int256;\n\n    event TestMidpointOnBondCurve(\n        int256 a,\n        int256 b,\n        int256 pBarA,\n        int256 rhoRatio,\n        int256 result\n    );\n\n    /// @dev computes midpoint, inputs are all fixed point values.\n    function computeMidpointOnBondCurve(\n        int256 a,\n        int256 b,\n        int256 pBarA,\n        int256 rhoRatio\n    )\n        internal\n        returns (int256 result)\n    {\n        int term0 = pBarA.mul(a);\n        int term1A = b.div(term0);\n        int term1B = term0.div(b);\n        int term2 = LibFixedMath.one().sub(rhoRatio);\n        int256 term3;\n        if (term1A < LibFixedMath.one()) {\n            term3 = term1A.ln().mul(term2).exp();\n        } else {\n            term3 = LibFixedMath.one().div(\n                term1B.ln().mul(term2).exp()\n            );\n        }\n        result = term3.mul(pBarA);\n\n        emit TestMidpointOnBondCurve(\n            a,\n            b,\n            pBarA,\n            rhoRatio,\n            result.toInteger()\n        );\n\n        return result;\n    }\n\n    function computeNewPBarA(\n        uint256 t,\n        uint256 newT,\n        int256 beta,\n        int256 pA,\n        int256 pBarA\n    )\n        internal\n        returns (int256)\n    {\n        int256 deltaT = LibFixedMath.toFixed(newT - t);\n        int256 betaToDeltaT = deltaT.mul(beta.ln()).exp();\n        int256 oneMinusBToDeltaT = LibFixedMath.one().sub(betaToDeltaT);\n        int256 term1 = pA.mul(oneMinusBToDeltaT);\n        int256 term2 = pBarA.mul(betaToDeltaT);\n\n        int256 term3Denominator = LibFixedMath.add(\n            oneMinusBToDeltaT.div(pA),\n            betaToDeltaT.div(pBarA)\n        );\n        int256 term3 = LibFixedMath.one().div(term3Denominator);\n        int256 result = term1.add(term2).add(term3).div(LibFixedMath.toFixed(int256(2)));\n        return result;\n    }\n\n    function computeMidpoint(\n        int256 a,\n        int256 b\n    )\n        internal\n        returns (int256 midpoint)\n    {\n        return a.add(b).div(LibFixedMath.one().add(LibFixedMath.one())); // @todo store FIXED_2 as a constant.\n    }\n\n    /// @dev Hardcoded for rhoNumerator = 99\n    function computeBaseToNinetyNine(\n        int256 base\n    )\n        internal\n        returns (int256)\n    {\n        // Hack.gif ToDaMoon.gif TopKek.gif\n        int256 baseSquared = base.mul(base);\n        int256 baseCubed = base.mul(baseSquared);\n        int256 baseToSix = baseCubed.mul(baseCubed);\n        int256 baseToTwelve = baseToSix.mul(baseToSix);\n        int256 baseToTwentyFour = baseToTwelve.mul(baseToTwelve);\n        int256 baseToFourtyEight = baseToTwentyFour.mul(baseToTwentyFour);\n        int256 baseToNinetySix = baseToFourtyEight.mul(baseToFourtyEight);\n        int256 baseToNinetyNine = baseToNinetySix.mul(baseCubed);\n        return baseToNinetyNine;\n    }\n\n    function fastExponentiation(uint256 x, uint256 y)\n        internal\n        pure\n        returns (uint256)\n    {\n\n        if (y == 0) {\n            return 1;\n        } else if (y == 1) {\n            return x;\n        } else if (y % 2 == 0) {\n            return fastExponentiation(x * x, y / 2);\n        } else {\n            return x * fastExponentiation(x * x, (y - 1) / 2);\n        }\n    }\n\n    function tokenToFixed(uint256 amount, uint256 nDecimals)\n        internal\n        pure\n        returns (int256 fixedAmount)\n    {\n        return LibFixedMath.toFixed(amount, 10**nDecimals);\n    }\n\n    function tokenFromFixed(int256 amount, uint256 nDecimals)\n        internal\n        pure\n        returns (uint256 tokenAmount)\n    {\n        return uint256((amount * int256(10**nDecimals)).toInteger());\n    }\n}\n",
		"core/Ownable.sol": "\npragma solidity ^0.5.9;\n\n\ncontract Ownable\n{\n    address public owner;\n\n    event OwnershipTransferred(\n        address oldOwner,\n        address newOwner\n    );\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        _assertSenderIsOwner();\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner == address(0)) {\n            revert('TransferOwnerToZeroError');\n        } else {\n            owner = newOwner;\n            emit OwnershipTransferred(msg.sender, newOwner);\n        }\n    }\n\n    function _assertSenderIsOwner()\n        internal\n        view\n    {\n        if (msg.sender != owner) {\n            revert('OnlyOwnerError');\n        }\n    }\n}",
		"core/Liquidity.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/LibSafeMath.sol\";\nimport \"../libs/LibFixedMath.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/IStructs.sol\";\nimport \"../core/State.sol\";\n\n\n/// FIXME(jalextowle): Add in the bias factor and ponzi scheme\ncontract Liquidity is\n    State,\n    IStructs\n{\n    using LibSafeMath for uint256;\n    function balanceOf(address account)\n        public\n        view\n        returns (uint256)\n    {\n        IStructs.State storage state = gState;\n        return state.liquidityBalance[account];\n    }\n\n    /// @dev Allows a sender to deposit tokens into the contract to provide liquidity.\n    /// @param x_amount The amount of x that should be taken from the sender's balance.\n    /// @param y_amount The amount of x that should be taken from the sender's balance.\n    function addLiquidity(uint256 x_amount, uint256 y_amount)\n        external\n    {\n        // Load the contract's state.\n        IStructs.State storage state = gState;\n        int256 xAmountFixed = LibFixedMath.toFixed(x_amount, 10**18);\n        int256 yAmountFixed = LibFixedMath.toFixed(y_amount, 10**6);\n\n        // Ensure that the amount of x and y that are being deposited are proportional.\n       require(\n            xAmountFixed.mul(state.y) == yAmountFixed.mul(state.x),\n            \"Liquidty:Amount deposited not proportional\"\n        );\n\n        // Charge the sender the amount of x and y tokens that were specified\n        IERC20(state.xAddress).transferFrom(msg.sender, address(this), x_amount);\n        IERC20(state.yAddress).transferFrom(msg.sender, address(this), y_amount);\n\n        // Grant the sender some liquidity tokens.\n        // FIXME(jalextowle): (Look into whether more precision is needed)\n        uint256 liquidity_reward;\n        if (state.x == 0) {\n            liquidity_reward = 0;\n            state.l = 1;\n        } else {\n            liquidity_reward = x_amount.safeMul(state.l).safeDiv(uint256(state.x) >> 127);\n        }\n\n        // Increase the balances of x and y\n        state.x = LibFixedMath.add(state.x, xAmountFixed);\n        state.y = LibFixedMath.add(state.y, yAmountFixed);\n\n        // Grant the liquidity tokens\n        state.liquidityBalance[msg.sender] = state.liquidityBalance[msg.sender].safeAdd(\n            liquidity_reward\n        );\n        state.l = state.l.safeAdd(liquidity_reward);\n    }\n\n    /// @dev Allows a sender to withdraw tokens by burning liquidity tokens.\n    /// @param l_amount The amount of liquidity tokens to burn.\n    function removeLiquidity(uint256 l_amount)\n        external\n    {\n        // Load the contract's state.\n        IStructs.State storage state = gState;\n\n        // Calculate the amounts of tokens that should be sent to the sender.\n        uint256 x_amount = l_amount.safeMul(uint256(state.x) >> 127).safeDiv(state.l);\n        uint256 y_amount = l_amount.safeMul(uint256(state.y) >> 127).safeDiv(state.l);\n\n        // Decrease the balances of x and y\n        state.x = LibFixedMath.sub(state.x, LibFixedMath.toFixed(x_amount));\n        state.y = LibFixedMath.sub(state.y, LibFixedMath.toFixed(y_amount));\n\n        // Destroy the liquidity tokens\n        state.liquidityBalance[msg.sender] = state.liquidityBalance[msg.sender].safeSub(\n            l_amount\n        );\n        state.l = state.l.safeAdd(l_amount);\n\n        // Reward sender in the correct amounts of x and y.\n        IERC20(state.xAddress).transfer(msg.sender, x_amount);\n        IERC20(state.yAddress).transfer(msg.sender, y_amount);\n    }\n}\n",
		"libs/LibSafeMath.sol": "pragma solidity ^0.5.9;\n\n\nlibrary LibSafeMath {\n\n    function safeMul(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        if (c / a != b) {\n            revert(\"safeMul: overflow\");\n        }\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (b == 0) {\n            revert(\"safeDiv: overflow\");\n        }\n        uint256 c = a / b;\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (b > a) {\n            revert(\"safeSub: underflow\");\n        }\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 c = a + b;\n        if (c < a) {\n            revert(\"safeAdd: overflow\");\n        }\n        return c;\n    }\n\n    function max256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}",
		"interfaces/IERC20.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\ninterface IERC20 {\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function transfer(address, uint256) external returns (bool);\n\n}\n",
		"core/Swapper.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IStructs.sol\";\nimport \"../interfaces/IEvents.sol\";\nimport \"../libs/LibFixedMath.sol\";\nimport \"../libs/LibSafeMath.sol\";\nimport \"../libs/LibScamMath.sol\";\nimport \"../libs/LibToken.sol\";\nimport \"../core/State.sol\";\nimport \"../interfaces/IERC20.sol\";\n\n\ncontract Swapper is\n    IEvents,\n    State\n{\n\n    using LibFixedMath for int256;\n\n    event Price(int256 price, int256 deltaB, int256 newPBarX, int256 pA);\n\n    function swap(\n        address fromToken,\n        address toToken,\n        uint256 amount\n    )\n        public\n        returns (uint256 amountReceived)\n    {\n        IStructs.State memory state = _loadGlobalState();\n\n        if (fromToken == state.xAddress && toToken == state.yAddress) {\n            int256 amountReceivedFixed = _swap(\n                fromToken,\n                toToken,\n                LibToken.daiToFixed(amount),\n                state\n            );\n            amountReceived = LibToken.usdcFromFixed(amountReceivedFixed);\n        } else if(fromToken == state.yAddress && toToken == state.xAddress) {\n            int256 amountReceivedFixed = _swap(\n                fromToken,\n                toToken,\n                LibToken.usdcToFixed(amount),\n                state\n            );\n            amountReceived = LibToken.daiFromFixed(amountReceivedFixed);\n        } else {\n            revert(\"Invalid token addresses\");\n        }\n\n        // Make transfers\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amount),\n            'INSUFFICIENT_FROM_TOKEN_BALANCE'\n        );\n        require(\n            // IERC20(toToken).transferFrom(address(this), msg.sender, amountReceived),\n            IERC20(toToken).transfer(msg.sender, amountReceived),\n            'INSUFFICIENT_TO_TOKEN_BALANCE'\n        );\n\n        // Emit event\n        emit IEvents.Fill(\n            msg.sender,\n            fromToken,\n            toToken,\n            amount,\n            amountReceived\n        );\n\n        return amountReceived;\n    }\n\n    function _swap(\n        address fromToken,\n        address toToken,\n        int256 deltaA,\n        IStructs.State memory state\n    )\n        internal\n        returns (int256 amountReceived)\n    {\n        // Compute initial balances (fixed point).\n        int256 a = 0;\n        int256 b = 0;\n        int256 pBarA = 0;\n        bool fromIsX;\n        if (fromToken == state.xAddress && toToken == state.yAddress) {\n            a = state.x;\n            b = state.y;\n            pBarA = state.pBarX;\n            fromIsX = true;\n        } else if(fromToken == state.yAddress && toToken == state.xAddress) {\n            a = state.y;\n            b = state.x;\n            pBarA = LibFixedMath.one().div(state.pBarX);\n        } else {\n            revert(\"Invalid token addresses\");\n        }\n\n        // Compute\n        (int256 pA, int256 price) = _bisect(\n            a,\n            b,\n            pBarA,\n            deltaA,\n            state\n        );\n\n        // Compute about of `tokenB`\n        int256 deltaB = deltaA\n            .mul(price)\n            .mul(\n                LibFixedMath.one().sub(state.fee)\n            );\n        deltaB = int256(0).sub(deltaB); // negate\n\n        // Edge Cases\n        int256 epsilon = LibFixedMath.toFixed(int256(1), int256(100000)); // Good for USDC, may vary w token.\n        if (deltaB > 0) {\n            deltaB = 0;\n        } else if (b.add(deltaB) <= epsilon) {\n            deltaB = epsilon.sub(b);\n        }\n\n        // Handle additional edge cases\n        int256 newPBarA = LibScamMath.computeNewPBarA(\n            state.t,\n            _getCurrentBlockNumber(),\n            state.beta,\n            pA,\n            pBarA\n        );\n        if (newPBarA > state.eToKappa.mul(pBarA)) {\n            newPBarA = state.eToKappa.mul(pBarA);\n        } else if(newPBarA < LibFixedMath.one().div(state.eToKappa).mul(pBarA)) {\n            newPBarA = LibFixedMath.one().div(state.eToKappa).mul(pBarA);\n        }\n\n        // Update state\n        state.t = _getCurrentBlockNumber();\n        if (fromIsX) {\n            state.x = a.add(deltaA);\n            state.y = b.add(deltaB);\n            state.pBarX = newPBarA;\n        } else {\n            state.x = b.add(deltaB);\n            state.y = a.add(deltaA);\n            state.pBarX = LibFixedMath.one().div(newPBarA);\n        }\n\n        // Update state\n        _saveGlobalState(state);\n\n        emit IEvents.FillInternal(\n                msg.sender,\n                deltaA,\n                deltaB\n        );\n\n        amountReceived = -deltaB;\n        return amountReceived;\n    }\n\n    event Bisect(\n        int256 lhs1,\n        int256 mid,\n        int256 lhs\n    );\n\n    function _bisect(\n        int256 a,\n        int256 b,\n        int256 pBarA,\n        int256 deltaA,\n        IStructs.State memory state\n    )\n        internal\n        returns (int256 pA, int256 r)\n    {\n        // Compute initial midpoint on bond curve; this will be the initial lower bound.\n        pA = LibScamMath.computeMidpointOnBondCurve(\n            a,\n            b,\n            pBarA,\n            state.rhoRatio\n        );\n\n        // Compute initial bounds.\n        int256 lowerBound = 0;\n        int256 upperBound = pA;\n\n        // Cache this value for computations.\n        int256 aPlusAmount = a.add(deltaA);\n\n        //\n        for (uint256 i = 0; i < 20; ++i) {\n            int256 mid = LibScamMath.computeMidpoint(lowerBound, upperBound);\n            int256 lhs1 = LibScamMath.computeBaseToNinetyNine(mid.div(pBarA));\n            int256 lhs = aPlusAmount\n                .mul(lhs1)\n                .mul(mid)\n                .add(deltaA.mul(mid));\n            emit Bisect(\n                lhs1,\n                mid,\n                lhs\n            );\n            if (lhs > b) {\n                upperBound = mid;\n            } else {\n                lowerBound = mid;\n            }\n        }\n\n        return (pA, lowerBound);\n    }\n\n    function _getCurrentBlockNumber()\n        internal\n        returns (uint256)\n    {\n        return block.number;\n    }\n}\n",
		"interfaces/IEvents.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ninterface IEvents {\n\n    event Fill(\n        address from,\n        address fromToken,\n        address toToken,\n        uint256 amountSpent,\n        uint256 amountReceived\n    );\n\n    event FillInternal(\n        address from,\n        int256 amountSpent,\n        int256 amountReceived\n    );\n}\n",
		"libs/LibToken.sol": "pragma solidity ^0.5.9;\n\nimport \"../libs/LibScamMath.sol\";\n\n\nlibrary LibToken {\n\n    uint256 private constant DAI_DECIMALS = 18;\n    uint256 private constant USDC_DECIMALS = 6;\n\n    function daiToFixed(uint256 amount)\n        internal\n        pure\n        returns (int256 fixedAmount)\n    {\n        return LibScamMath.tokenToFixed(amount, DAI_DECIMALS);\n    }\n\n    function daiFromFixed(int256 amount)\n        internal\n        pure\n        returns (uint256 tokenAmount)\n    {\n        return LibScamMath.tokenFromFixed(amount, DAI_DECIMALS);\n    }\n\n    function usdcToFixed(uint256 amount)\n        internal\n        pure\n        returns (int256 fixedAmount)\n    {\n        return LibScamMath.tokenToFixed(amount, USDC_DECIMALS);\n    }\n\n    function usdcFromFixed(int256 amount)\n        internal\n        pure\n        returns (uint256 tokenAmount)\n    {\n        return LibScamMath.tokenFromFixed(amount, USDC_DECIMALS);\n    }\n}"
	},
	"sourceTreeHashHex": "0xebc2f26928dbe74d6503ab798fb4d587854f4fcf4cf7fcafa4579fd3acd3df87",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.13+commit.5b0b510c.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000000,
				"details": {
					"yul": true,
					"deduplicate": true,
					"cse": true,
					"constantOptimizer": true
				}
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"chains": {}
}