{
	"schemaVersion": "2.0.0",
	"contractName": "TestScam",
	"compilerOutput": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "xAddress",
						"type": "address"
					},
					{
						"name": "yAddress",
						"type": "address"
					}
				],
				"name": "initState",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "runBasicTest",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "l_amount",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "x_amount",
						"type": "uint256"
					},
					{
						"name": "y_amount",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "gState",
				"outputs": [
					{
						"name": "isInitialized",
						"type": "bool"
					},
					{
						"name": "xAddress",
						"type": "address"
					},
					{
						"name": "yAddress",
						"type": "address"
					},
					{
						"name": "x",
						"type": "int256"
					},
					{
						"name": "y",
						"type": "int256"
					},
					{
						"name": "l",
						"type": "uint256"
					},
					{
						"name": "pBarX",
						"type": "int256"
					},
					{
						"name": "rhoNumerator",
						"type": "uint256"
					},
					{
						"name": "rhoRatio",
						"type": "int256"
					},
					{
						"name": "fee",
						"type": "int256"
					},
					{
						"name": "t",
						"type": "uint256"
					},
					{
						"name": "beta",
						"type": "int256"
					},
					{
						"name": "eToKappa",
						"type": "int256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "fromToken",
						"type": "address"
					},
					{
						"name": "toToken",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "swap",
				"outputs": [
					{
						"name": "amountReceived",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "price",
						"type": "int256"
					},
					{
						"indexed": false,
						"name": "deltaB",
						"type": "int256"
					},
					{
						"indexed": false,
						"name": "newPBarX",
						"type": "int256"
					},
					{
						"indexed": false,
						"name": "pA",
						"type": "int256"
					}
				],
				"name": "Price",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "lhs1",
						"type": "int256"
					},
					{
						"indexed": false,
						"name": "mid",
						"type": "int256"
					},
					{
						"indexed": false,
						"name": "lhs",
						"type": "int256"
					}
				],
				"name": "Bisect",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "fromToken",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "toToken",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amountSpent",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "amountReceived",
						"type": "uint256"
					}
				],
				"name": "Fill",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amountSpent",
						"type": "int256"
					},
					{
						"indexed": false,
						"name": "amountReceived",
						"type": "int256"
					}
				],
				"name": "FillInternal",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"addLiquidity(uint256,uint256)": {
					"details": "Allows a sender to deposit tokens into the contract to provide liquidity.",
					"params": {
						"x_amount": "The amount of x that should be taken from the sender's balance.",
						"y_amount": "The amount of x that should be taken from the sender's balance."
					}
				},
				"removeLiquidity(uint256)": {
					"details": "Allows a sender to withdraw tokens by burning liquidity tokens.",
					"params": {
						"l_amount": "The amount of liquidity tokens to burn."
					}
				}
			}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2EA5 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CD441DA GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xDF791E50 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x180 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xAFD46EB5 EQ PUSH2 0x144 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x978CA36F EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x11E JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x7B689036 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x26A5 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x2E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x2759 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x2772 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F6 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x26A5 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x1D1 DUP3 DUP3 PUSH2 0xB01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x229 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP2 AND PUSH9 0x410D586A20A4C0000 PUSH2 0x777 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x251 SWAP1 DUP7 SWAP1 PUSH1 0x7F SHR PUSH4 0xFFFFFFFF PUSH2 0xC54 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCB1 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x284 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x251 PUSH1 0x7F DUP7 PUSH1 0x3 ADD SLOAD SWAP1 SHR DUP8 PUSH2 0xC54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x29C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x297 DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0x297 DUP4 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2DA SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xDC4 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x301 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE06 AND JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x363 SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x3B5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x410 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x462 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x47F DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x490 DUP5 PUSH3 0xF4240 PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A9 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xEDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x4BF SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST EQ PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x298A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x55C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5AE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x60B SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x65D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x67C JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0x0 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x69F PUSH1 0x7F DUP6 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x251 DUP7 PUSH1 0x4 ADD SLOAD DUP10 PUSH2 0xC54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x6B0 DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x6C4 SWAP1 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6EB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE06 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x712 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE06 AND JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xFF DUP13 AND SWAP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP14 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x789 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 DUP7 ADD SLOAD DUP3 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x7 DUP6 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xB DUP5 ADD SLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC SWAP1 SWAP4 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE SWAP3 POP SWAP1 DUP7 AND EQ DUP1 ISZERO PUSH2 0x87D JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x8AB JUMPI PUSH1 0x0 PUSH2 0x898 DUP7 DUP7 PUSH2 0x892 DUP8 PUSH2 0xF43 JUMP JUMPDEST DUP6 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A3 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x96B JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x919 JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 PUSH2 0x92E DUP7 DUP7 PUSH2 0x892 DUP8 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A3 DUP2 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST PUSH32 0x256DB8090FA51C3BAC981768637D5A7C46B5540644DCEF89052B89DBB2F6C8EA CALLER DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9A2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9BE PUSH1 0x1 PUSH1 0x2 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x9C9 PUSH2 0x1F4 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH2 0x9D7 PUSH2 0x3E8 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x9E4 PUSH2 0xAAE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH2 0xAA3 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2A8C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND PUSH2 0x100 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xBC5 PUSH1 0x63 PUSH1 0x64 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x63 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0xBDA SWAP1 PUSH1 0x64 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xBEA PUSH1 0x5 PUSH2 0x2710 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xC12 PUSH2 0xBFE PUSH1 0x1 PUSH3 0xF4240 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD54 AND JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xC23 PUSH2 0x2715 PUSH2 0x3E8 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC63 JUMPI POP PUSH1 0x0 PUSH2 0xCAB JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC70 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2C22 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xCF5 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2BC5 JUMP JUMPDEST PUSH2 0xCAB DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0xDBD DUP4 DUP4 PUSH1 0x0 SUB PUSH2 0x135C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2A1E JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2D6C JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2B31 JUMP JUMPDEST PUSH2 0xDBD PUSH2 0xED9 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST DUP4 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 ISZERO PUSH2 0xF11 JUMPI POP PUSH6 0x10000000000 SWAP1 SWAP2 SDIV SWAP1 PUSH11 0x8000000000000000000000 JUMPDEST PUSH1 0x0 PUSH2 0xF1D DUP6 DUP6 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 PUSH2 0xF28 JUMPI INVALID JUMPDEST SDIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD DUP4 DUP4 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x12 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xFB6 JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xFD5 JUMPI POP POP POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x1 PUSH2 0x1075 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1043 JUMPI POP DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x939 JUMPI DUP6 PUSH1 0x80 ADD MLOAD SWAP4 POP DUP6 PUSH1 0x60 ADD MLOAD SWAP3 POP PUSH2 0x1072 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1085 DUP7 DUP7 DUP7 DUP13 DUP13 PUSH2 0x14D9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x10BB PUSH2 0x109F DUP11 PUSH2 0x120 ADD MLOAD PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x10AF DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10CE PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD54 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10E0 PUSH1 0x1 PUSH3 0x186A0 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x111D JUMP JUMPDEST DUP1 PUSH2 0x1105 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SGT PUSH2 0x111D JUMPI PUSH2 0x111A DUP2 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xD54 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x113D DUP12 PUSH2 0x140 ADD MLOAD PUSH2 0x1130 PUSH2 0x15DF JUMP JUMPDEST DUP14 PUSH2 0x160 ADD MLOAD DUP9 DUP12 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x180 DUP13 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1156 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x117A JUMPI PUSH2 0x180 DUP12 ADD MLOAD PUSH2 0x1173 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x118F DUP8 PUSH2 0x10AF DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x11AE JUMPI PUSH2 0x11AB DUP8 PUSH2 0x10AF DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x11B6 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x140 DUP13 ADD MSTORE DUP6 ISZERO PUSH2 0x11F8 JUMPI PUSH2 0x11D2 DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x11E7 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xC0 DUP12 ADD DUP2 SWAP1 MSTORE PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x1208 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x121D DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH2 0x122E DUP2 PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MSTORE JUMPDEST PUSH2 0x123D DUP12 PUSH2 0x16C1 JUMP JUMPDEST PUSH32 0x666804E599B015EDCFB9DE12153BF8A48AA5A84B8861B8FA88C1CF4B11974C15 CALLER DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1270 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x284E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 SUB SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x6 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x6 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x12 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD PUSH2 0xED9 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x12F3 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x1300 JUMPI POP PUSH1 0x0 PUSH2 0xCAB JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x130E JUMPI INVALID JUMPDEST SDIV EQ ISZERO DUP1 PUSH2 0x1325 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x1321 JUMPI INVALID JUMPDEST SDIV EQ ISZERO JUMPDEST ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x136F JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0x137A JUMPI POP DUP3 DUP2 SGT JUMPDEST DUP1 PUSH2 0x139B JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x1390 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 ISZERO PUSH2 0x139B JUMPI POP DUP3 DUP2 SLT JUMPDEST ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ DUP1 ISZERO PUSH2 0x1459 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ JUMPDEST ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1499 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD DUP4 DUP4 PUSH1 0xA EXP PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CA PUSH2 0xED9 DUP5 PUSH11 0x8000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH6 0x10000000000 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14ED DUP8 DUP8 DUP8 DUP7 PUSH2 0x100 ADD MLOAD PUSH2 0x16F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 DUP2 PUSH2 0x1503 DUP11 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 PUSH2 0x151D DUP6 DUP6 PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1539 PUSH2 0x1534 DUP4 DUP14 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1570 PUSH2 0x1550 DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST PUSH2 0x1564 DUP6 PUSH2 0x10AF DUP10 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SWAP1 POP PUSH32 0x4ADD19BBBE358CAF4AF4A31B1299356FC4DCCF8B4CF3C87E401B0FA60062F31E DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP13 DUP2 SGT ISZERO PUSH2 0x15BD JUMPI DUP3 SWAP6 POP PUSH2 0x15C1 JUMP JUMPDEST DUP3 SWAP7 POP JUMPDEST POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1508 JUMP JUMPDEST POP SWAP2 SWAP3 POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST NUMBER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15F1 DUP8 DUP8 SUB PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1616 PUSH2 0x1611 PUSH2 0x1604 DUP9 PUSH2 0x18C1 JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1626 DUP3 PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163A DUP8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x164E DUP8 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x167A PUSH2 0x1665 DUP6 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST PUSH2 0x1675 DUP8 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x168A DUP3 PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16AF PUSH2 0x169B PUSH1 0x2 PUSH2 0x25B9 JUMP JUMPDEST PUSH2 0x1066 DUP5 PUSH2 0x1564 DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 SSTORE PUSH2 0x140 ADD MLOAD PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD DUP3 PUSH1 0xA EXP DUP5 MUL PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1706 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x171A DUP7 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x172E DUP4 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x173E DUP7 PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x174A PUSH2 0x12D2 JUMP JUMPDEST DUP5 SLT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1761 PUSH2 0x1611 DUP4 PUSH2 0x10AF DUP8 PUSH2 0x18C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x1783 PUSH2 0x177B PUSH2 0x1611 DUP5 PUSH2 0x10AF DUP8 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1796 DUP2 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP6 POP PUSH32 0x3CF9BD989028BFC957CA46FD34C8ED26F90D849442378EE442FCD56CF5CAC44F DUP11 DUP11 DUP11 DUP11 PUSH2 0x17C6 DUP12 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD PUSH2 0x1804 PUSH2 0x17FC PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x1564 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x1066 DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1827 DUP4 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x183B DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x184F DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1863 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1877 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x188B DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x189F DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18B3 DUP3 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 SGT ISZERO PUSH2 0x190D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2A55 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1967 JUMPI POP PUSH1 0x0 PUSH2 0x1BA JUMP JUMPDEST PUSH5 0x733048C5A DUP3 SGT PUSH2 0x199A JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH11 0x1C8464F76164760000000 DUP6 SGT PUSH2 0x19F9 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH11 0x1C8464F76164760000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH13 0xF1AADDD7742E90000000000000 DUP6 SGT PUSH2 0x1A57 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH13 0xF1AADDD7742E90000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH15 0xAFE10820813D78000000000000000 DUP6 SGT PUSH2 0x1AB9 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH15 0xAFE10820813D78000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2582AB704279EC00000000000000000 DUP6 SGT PUSH2 0x1B1D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2582AB704279EC00000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x1152AAA3BF81CC000000000000000000 DUP6 SGT PUSH2 0x1B81 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x1152AAA3BF81CC000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2F16AC6C59DE70000000000000000000 DUP6 SGT PUSH2 0x1BE5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2F16AC6C59DE70000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x4DA2CBF1BE5828000000000000000000 DUP6 SGT PUSH2 0x1C49 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x4DA2CBF1BE5828000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x63AFBE7AB2082C000000000000000000 DUP6 SGT PUSH2 0x1CAD JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x63AFBE7AB2082C000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP6 SGT PUSH2 0x1D11 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x70F5A893B608861E1F58934F97AEA57D PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 DUP6 ADD SWAP3 POP DUP3 SWAP2 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP1 MUL SDIV SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 DUP2 SUB DUP4 MUL SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1D87 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x200000000000000000000000000000000 DUP4 PUSH16 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA SUB DUP4 MUL DUP2 PUSH2 0x1DB8 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1DD8 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x300000000000000000000000000000000 DUP4 PUSH16 0x99999999999999999999999999999999 SUB DUP4 MUL DUP2 PUSH2 0x1E09 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1E29 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x400000000000000000000000000000000 DUP4 PUSH16 0x92492492492492492492492492492492 SUB DUP4 MUL DUP2 PUSH2 0x1E5A JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1E7A JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x500000000000000000000000000000000 DUP4 PUSH16 0x8E38E38E38E38E38E38E38E38E38E38E SUB DUP4 MUL DUP2 PUSH2 0x1EAB JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1ECB JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x600000000000000000000000000000000 DUP4 PUSH16 0x8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B SUB DUP4 MUL DUP2 PUSH2 0x1EFC JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1F1C JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x700000000000000000000000000000000 DUP4 PUSH16 0x89D89D89D89D89D89D89D89D89D89D89 SUB DUP4 MUL DUP2 PUSH2 0x1F4D JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1F6D JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x800000000000000000000000000000000 DUP4 PUSH16 0x88888888888888888888888888888888 SUB DUP4 MUL DUP2 PUSH2 0x1F9E JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 DUP3 SLT ISZERO PUSH2 0x1FDD JUMPI POP PUSH1 0x0 PUSH2 0x1BA JUMP JUMPDEST DUP2 PUSH2 0x1FF9 JUMPI POP PUSH16 0x80000000000000000000000000000000 PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x2034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 PUSH16 0x10000000000000000000000000000000 DUP4 SMOD DUP1 DUP1 MUL DUP3 SWAP1 SDIV PUSH8 0x10E1B3BE415A0000 DUP2 MUL SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP2 DUP4 MUL SDIV SWAP1 POP DUP1 PUSH8 0x5A0913F6B1E0000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x20A0 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH8 0x168244FDAC78000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x20CD JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x4807432BC18000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x20F9 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0xC0135DCA04000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2125 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x1B707B1CDC000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2151 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x36E0F639B800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x217C JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x618FEE9F800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x21A7 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x9C197DCC00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x21D1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0xE30DCE400 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x21FB JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x12EBD1300 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2225 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x17499F00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x224E JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x1A9D480 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2277 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C6380 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x229F JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C638 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22C7 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x1AB8 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22EE JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x17C MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2315 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH1 0x14 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x233B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP6 SWAP1 SWAP6 SUB SWAP5 PUSH8 0x21C3677C82B40000 SWAP2 SWAP1 SDIV SWAP4 DUP5 ADD SDIV DUP3 ADD PUSH16 0x80000000000000000000000000000000 ADD SWAP3 SWAP1 POP PUSH17 0x1000000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x23AA JUMPI PUSH19 0x43CBAF42A000812488FC5C220AD7B97BF6E99E PUSH13 0xF1AADDD7742E56D32FB9F99744 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x800000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x23EC JUMPI PUSH18 0x5D27A9F51C31B7C2F8038212A0574779991 PUSH15 0xAFE10820813D65DFE6A33C07F738F DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x400000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x242E JUMPI PUSH17 0x1B4C902E273A58678D6D3BFDB93DB96D02 PUSH16 0x2582AB704279E8EFD15E0265855C47A DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x200000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x2470 JUMPI PUSH17 0x3B1CC971A9BB5B9867477440D6D157750 PUSH16 0x1152AAA3BF81CB9FDB76EAE12D029571 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x100000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x24B2 JUMPI PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 PUSH16 0x2F16AC6C59DE6F8D5D6F63C1482A7C86 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x24F2 JUMPI PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 PUSH16 0x4DA2CBF1BE5827F9EB3AD1AA9866EBB3 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x40000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x2532 JUMPI PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 PUSH16 0x63AFBE7AB2082BA1A0AE5E4EB1B479DC DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x20000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x2572 JUMPI PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x10000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x25B2 JUMPI PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 PUSH16 0x783EAFEF1C0A8F3978C7F81824D62EBF DUP5 MUL SDIV SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 SDIV SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBD DUP4 DUP4 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DE DUP5 DUP5 PUSH2 0x2681 JUMP JUMPDEST SWAP2 POP PUSH2 0x26ED DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x2681 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x270B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2716 DUP2 PUSH2 0x2E40 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2726 DUP2 PUSH2 0x2E40 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP13 ISZERO ISZERO DUP14 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 SWAP1 SWAP11 AND PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP11 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP10 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654164643A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4C697175696474793A416D6F756E74206465706F7369746564206E6F74207072 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F706F7274696F6E616C00000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654469763A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166655375623A20756E646572666C6F770000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F20736D616C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C794F776E65724572726F72000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C726561647920496E697469616C697A656400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573736573000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A2064656E6F6D696E61746F7220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74206265206C657373207468616E207A65726F0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F206C6172676500000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865643A2076616C75652063616E6E6F74206265206C657373207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654D756C3A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578703A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E736665724F776E6572546F5A65726F4572726F720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6D756C3A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6164643A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x7375623A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A206E756D657261746F72206361 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6E6F74206265206C657373207468616E207A65726F00000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A20646976696465206279207A65726F000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723058 KECCAK256 0xc1 MUL 0x22 0xd4 JUMP RETURN 0xe0 LOG3 0xfb PUSH23 0x3C2432843AC9D2CECD9C05E9E9A6F6EC9C918E454E106C PUSH6 0x78706572696D PUSH6 0x6E74616CF564 PUSH20 0x6F6C634300050900400000000000000000000000 ",
				"sourceMap": "154:1083:12:-;;;212:5:2;:18;;-1:-1:-1;;;;;;212:18:2;220:10;212:18;;;154:1083:12;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c80639cd441da11610076578063df791e501161005b578063df791e5014610165578063e1c7392a14610178578063f2fde38b14610180576100be565b80639cd441da14610131578063afd46eb514610144576100be565b80638da5cb5b116100a75780638da5cb5b14610101578063978ca36f146101165780639c8f9f231461011e576100be565b806370a08231146100c35780637b689036146100ec575b600080fd5b6100d66100d13660046126a5565b610193565b6040516100e39190612e37565b60405180910390f35b6100ff6100fa3660046126c1565b6101bf565b005b6101096101d5565b6040516100e39190612794565b6100ff6101f1565b6100ff61012c366004612759565b61022c565b6100ff61013f366004612772565b610469565b61014c610722565b6040516100e39d9c9b9a999897969594939291906128a2565b6100d66101733660046126f6565b610777565b6100ff6109b2565b6100ff61018e3660046126a5565b6109dc565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600b60205260409020545b919050565b6101c7610aae565b6101d18282610b01565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6001546002546102299173ffffffffffffffffffffffffffffffffffffffff61010090910481169116680410d586a20a4c0000610777565b50565b60055460035460019160009161025d9190610251908690607f1c63ffffffff610c5416565b9063ffffffff610cb116565b905060006102848360040154610251607f8660030154901c87610c5490919063ffffffff16565b905061029c836002015461029784610cfe565b610d54565b600284015560038301546102b39061029783610cfe565b6003840155336000908152600a840160205260409020546102da908563ffffffff610dc416565b336000908152600a850160205260409020556004830154610301908563ffffffff610e0616565b60048481019190915583546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff169163a9059cbb9161036391339187910161287c565b602060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103b59190810190612737565b5060018301546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90610410903390859060040161287c565b602060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104629190810190612737565b5050505050565b6001600061047f84670de0b6b3a7640000610e45565b9050600061049084620f4240610e45565b90506104a9836002015482610edf90919063ffffffff16565b60038401546104bf90849063ffffffff610edf16565b146104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f69061298a565b60405180910390fd5b82546040517f23b872dd00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff16906323b872dd9061055c90339030908a9060040161281d565b602060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105ae9190810190612737565b5060018301546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9061060b9033903090899060040161281d565b602060405180830381600087803b15801561062557600080fd5b505af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061065d9190810190612737565b50600083600201546000141561067c57506001600484015560006106a2565b61069f607f8560020154901c610251866004015489610c5490919063ffffffff16565b90505b6106b0846002015484610f32565b600285015560038401546106c49083610f32565b6003850155336000908152600a850160205260409020546106eb908263ffffffff610e0616565b336000908152600a860160205260409020556004840154610712908263ffffffff610e0616565b8460040181905550505050505050565b600154600254600354600454600554600654600754600854600954600a54600c54600d5460ff8c169b73ffffffffffffffffffffffffffffffffffffffff61010090910481169b16999897969594939291908d565b60006107816125eb565b610789610f3e565b604080516101a081018252825460ff81161515825273ffffffffffffffffffffffffffffffffffffffff6101009182900481166020840181905260018601548216948401949094526002850154606084015260038501546080840152600485015460a0840152600585015460c0840152600685015460e084015260078501549183019190915260088401546101208301526009840154610140830152600b840154610160830152600c90930154610180820152925090861614801561087d5750806040015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b156108ab576000610898868661089287610f43565b85610f50565b90506108a38161128c565b92505061096b565b806040015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480156109195750806020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b1561093957600061092e868661089287611299565b90506108a3816112a6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612afa565b7f256db8090fa51c3bac981768637d5a7c46b5540644dcef89052b89dbb2f6c8ea33868686866040516109a29594939291906127dc565b60405180910390a1509392505050565b6109be60016002610b01565b6109c96101f4610cfe565b6003556109d76103e8610cfe565b600455565b6109e4610aae565b73ffffffffffffffffffffffffffffffffffffffff8116610a31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612c90565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790556040517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090610aa390339084906127b5565b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610aff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612a8c565b565b60015460ff1615610b3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612ac3565b600180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff8581169190910291909117909155600280547fffffffffffffffffffffffff000000000000000000000000000000000000000016918316919091179055610bc560636064610e45565b60065560636007819055610bda906064610e45565b600855610bea6005612710610e45565b600955610c12610bfe6001620f42406112b3565b610c066112d2565b9063ffffffff610d5416565b600c55610c236127156103e86112b3565b600d555050600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055565b600082610c6357506000610cab565b82820282848281610c7057fe5b0414610ca8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612c22565b90505b92915050565b600081610cea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f6906129e7565b6000828481610cf557fe5b04949350505050565b600080821215610d3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612bc5565b610cab826f800000000000000000000000000000006112e6565b60007f8000000000000000000000000000000000000000000000000000000000000000821415610db0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612d35565b610dbd838360000361135c565b9392505050565b600082821115610e00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612a1e565b50900390565b600082820183811015610ca8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612953565b600080831215610e81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612d6c565b6000821215610ebc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612b31565b610dbd610ed9846f800000000000000000000000000000006112e6565b836113d2565b60006f800000000000000000000000000000008215610f11575065010000000000909105906a80000000000000000000005b6000610f1d85856112e6565b9050818181610f2857fe5b0595945050505050565b6000610dbd838361135c565b600190565b6000610cab8260126114a1565b6020810151600090819081908190819073ffffffffffffffffffffffffffffffffffffffff8a81169116148015610fb65750856040015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b15610fd557505050506060820151608083015160c08401516001611075565b856040015173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161480156110435750856020015173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b156109395785608001519350856060015192506110728660c001516110666112d2565b9063ffffffff6114b016565b91505b6000806110858686868c8c6114d9565b9150915060006110bb61109f8a6101200151610c066112d2565b6110af8c8563ffffffff610edf16565b9063ffffffff610edf16565b90506110ce60008263ffffffff610d5416565b905060006110e06001620186a06112b3565b905060008213156110f4576000915061111d565b80611105888463ffffffff610f3216565b1361111d5761111a818863ffffffff610d5416565b91505b600061113d8b61014001516111306115df565b8d6101600151888b6115e3565b6101808c0151909150611156908863ffffffff610edf16565b81131561117a576101808b0151611173908863ffffffff610edf16565b90506111ae565b61118f876110af8d61018001516110666112d2565b8112156111ae576111ab876110af8d61018001516110666112d2565b90505b6111b66115df565b6101408c015285156111f8576111d2898d63ffffffff610f3216565b60608c01526111e7888463ffffffff610f3216565b60808c015260c08b01819052611234565b611208888463ffffffff610f3216565b60608c015261121d898d63ffffffff610f3216565b60808c015261122e816110666112d2565b60c08c01525b61123d8b6116c1565b7f666804e599b015edcfb9de12153bf8a48aa5a84b8861b8fa88c1cf4b11974c15338d856040516112709392919061284e565b60405180910390a150506000039b9a5050505050505050505050565b6000610cab8260066116e3565b6000610cab8260066114a1565b6000610cab8260126116e3565b6000610dbd610ed9846f800000000000000000000000000000006112e6565b6f8000000000000000000000000000000090565b60008215806112f3575081155b1561130057506000610cab565b508181028183828161130e57fe5b0514158061132557508282828161132157fe5b0514155b15610cab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612cc7565b81810160008312801561136f5750600082125b801561137a57508281135b8061139b57506000831380156113905750600082135b801561139b57508281125b15610cab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612cfe565b60008161140b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612dc9565b7f8000000000000000000000000000000000000000000000000000000000000000831480156114595750817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff145b15611490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612e00565b81838161149957fe5b059392505050565b6000610dbd8383600a0a610e45565b60006114ca610ed9846a80000000000000000000006112e6565b65010000000000029392505050565b6000806114ed8787878661010001516116f3565b9150600082816115038a8863ffffffff610f3216565b905060005b60148110156115cf57600061151d85856117ec565b90506000611539611534838d63ffffffff6114b016565b611814565b905060006115706115508c8563ffffffff610edf16565b611564856110af898763ffffffff610edf16565b9063ffffffff610f3216565b90507f4add19bbbe358caf4af4a31b1299356fc4dccf8b4cf3c87e401b0fa60062f31e8284836040516115a59392919061291a565b60405180910390a18c8113156115bd578295506115c1565b8296505b505050806001019050611508565b5091925050509550959350505050565b4390565b6000806115f1878703610cfe565b90506000611616611611611604886118c1565b849063ffffffff610edf16565b611fab565b9050600061162682610c066112d2565b9050600061163a878363ffffffff610edf16565b9050600061164e878563ffffffff610edf16565b9050600061167a611665858b63ffffffff6114b016565b611675878b63ffffffff6114b016565b610f32565b9050600061168a826110666112d2565b905060006116af61169b60026125b9565b61106684611564898963ffffffff610f3216565b9e9d5050505050505050505050505050565b6060810151600355608081015160045560c08101516006556101400151600a55565b6000610dbd82600a0a84026125d5565b600080611706848763ffffffff610edf16565b9050600061171a868363ffffffff6114b016565b9050600061172e838863ffffffff6114b016565b9050600061173e86610c066112d2565b9050600061174a6112d2565b84121561176857611761611611836110af876118c1565b9050611786565b61178361177b611611846110af876118c1565b6110666112d2565b90505b611796818963ffffffff610edf16565b95507f3cf9bd989028bfc957ca46fd34c8ed26f90d849442378ee442fcd56cf5cac44f8a8a8a8a6117c68b6125d5565b6040516117d7959493929190612930565b60405180910390a15050505050949350505050565b6000610dbd6118046117fc6112d2565b6115646112d2565b611066858563ffffffff610f3216565b600080611827838063ffffffff610edf16565b9050600061183b848363ffffffff610edf16565b9050600061184f828063ffffffff610edf16565b90506000611863828063ffffffff610edf16565b90506000611877828063ffffffff610edf16565b9050600061188b828063ffffffff610edf16565b9050600061189f828063ffffffff610edf16565b905060006118b3828863ffffffff610edf16565b9a9950505050505050505050565b60006f8000000000000000000000000000000082131561190d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612b8e565b60008213611947576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612a55565b6f80000000000000000000000000000000821415611967575060006101ba565b640733048c5a821361199a57507fffffffffffffffffffffffffffffffe0100000000000000000000000000000006101ba565b60008060006a01c8464f7616476000000085136119f9577ffffffffffffffffffffffffffffffff000000000000000000000000000000000909301926a01c8464f761647600000006f8000000000000000000000000000000086020594505b6cf1aaddd7742e900000000000008513611a57577ffffffffffffffffffffffffffffffff800000000000000000000000000000000909301926cf1aaddd7742e900000000000006f8000000000000000000000000000000086020594505b6e0afe10820813d780000000000000008513611ab9577ffffffffffffffffffffffffffffffffc00000000000000000000000000000000909301926e0afe10820813d780000000000000006f8000000000000000000000000000000086020594505b6f02582ab704279ec000000000000000008513611b1d577ffffffffffffffffffffffffffffffffe00000000000000000000000000000000909301926f02582ab704279ec000000000000000006f8000000000000000000000000000000086020594505b6f1152aaa3bf81cc0000000000000000008513611b81577fffffffffffffffffffffffffffffffff00000000000000000000000000000000909301926f1152aaa3bf81cc0000000000000000006f8000000000000000000000000000000086020594505b6f2f16ac6c59de700000000000000000008513611be5577fffffffffffffffffffffffffffffffff80000000000000000000000000000000909301926f2f16ac6c59de700000000000000000006f8000000000000000000000000000000086020594505b6f4da2cbf1be58280000000000000000008513611c49577fffffffffffffffffffffffffffffffffc0000000000000000000000000000000909301926f4da2cbf1be58280000000000000000006f8000000000000000000000000000000086020594505b6f63afbe7ab2082c0000000000000000008513611cad577fffffffffffffffffffffffffffffffffe0000000000000000000000000000000909301926f63afbe7ab2082c0000000000000000006f8000000000000000000000000000000086020594505b6f70f5a893b608861e1f58934f97aea57d8513611d11577ffffffffffffffffffffffffffffffffff0000000000000000000000000000000909301926f70f5a893b608861e1f58934f97aea57d6f8000000000000000000000000000000086020594505b7fffffffffffffffffffffffffffffffff80000000000000000000000000000000850192508291506f80000000000000000000000000000000828002059050700100000000000000000000000000000000838103830205840193506f8000000000000000000000000000000081830281611d8757fe5b059150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281611db857fe5b05840193506f8000000000000000000000000000000081830281611dd857fe5b059150700300000000000000000000000000000000836f9999999999999999999999999999999903830281611e0957fe5b05840193506f8000000000000000000000000000000081830281611e2957fe5b059150700400000000000000000000000000000000836f9249249249249249249249249249249203830281611e5a57fe5b05840193506f8000000000000000000000000000000081830281611e7a57fe5b059150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e03830281611eab57fe5b05840193506f8000000000000000000000000000000081830281611ecb57fe5b059150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281611efc57fe5b05840193506f8000000000000000000000000000000081830281611f1c57fe5b059150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d8903830281611f4d57fe5b05840193506f8000000000000000000000000000000081830281611f6d57fe5b059150700800000000000000000000000000000000836f8888888888888888888888888888888803830281611f9e57fe5b0584019350505050919050565b60007fffffffffffffffffffffffffffffffe010000000000000000000000000000000821215611fdd575060006101ba565b81611ff957506f800000000000000000000000000000006101ba565b6000821315612034576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690612c59565b6f800000000000000000000000000000006f1000000000000000000000000000000083078080028290056710e1b3be415a0000810293909301929091818302059050806705a0913f6b1e000002830192506f80000000000000000000000000000000828202816120a057fe5b05905080670168244fdac7800002830192506f80000000000000000000000000000000828202816120cd57fe5b05905080664807432bc1800002830192506f80000000000000000000000000000000828202816120f957fe5b05905080660c0135dca0400002830192506f800000000000000000000000000000008282028161212557fe5b059050806601b707b1cdc00002830192506f800000000000000000000000000000008282028161215157fe5b059050806536e0f639b80002830192506f800000000000000000000000000000008282028161217c57fe5b05905080650618fee9f80002830192506f80000000000000000000000000000000828202816121a757fe5b05905080649c197dcc0002830192506f80000000000000000000000000000000828202816121d157fe5b05905080640e30dce40002830192506f80000000000000000000000000000000828202816121fb57fe5b0590508064012ebd130002830192506f800000000000000000000000000000008282028161222557fe5b059050806317499f0002830192506f800000000000000000000000000000008282028161224e57fe5b059050806301a9d48002830192506f800000000000000000000000000000008282028161227757fe5b05905080621c638002830192506f800000000000000000000000000000008282028161229f57fe5b059050806201c63802830192506f80000000000000000000000000000000828202816122c757fe5b05905080611ab802830192506f80000000000000000000000000000000828202816122ee57fe5b0590508061017c02830192506f800000000000000000000000000000008282028161231557fe5b05905080601402830192506f800000000000000000000000000000008282028161233b57fe5b600095909503946721c3677c82b400009190059384010582016f80000000000000000000000000000000019290507010000000000000000000000000000000008416156123aa577243cbaf42a000812488fc5c220ad7b97bf6e99e6cf1aaddd7742e56d32fb9f9974484020592505b7008000000000000000000000000000000008416156123ec577105d27a9f51c31b7c2f8038212a05747799916e0afe10820813d65dfe6a33c07f738f84020592505b70040000000000000000000000000000000084161561242e57701b4c902e273a58678d6d3bfdb93db96d026f02582ab704279e8efd15e0265855c47a84020592505b700200000000000000000000000000000000841615612470577003b1cc971a9bb5b9867477440d6d1577506f1152aaa3bf81cb9fdb76eae12d02957184020592505b7001000000000000000000000000000000008416156124b25770015bf0a8b1457695355fb8ac404e7a79e36f2f16ac6c59de6f8d5d6f63c1482a7c8684020592505b6f800000000000000000000000000000008416156124f2576fd3094c70f034de4b96ff7d5b6f99fcd86f4da2cbf1be5827f9eb3ad1aa9866ebb384020592505b6f40000000000000000000000000000000841615612532576fa45af1e1f40c333b3de1db4dd55f29a76f63afbe7ab2082ba1a0ae5e4eb1b479dc84020592505b6f20000000000000000000000000000000841615612572576f910b022db7ae67ce76b441c27035c6a16f70f5a893b608861e1f58934f97aea57d84020592505b6f100000000000000000000000000000008416156125b2576f88415abbe9a76bead8d00cf112e4d4a86f783eafef1c0a8f3978c7f81824d62ebf84020592505b5050919050565b6000610cab826f800000000000000000000000000000006112e6565b6f80000000000000000000000000000000900590565b604051806101a00160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cab57600080fd5b6000602082840312156126b757600080fd5b610dbd8383612681565b600080604083850312156126d457600080fd5b6126de8484612681565b91506126ed8460208501612681565b90509250929050565b60008060006060848603121561270b57600080fd5b833561271681612e40565b9250602084013561272681612e40565b929592945050506040919091013590565b60006020828403121561274957600080fd5b81518015158114610ca857600080fd5b60006020828403121561276b57600080fd5b5035919050565b6000806040838503121561278557600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b9c15158d5273ffffffffffffffffffffffffffffffffffffffff9b8c1660208e015299909a1660408c015260608b019790975260808a019590955260a089019390935260c088019190915260e08701526101008601526101208501526101408401526101608301919091526101808201526101a00190565b9283526020830191909152604082015260600190565b948552602085019390935260408401919091526060830152608082015260a00190565b60208082526011908201527f736166654164643a206f766572666c6f77000000000000000000000000000000604082015260600190565b6020808252602a908201527f4c697175696474793a416d6f756e74206465706f7369746564206e6f7420707260408201527f6f706f7274696f6e616c00000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f736166654469763a206f766572666c6f77000000000000000000000000000000604082015260600190565b60208082526012908201527f736166655375623a20756e646572666c6f770000000000000000000000000000604082015260600190565b60208082526013908201527f6c6e3a2076616c756520746f6f20736d616c6c00000000000000000000000000604082015260600190565b6020808252600e908201527f4f6e6c794f776e65724572726f72000000000000000000000000000000000000604082015260600190565b60208082526013908201527f416c726561647920496e697469616c697a656400000000000000000000000000604082015260600190565b60208082526017908201527f496e76616c696420746f6b656e20616464726573736573000000000000000000604082015260600190565b60208082526038908201527f746f46697865642875696e742c75696e74293a2064656e6f6d696e61746f722060408201527f63616e6e6f74206265206c657373207468616e207a65726f0000000000000000606082015260800190565b60208082526013908201527f6c6e3a2076616c756520746f6f206c6172676500000000000000000000000000604082015260600190565b60208082526027908201527f746f46697865643a2076616c75652063616e6e6f74206265206c65737320746860408201527f616e207a65726f00000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f736166654d756c3a206f766572666c6f77000000000000000000000000000000604082015260600190565b60208082526014908201527f6578703a2076616c756520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526018908201527f5472616e736665724f776e6572546f5a65726f4572726f720000000000000000604082015260600190565b6020808252600e908201527f5f6d756c3a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f5f6164643a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b60208082526014908201527f7375623a2076616c756520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526036908201527f746f46697865642875696e742c75696e74293a206e756d657261746f7220636160408201527f6e6e6f74206265206c657373207468616e207a65726f00000000000000000000606082015260800190565b60208082526014908201527f5f6469763a20646976696465206279207a65726f000000000000000000000000604082015260600190565b6020808252600e908201527f5f6469763a206f766572666c6f77000000000000000000000000000000000000604082015260600190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461022957600080fdfea365627a7a72305820c10222d456f3e0a3fb763c2432843ac9d2cecd9c05e9e9a6f6ec9c918e454e106c6578706572696d656e74616cf564736f6c63430005090040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CD441DA GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xDF791E50 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x180 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xAFD46EB5 EQ PUSH2 0x144 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x978CA36F EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x11E JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x7B689036 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x26A5 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x2E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x2759 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x2772 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F6 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x26A5 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x1D1 DUP3 DUP3 PUSH2 0xB01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x229 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP2 AND PUSH9 0x410D586A20A4C0000 PUSH2 0x777 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x251 SWAP1 DUP7 SWAP1 PUSH1 0x7F SHR PUSH4 0xFFFFFFFF PUSH2 0xC54 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCB1 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x284 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x251 PUSH1 0x7F DUP7 PUSH1 0x3 ADD SLOAD SWAP1 SHR DUP8 PUSH2 0xC54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x29C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x297 DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0x297 DUP4 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2DA SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xDC4 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x301 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE06 AND JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP4 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x363 SWAP2 CALLER SWAP2 DUP8 SWAP2 ADD PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x3B5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x410 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x462 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x47F DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x490 DUP5 PUSH3 0xF4240 PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A9 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xEDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x4BF SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST EQ PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x298A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x55C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5AE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x60B SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x65D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2737 JUMP JUMPDEST POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x67C JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0x0 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x69F PUSH1 0x7F DUP6 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x251 DUP7 PUSH1 0x4 ADD SLOAD DUP10 PUSH2 0xC54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x6B0 DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x6C4 SWAP1 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6EB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE06 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH2 0x712 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xE06 AND JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xFF DUP13 AND SWAP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP14 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x789 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV DUP2 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 DUP7 ADD SLOAD DUP3 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x7 DUP6 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xB DUP5 ADD SLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC SWAP1 SWAP4 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE SWAP3 POP SWAP1 DUP7 AND EQ DUP1 ISZERO PUSH2 0x87D JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x8AB JUMPI PUSH1 0x0 PUSH2 0x898 DUP7 DUP7 PUSH2 0x892 DUP8 PUSH2 0xF43 JUMP JUMPDEST DUP6 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A3 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x96B JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x919 JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 PUSH2 0x92E DUP7 DUP7 PUSH2 0x892 DUP8 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A3 DUP2 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST PUSH32 0x256DB8090FA51C3BAC981768637D5A7C46B5540644DCEF89052B89DBB2F6C8EA CALLER DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9A2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9BE PUSH1 0x1 PUSH1 0x2 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x9C9 PUSH2 0x1F4 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH2 0x9D7 PUSH2 0x3E8 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x9E4 PUSH2 0xAAE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH2 0xAA3 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2A8C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND PUSH2 0x100 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xBC5 PUSH1 0x63 PUSH1 0x64 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x63 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0xBDA SWAP1 PUSH1 0x64 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xBEA PUSH1 0x5 PUSH2 0x2710 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xC12 PUSH2 0xBFE PUSH1 0x1 PUSH3 0xF4240 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD54 AND JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xC23 PUSH2 0x2715 PUSH2 0x3E8 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC63 JUMPI POP PUSH1 0x0 PUSH2 0xCAB JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC70 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2C22 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xCF5 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2BC5 JUMP JUMPDEST PUSH2 0xCAB DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0xDBD DUP4 DUP4 PUSH1 0x0 SUB PUSH2 0x135C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2A1E JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2D6C JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2B31 JUMP JUMPDEST PUSH2 0xDBD PUSH2 0xED9 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST DUP4 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 ISZERO PUSH2 0xF11 JUMPI POP PUSH6 0x10000000000 SWAP1 SWAP2 SDIV SWAP1 PUSH11 0x8000000000000000000000 JUMPDEST PUSH1 0x0 PUSH2 0xF1D DUP6 DUP6 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 PUSH2 0xF28 JUMPI INVALID JUMPDEST SDIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD DUP4 DUP4 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x12 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xFB6 JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xFD5 JUMPI POP POP POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x1 PUSH2 0x1075 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1043 JUMPI POP DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x939 JUMPI DUP6 PUSH1 0x80 ADD MLOAD SWAP4 POP DUP6 PUSH1 0x60 ADD MLOAD SWAP3 POP PUSH2 0x1072 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1085 DUP7 DUP7 DUP7 DUP13 DUP13 PUSH2 0x14D9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x10BB PUSH2 0x109F DUP11 PUSH2 0x120 ADD MLOAD PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x10AF DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10CE PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD54 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10E0 PUSH1 0x1 PUSH3 0x186A0 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x111D JUMP JUMPDEST DUP1 PUSH2 0x1105 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SGT PUSH2 0x111D JUMPI PUSH2 0x111A DUP2 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xD54 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x113D DUP12 PUSH2 0x140 ADD MLOAD PUSH2 0x1130 PUSH2 0x15DF JUMP JUMPDEST DUP14 PUSH2 0x160 ADD MLOAD DUP9 DUP12 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x180 DUP13 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1156 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x117A JUMPI PUSH2 0x180 DUP12 ADD MLOAD PUSH2 0x1173 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x118F DUP8 PUSH2 0x10AF DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x11AE JUMPI PUSH2 0x11AB DUP8 PUSH2 0x10AF DUP14 PUSH2 0x180 ADD MLOAD PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x11B6 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x140 DUP13 ADD MSTORE DUP6 ISZERO PUSH2 0x11F8 JUMPI PUSH2 0x11D2 DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x11E7 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xC0 DUP12 ADD DUP2 SWAP1 MSTORE PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x1208 DUP9 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x121D DUP10 DUP14 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x80 DUP13 ADD MSTORE PUSH2 0x122E DUP2 PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MSTORE JUMPDEST PUSH2 0x123D DUP12 PUSH2 0x16C1 JUMP JUMPDEST PUSH32 0x666804E599B015EDCFB9DE12153BF8A48AA5A84B8861B8FA88C1CF4B11974C15 CALLER DUP14 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1270 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x284E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 SUB SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x6 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x6 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH1 0x12 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD PUSH2 0xED9 DUP5 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x12F3 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x1300 JUMPI POP PUSH1 0x0 PUSH2 0xCAB JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x130E JUMPI INVALID JUMPDEST SDIV EQ ISZERO DUP1 PUSH2 0x1325 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x1321 JUMPI INVALID JUMPDEST SDIV EQ ISZERO JUMPDEST ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x136F JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST DUP1 ISZERO PUSH2 0x137A JUMPI POP DUP3 DUP2 SGT JUMPDEST DUP1 PUSH2 0x139B JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x1390 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 ISZERO PUSH2 0x139B JUMPI POP DUP3 DUP2 SLT JUMPDEST ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ DUP1 ISZERO PUSH2 0x1459 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ JUMPDEST ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1499 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD DUP4 DUP4 PUSH1 0xA EXP PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CA PUSH2 0xED9 DUP5 PUSH11 0x8000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH6 0x10000000000 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14ED DUP8 DUP8 DUP8 DUP7 PUSH2 0x100 ADD MLOAD PUSH2 0x16F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 DUP2 PUSH2 0x1503 DUP11 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 PUSH2 0x151D DUP6 DUP6 PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1539 PUSH2 0x1534 DUP4 DUP14 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1570 PUSH2 0x1550 DUP13 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST PUSH2 0x1564 DUP6 PUSH2 0x10AF DUP10 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SWAP1 POP PUSH32 0x4ADD19BBBE358CAF4AF4A31B1299356FC4DCCF8B4CF3C87E401B0FA60062F31E DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP13 DUP2 SGT ISZERO PUSH2 0x15BD JUMPI DUP3 SWAP6 POP PUSH2 0x15C1 JUMP JUMPDEST DUP3 SWAP7 POP JUMPDEST POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1508 JUMP JUMPDEST POP SWAP2 SWAP3 POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST NUMBER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15F1 DUP8 DUP8 SUB PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1616 PUSH2 0x1611 PUSH2 0x1604 DUP9 PUSH2 0x18C1 JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1626 DUP3 PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163A DUP8 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x164E DUP8 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x167A PUSH2 0x1665 DUP6 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST PUSH2 0x1675 DUP8 DUP12 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x168A DUP3 PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16AF PUSH2 0x169B PUSH1 0x2 PUSH2 0x25B9 JUMP JUMPDEST PUSH2 0x1066 DUP5 PUSH2 0x1564 DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 SSTORE PUSH2 0x140 ADD MLOAD PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD DUP3 PUSH1 0xA EXP DUP5 MUL PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1706 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x171A DUP7 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x172E DUP4 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x14B0 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x173E DUP7 PUSH2 0xC06 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x174A PUSH2 0x12D2 JUMP JUMPDEST DUP5 SLT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1761 PUSH2 0x1611 DUP4 PUSH2 0x10AF DUP8 PUSH2 0x18C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x1783 PUSH2 0x177B PUSH2 0x1611 DUP5 PUSH2 0x10AF DUP8 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x1066 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1796 DUP2 DUP10 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP6 POP PUSH32 0x3CF9BD989028BFC957CA46FD34C8ED26F90D849442378EE442FCD56CF5CAC44F DUP11 DUP11 DUP11 DUP11 PUSH2 0x17C6 DUP12 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBD PUSH2 0x1804 PUSH2 0x17FC PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x1564 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x1066 DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xF32 AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1827 DUP4 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x183B DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x184F DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1863 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1877 DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x188B DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x189F DUP3 DUP1 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18B3 DUP3 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEDF AND JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0x80000000000000000000000000000000 DUP3 SGT ISZERO PUSH2 0x190D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2A55 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1967 JUMPI POP PUSH1 0x0 PUSH2 0x1BA JUMP JUMPDEST PUSH5 0x733048C5A DUP3 SGT PUSH2 0x199A JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH11 0x1C8464F76164760000000 DUP6 SGT PUSH2 0x19F9 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH11 0x1C8464F76164760000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH13 0xF1AADDD7742E90000000000000 DUP6 SGT PUSH2 0x1A57 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH13 0xF1AADDD7742E90000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH15 0xAFE10820813D78000000000000000 DUP6 SGT PUSH2 0x1AB9 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH15 0xAFE10820813D78000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2582AB704279EC00000000000000000 DUP6 SGT PUSH2 0x1B1D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2582AB704279EC00000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x1152AAA3BF81CC000000000000000000 DUP6 SGT PUSH2 0x1B81 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x1152AAA3BF81CC000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x2F16AC6C59DE70000000000000000000 DUP6 SGT PUSH2 0x1BE5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x2F16AC6C59DE70000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x4DA2CBF1BE5828000000000000000000 DUP6 SGT PUSH2 0x1C49 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x4DA2CBF1BE5828000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x63AFBE7AB2082C000000000000000000 DUP6 SGT PUSH2 0x1CAD JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x63AFBE7AB2082C000000000000000000 PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP6 SGT PUSH2 0x1D11 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000 SWAP1 SWAP4 ADD SWAP3 PUSH16 0x70F5A893B608861E1F58934F97AEA57D PUSH16 0x80000000000000000000000000000000 DUP7 MUL SDIV SWAP5 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000000000000000000000000000 DUP6 ADD SWAP3 POP DUP3 SWAP2 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP1 MUL SDIV SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP4 DUP2 SUB DUP4 MUL SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1D87 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x200000000000000000000000000000000 DUP4 PUSH16 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA SUB DUP4 MUL DUP2 PUSH2 0x1DB8 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1DD8 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x300000000000000000000000000000000 DUP4 PUSH16 0x99999999999999999999999999999999 SUB DUP4 MUL DUP2 PUSH2 0x1E09 JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1E29 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x400000000000000000000000000000000 DUP4 PUSH16 0x92492492492492492492492492492492 SUB DUP4 MUL DUP2 PUSH2 0x1E5A JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1E7A JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x500000000000000000000000000000000 DUP4 PUSH16 0x8E38E38E38E38E38E38E38E38E38E38E SUB DUP4 MUL DUP2 PUSH2 0x1EAB JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1ECB JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x600000000000000000000000000000000 DUP4 PUSH16 0x8BA2E8BA2E8BA2E8BA2E8BA2E8BA2E8B SUB DUP4 MUL DUP2 PUSH2 0x1EFC JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1F1C JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x700000000000000000000000000000000 DUP4 PUSH16 0x89D89D89D89D89D89D89D89D89D89D89 SUB DUP4 MUL DUP2 PUSH2 0x1F4D JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP PUSH16 0x80000000000000000000000000000000 DUP2 DUP4 MUL DUP2 PUSH2 0x1F6D JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH17 0x800000000000000000000000000000000 DUP4 PUSH16 0x88888888888888888888888888888888 SUB DUP4 MUL DUP2 PUSH2 0x1F9E JUMPI INVALID JUMPDEST SDIV DUP5 ADD SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE010000000000000000000000000000000 DUP3 SLT ISZERO PUSH2 0x1FDD JUMPI POP PUSH1 0x0 PUSH2 0x1BA JUMP JUMPDEST DUP2 PUSH2 0x1FF9 JUMPI POP PUSH16 0x80000000000000000000000000000000 PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x2034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F6 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 PUSH16 0x10000000000000000000000000000000 DUP4 SMOD DUP1 DUP1 MUL DUP3 SWAP1 SDIV PUSH8 0x10E1B3BE415A0000 DUP2 MUL SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP2 DUP4 MUL SDIV SWAP1 POP DUP1 PUSH8 0x5A0913F6B1E0000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x20A0 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH8 0x168244FDAC78000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x20CD JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x4807432BC18000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x20F9 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0xC0135DCA04000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2125 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH7 0x1B707B1CDC000 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2151 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x36E0F639B800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x217C JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH6 0x618FEE9F800 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x21A7 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x9C197DCC00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x21D1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0xE30DCE400 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x21FB JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH5 0x12EBD1300 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2225 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x17499F00 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x224E JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH4 0x1A9D480 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2277 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C6380 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x229F JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH3 0x1C638 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22C7 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x1AB8 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x22EE JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH2 0x17C MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x2315 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH1 0x14 MUL DUP4 ADD SWAP3 POP PUSH16 0x80000000000000000000000000000000 DUP3 DUP3 MUL DUP2 PUSH2 0x233B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP6 SWAP1 SWAP6 SUB SWAP5 PUSH8 0x21C3677C82B40000 SWAP2 SWAP1 SDIV SWAP4 DUP5 ADD SDIV DUP3 ADD PUSH16 0x80000000000000000000000000000000 ADD SWAP3 SWAP1 POP PUSH17 0x1000000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x23AA JUMPI PUSH19 0x43CBAF42A000812488FC5C220AD7B97BF6E99E PUSH13 0xF1AADDD7742E56D32FB9F99744 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x800000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x23EC JUMPI PUSH18 0x5D27A9F51C31B7C2F8038212A0574779991 PUSH15 0xAFE10820813D65DFE6A33C07F738F DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x400000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x242E JUMPI PUSH17 0x1B4C902E273A58678D6D3BFDB93DB96D02 PUSH16 0x2582AB704279E8EFD15E0265855C47A DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x200000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x2470 JUMPI PUSH17 0x3B1CC971A9BB5B9867477440D6D157750 PUSH16 0x1152AAA3BF81CB9FDB76EAE12D029571 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH17 0x100000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x24B2 JUMPI PUSH17 0x15BF0A8B1457695355FB8AC404E7A79E3 PUSH16 0x2F16AC6C59DE6F8D5D6F63C1482A7C86 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x80000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x24F2 JUMPI PUSH16 0xD3094C70F034DE4B96FF7D5B6F99FCD8 PUSH16 0x4DA2CBF1BE5827F9EB3AD1AA9866EBB3 DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x40000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x2532 JUMPI PUSH16 0xA45AF1E1F40C333B3DE1DB4DD55F29A7 PUSH16 0x63AFBE7AB2082BA1A0AE5E4EB1B479DC DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x20000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x2572 JUMPI PUSH16 0x910B022DB7AE67CE76B441C27035C6A1 PUSH16 0x70F5A893B608861E1F58934F97AEA57D DUP5 MUL SDIV SWAP3 POP JUMPDEST PUSH16 0x10000000000000000000000000000000 DUP5 AND ISZERO PUSH2 0x25B2 JUMPI PUSH16 0x88415ABBE9A76BEAD8D00CF112E4D4A8 PUSH16 0x783EAFEF1C0A8F3978C7F81824D62EBF DUP5 MUL SDIV SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAB DUP3 PUSH16 0x80000000000000000000000000000000 PUSH2 0x12E6 JUMP JUMPDEST PUSH16 0x80000000000000000000000000000000 SWAP1 SDIV SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBD DUP4 DUP4 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DE DUP5 DUP5 PUSH2 0x2681 JUMP JUMPDEST SWAP2 POP PUSH2 0x26ED DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x2681 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x270B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2716 DUP2 PUSH2 0x2E40 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2726 DUP2 PUSH2 0x2E40 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP13 ISZERO ISZERO DUP14 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 SWAP1 SWAP11 AND PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP11 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP10 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654164643A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4C697175696474793A416D6F756E74206465706F7369746564206E6F74207072 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F706F7274696F6E616C00000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654469763A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166655375623A20756E646572666C6F770000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F20736D616C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C794F776E65724572726F72000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C726561647920496E697469616C697A656400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573736573000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A2064656E6F6D696E61746F7220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74206265206C657373207468616E207A65726F0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x6C6E3A2076616C756520746F6F206C6172676500000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865643A2076616C75652063616E6E6F74206265206C657373207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x736166654D756C3A206F766572666C6F77000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578703A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E736665724F776E6572546F5A65726F4572726F720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6D756C3A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6164643A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x7375623A2076616C756520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x746F46697865642875696E742C75696E74293A206E756D657261746F72206361 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6E6F74206265206C657373207468616E207A65726F00000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A20646976696465206279207A65726F000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x5F6469763A206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723058 KECCAK256 0xc1 MUL 0x22 0xd4 JUMP RETURN 0xe0 LOG3 0xfb PUSH23 0x3C2432843AC9D2CECD9C05E9E9A6F6EC9C918E454E106C PUSH6 0x78706572696D PUSH6 0x6E74616CF564 PUSH20 0x6F6C634300050900400000000000000000000000 ",
				"sourceMap": "154:1083:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;154:1083:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:196:1;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;299:141:3;;;;;;;;;:::i;:::-;;50:20:2;;;:::i;:::-;;;;;;;;646:457:12;;;:::i;2536:1002:1:-;;;;;;;;;:::i;845:1544::-;;;;;;;;;:::i;264:28:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;492:1594:4;;;;;;;;;:::i;285:354:12:-;;;:::i;320:293:2:-;;;;;;;;;:::i;380:196:1:-;538:31;;;461:7;538:31;;;:22;:31;;;;;;380:196;;;;:::o;299:141:3:-;274:22:2;:20;:22::i;:::-;403:30:3;414:8;424;403:10;:30::i;:::-;299:141;;:::o;50:20:2:-;;;;;;:::o;646:457:12:-;742:6;:15;771;;724:97;;742:15;;;;;;;;771;800:11;724:4;:97::i;:::-;;646:457::o;2536:1002:1:-;2843:7;;2818;;2679:6;;2648:28;;2793:58;;2843:7;2793:41;;:8;;2830:3;2810:23;2793:41;:16;:41;:::i;:::-;:49;:58;:49;:58;:::i;:::-;2774:77;;2861:16;2880:58;2930:5;:7;;;2880:41;2917:3;2905:5;:7;;;2897:23;;2880:8;:16;;:41;;;;:::i;:58::-;2861:77;;3003:57;3020:5;:7;;;3029:30;3050:8;3029:20;:30::i;:::-;3003:16;:57::i;:::-;2993:7;;;:67;3097:7;;;;3080:57;;3106:30;3127:8;3106:20;:30::i;3080:57::-;3070:7;;;:67;3248:10;3225:34;;;;:22;;;:34;;;;;;:74;;3281:8;3225:74;:42;:74;:::i;:::-;3211:10;3188:34;;;;:22;;;:34;;;;;:111;3319:7;;;;:25;;3335:8;3319:25;:15;:25;:::i;:::-;3309:7;;;;:35;;;;3422:14;;3415:53;;;;;3422:14;;;;;;;3415:31;;:53;;3447:10;;3459:8;;3415:53;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3415:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3415:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3415:53:1;;;;;;;;;-1:-1:-1;3485:14:1;;;;3478:53;;;;;3485:14;;;;;3478:31;;:53;;3510:10;;3522:8;;3478:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3478:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3478:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3478:53:1;;;;;;;;;;2536:1002;;;;:::o;845:1544::-;1003:6;972:28;1041:38;1062:8;1072:6;1041:20;:38::i;:::-;1019:60;;1089:19;1111:37;1132:8;1142:5;1111:20;:37::i;:::-;1089:59;;1296:25;1313:5;:7;;;1296:12;:16;;:25;;;;:::i;:::-;1284:7;;;;1267:25;;:12;;:25;:16;:25;:::i;:::-;:54;1246:143;;;;;;;;;;;;;;;;;;;;;;1485:14;;1478:72;;;;;1485:14;;;;;;;1478:35;;:72;;1514:10;;1534:4;;1541:8;;1478:72;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1478:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1478:72:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1478:72:1;;;;;;;;;-1:-1:-1;1567:14:1;;;;1560:72;;;;;1567:14;;;;;1560:35;;:72;;1596:10;;1616:4;;1623:8;;1560:72;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1560:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1560:72:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1560:72:1;;;;;;;;;;1769:24;1807:5;:7;;;1818:1;1807:12;1803:196;;;-1:-1:-1;1879:1:1;1869:7;;;:11;1854:1;1803:196;;;1930:58;1984:3;1972:5;:7;;;1964:23;;1930:25;1947:5;:7;;;1930:8;:16;;:25;;;;:::i;:58::-;1911:77;;1803:196;2063:39;2080:5;:7;;;2089:12;2063:16;:39::i;:::-;2053:7;;;:49;2139:7;;;;2122:39;;2148:12;2122:16;:39::i;:::-;2112:7;;;:49;2270:10;2247:34;;;;:22;;;:34;;;;;;:82;;2303:16;2247:82;:42;:82;:::i;:::-;2233:10;2210:34;;;;:22;;;:34;;;;;:119;2349:7;;;;:33;;2365:16;2349:33;:15;:33;:::i;:::-;2339:5;:7;;:43;;;;845:1544;;;;;;:::o;264:28:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;492:1594:4:-;620:22;658:27;;:::i;:::-;688:18;:16;:18::i;:::-;658:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;721:27:4;;;;:56;;;;;763:5;:14;;;752:25;;:7;:25;;;721:56;717:727;;;793:26;822:139;845:9;872:7;897:27;917:6;897:19;:27::i;:::-;942:5;822;:139::i;:::-;793:168;;992:43;1015:19;992:22;:43::i;:::-;975:60;;717:727;;;;1068:5;:14;;;1055:27;;:9;:27;;;:56;;;;;1097:5;:14;;;1086:25;;:7;:25;;;1055:56;1052:392;;;1127:26;1156:140;1179:9;1206:7;1231:28;1252:6;1231:20;:28::i;1156:140::-;1127:169;;1327:42;1349:19;1327:21;:42::i;1052:392::-;1400:33;;;;;;;;;;;1052:392;1909:138;1935:10;1959:9;1982:7;2003:6;2023:14;1909:138;;;;;;;;;;;;;;;;;;;-1:-1:-1;492:1594:4;;;;;:::o;285:354:12:-;333:98;344:42;388;333:10;:98::i;:::-;485:22;493:3;485:20;:22::i;:::-;474:8;:33;568:23;576:4;568:21;:23::i;:::-;557:8;:34;285:354::o;320:293:2:-;274:22;:20;:22::i;:::-;416;;;412:195;;454:34;;;;;;;;;;;412:195;519:5;:16;;;;;;;;;;554:42;;;;;;575:10;;519:16;;554:42;;;;;;;;;;320:293;:::o;619:156::-;713:5;;;;699:10;:19;695:74;;734:24;;;;;;;;;;;695:74;619:156::o;1247:800:3:-;1356:6;:20;;;1355:21;1334:87;;;;;;;;;;;;;;1432:6;:26;;;;;;;;;;;;;;;;;;;;1468:15;:26;;;;;;;;;;;;;1519:47;1548:2;1561:3;1519:20;:47::i;:::-;1504:12;:62;1646:2;1616:19;:33;;;1677:47;;1719:3;1677:20;:47::i;:::-;1659:15;:65;1747:48;1776:1;1788:5;1747:20;:48::i;:::-;1734:10;:61;1832:94;1868:48;1734:6;1907:7;1868:20;:48::i;:::-;1832:18;:16;:18::i;:::-;:22;:94;:22;:94;:::i;:::-;1818:11;:108;1954:49;1982:5;1997:4;1954:20;:49::i;:::-;1936:15;:67;-1:-1:-1;;1936:6:3;2013:27;;;;;;;;1247:800::o;53:282:9:-;139:7;166:6;162:45;;-1:-1:-1;195:1:9;188:8;;162:45;228:5;;;232:1;228;:5;:1;247:5;;;;;:10;243:68;;273:27;;;;;;;;;;;243:68;327:1;-1:-1:-1;53:282:9;;;;;:::o;341:224::-;427:7;454:6;450:64;;476:27;;;;;;;;;;;450:64;523:9;539:1;535;:5;;;;;;;341:224;-1:-1:-1;;;;341:224:9:o;4349:216:8:-;4400:8;4443:1;4431;4424:21;4420:101;;;4461:49;;;;;;;;;;;4420:101;4534:24;4546:1;794:66;4534:4;:24::i;1936:186::-;1992:8;928:66;2016:1;:18;2012:79;;;2050:30;;;;;;;;;;;2012:79;2104:11;2109:1;2113;2112:2;;2104:4;:11::i;:::-;2100:15;1936:186;-1:-1:-1;;;1936:186:8:o;571:201:9:-;657:7;688:1;684;:5;680:64;;;705:28;;;;;;;;;;;680:64;-1:-1:-1;760:5:9;;;571:201::o;778:223::-;864:7;899:5;;;918;;;914:63;;;939:27;;;;;;;;;;;4715:386:8;4777:8;4820:1;4808;4801:21;4797:116;;;4838:64;;;;;;;;;;;4797:116;4945:1;4933;4926:21;4922:118;;;4963:66;;;;;;;;;;;4922:118;5053:41;5058:24;5070:1;794:66;5058:4;:24::i;:::-;5091:1;5053:4;:41::i;2219:252::-;2275:8;794:66;2330:6;;2326:73;;-1:-1:-1;2357:5:8;2352:10;;;;2383:5;2326:73;2409:14;2426:10;2431:1;2434;2426:4;:10::i;:::-;2409:27;;2460:4;2450:7;:14;;;;;;;2219:252;-1:-1:-1;;;;;2219:252:8:o;1748:97::-;1804:8;1828:10;1833:1;1836;1828:4;:10::i;446:586:3:-;1019:6;446:586;:::o;182:177:11:-;265:18;306:46;331:6;125:2;306:24;:46::i;2092:2553:4:-;2456:14;;;;2259:21;;;;;;;;;;2443:27;;;;;;;:56;;;;;2485:5;:14;;;2474:25;;:7;:25;;;2443:56;2439:433;;;-1:-1:-1;;;;2519:7:4;;;;2544;;;;2573:11;;;;2608:4;2439:433;;;2645:5;:14;;;2632:27;;:9;:27;;;:56;;;;;2674:5;:14;;;2663:25;;:7;:25;;;2632:56;2629:243;;;2708:5;:7;;;2704:11;;2733:5;:7;;;2729:11;;2762:35;2785:5;:11;;;2762:18;:16;:18::i;:::-;:22;:35;:22;:35;:::i;:::-;2754:43;;2629:243;2902:9;2913:12;2929:105;2950:1;2965;2980:5;2999:6;3019:5;2929:7;:105::i;:::-;2901:133;;;;3082:13;3098:112;3163:33;3186:5;:9;;;3163:18;:16;:18::i;:33::-;3098:30;:6;3122:5;3098:30;:23;:30;:::i;:::-;:47;:112;:47;:112;:::i;:::-;3082:128;-1:-1:-1;3229:21:4;3236:1;3082:128;3229:21;:13;:21;:::i;:::-;3220:30;;3293:14;3310:47;3338:1;3349:6;3310:20;:47::i;:::-;3293:64;;3416:1;3407:6;:10;3403:135;;;3442:1;3433:10;;3403:135;;;3481:7;3464:13;:1;3470:6;3464:13;:5;:13;:::i;:::-;:24;3460:78;;3513:14;:7;3525:1;3513:14;:11;:14;:::i;:::-;3504:23;;3460:78;3588:15;3606:155;3647:5;:7;;;3668:24;:22;:24::i;:::-;3706:5;:10;;;3730:2;3746:5;3606:27;:155::i;:::-;3786:14;;;;3588:173;;-1:-1:-1;3786:25:4;;3805:5;3786:25;:18;:25;:::i;:::-;3775:8;:36;3771:259;;;3838:14;;;;:25;;3857:5;3838:25;:18;:25;:::i;:::-;3827:36;;3771:259;;;3894:49;3937:5;3894:38;3917:5;:14;;;3894:18;:16;:18::i;:49::-;3883:8;:60;3880:150;;;3970:49;4013:5;3970:38;3993:5;:14;;;3970:18;:16;:18::i;:49::-;3959:60;;3880:150;4074:24;:22;:24::i;:::-;4064:7;;;:34;4108:285;;;;4145:13;:1;4151:6;4145:13;:5;:13;:::i;:::-;4135:7;;;:23;4182:13;:1;4188:6;4182:13;:5;:13;:::i;:::-;4172:7;;;:23;4209:11;;;:22;;;4108:285;;;4272:13;:1;4278:6;4272:13;:5;:13;:::i;:::-;4262:7;;;:23;4309:13;:1;4315:6;4309:13;:5;:13;:::i;:::-;4299:7;;;:23;4350:32;4373:8;4350:18;:16;:18::i;:32::-;4336:11;;;:46;4108:285;4427:23;4444:5;4427:16;:23::i;:::-;4466:106;4504:10;4532:6;4556;4466:106;;;;;;;;;;;;;;;;;-1:-1:-1;;4600:7:4;;;2092:2553;-1:-1:-1;;;;;;;;;;;2092:2553:4:o;737:183:11:-;822:19;864:49;891:6;174:1;864:26;:49::i;552:179::-;636:18;677:47;702:6;174:1;677:24;:47::i;365:181::-;449:19;491:48;518:6;125:2;491:26;:48::i;4091:116:8:-;4151:8;4175:25;4180:16;4185:1;794:66;4180:4;:16::i;1581:76::-;794:66;;1581:76::o;16304:245::-;16360:8;16384:6;;;:16;;-1:-1:-1;16394:6:8;;16384:16;16380:55;;;-1:-1:-1;16423:1:8;16416:8;;16380:55;-1:-1:-1;16448:5:8;;;16452:1;16448;:5;:1;16467:5;;;;;:10;;:24;;;;16490:1;16485;16481;:5;;;;;;:10;;16467:24;16463:80;;;16508:24;;;;;;;;;;;16956:210;17036:5;;;17012:8;17056:5;;:14;;;;;17069:1;17065;:5;17056:14;:23;;;;;17078:1;17074;:5;17056:23;17055:54;;;;17089:1;17085;:5;:14;;;;;17098:1;17094;:5;17085:14;:23;;;;;17107:1;17103;:5;17085:23;17051:109;;;17125:24;;;;;;;;;;;16636:260;16692:8;16716:6;16712:67;;16738:30;;;;;;;;;;;16712:67;928:66;16792:1;:18;:29;;;;;16814:1;16819:2;16814:7;16792:29;16788:83;;;16836:24;;;;;;;;;;;16788:83;16888:1;16884;:5;;;;;;;16636:260;-1:-1:-1;;;16636:260:8:o;3337:195:10:-;3441:18;3482:43;3503:6;3515:9;3511:2;:13;3482:20;:43::i;2539:128:8:-;2595:8;2619:33;2624:24;2629:1;2632:15;2624:4;:24::i;2619:33::-;2655:5;2619:41;;2539:128;-1:-1:-1;;;2539:128:8:o;4737:1244:4:-;4912:9;4923:8;5041:125;5093:1;5108;5123:5;5142;:14;;;5041:38;:125::i;:::-;5036:130;-1:-1:-1;5212:17:4;5036:130;5212:17;5343:13;:1;5349:6;5343:13;:5;:13;:::i;:::-;5322:34;-1:-1:-1;5383:9:4;5378:563;5402:2;5398:1;:6;5378:563;;;5425:10;5438:51;5466:10;5478;5438:27;:51::i;:::-;5425:64;-1:-1:-1;5503:11:4;5517:51;5553:14;5425:64;5561:5;5553:14;:7;:14;:::i;:::-;5517:35;:51::i;:::-;5503:65;-1:-1:-1;5582:10:4;5595:102;5681:15;:6;5692:3;5681:15;:10;:15;:::i;:::-;5595:64;5655:3;5595:38;:11;5628:4;5595:38;:32;:38;:::i;:64::-;:85;:102;:85;:102;:::i;:::-;5582:115;;5716:84;5740:4;5762:3;5783;5716:84;;;;;;;;;;;;;;;;;5824:1;5818:3;:7;5814:117;;;5858:3;5845:16;;5814:117;;;5913:3;5900:16;;5814:117;5378:563;;;5406:3;;;;;5378:563;;;-1:-1:-1;5963:10:4;;-1:-1:-1;;;4737:1244:4;;;;;;;;:::o;1109:126:12:-;1207:12;1109:126;:::o;1173:790:10:-;1341:6;1363:13;1379:30;1407:1;1400:4;:8;1379:20;:30::i;:::-;1363:46;;1419:19;1441:27;:21;1452:9;:4;:7;:9::i;:::-;1441:6;;:21;:10;:21;:::i;:::-;:25;:27::i;:::-;1419:49;;1478:24;1505:36;1528:12;1505:18;:16;:18::i;:36::-;1478:63;-1:-1:-1;1551:12:10;1566:25;:2;1478:63;1566:25;:6;:25;:::i;:::-;1551:40;-1:-1:-1;1601:12:10;1616:23;:5;1626:12;1616:23;:9;:23;:::i;:::-;1601:38;-1:-1:-1;1650:23:10;1676:102;1706:25;:17;1728:2;1706:25;:21;:25;:::i;:::-;1745:23;:12;1762:5;1745:23;:16;:23;:::i;:::-;1676:16;:102::i;:::-;1650:128;;1788:12;1803:40;1826:16;1803:18;:16;:18::i;:40::-;1788:55;;1853:13;1869:64;1901:31;1929:1;1901:20;:31::i;:::-;1869:27;1890:5;1869:16;:5;1879;1869:16;:9;:16;:::i;:64::-;1853:80;1173:790;-1:-1:-1;;;;;;;;;;;;;;1173:790:10:o;1038:203:3:-;1135:7;;;;1124:8;:18;1163:7;;;;1152:8;:18;1195:11;;;;1180:12;:26;1227:7;;;1216:8;:18;1038:203::o;3538:207:10:-;3643:19;3693:44;3714:9;3710:2;:13;3694:6;:30;3693:42;:44::i;367:800::-;526:13;;567:12;:5;577:1;567:12;:9;:12;:::i;:::-;555:24;-1:-1:-1;589:10:10;602:12;:1;555:24;602:12;:5;:12;:::i;:::-;589:25;-1:-1:-1;624:10:10;637:12;:5;647:1;637:12;:9;:12;:::i;:::-;624:25;;659:9;671:32;694:8;671:18;:16;:18::i;:32::-;659:44;;713:12;748:18;:16;:18::i;:::-;739:6;:27;735:215;;;790:28;:22;806:5;790:11;:6;:9;:11::i;:28::-;782:36;;735:215;;;857:82;897:28;:22;913:5;897:11;:6;:9;:11::i;:28::-;857:18;:16;:18::i;:82::-;849:90;;735:215;968:16;:5;978;968:16;:9;:16;:::i;:::-;959:25;;1000:136;1037:1;1052;1067:5;1086:8;1108:18;:6;:16;:18::i;:::-;1000:136;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;367:800:10;;;;;;:::o;1969:240::-;2070:15;2108:56;2121:42;2144:18;:16;:18::i;:::-;2121;:16;:18::i;:42::-;2108:8;:1;2114;2108:8;:5;:8;:::i;2260:676::-;2354:6;;2441:14;2450:4;;2441:14;:8;:14;:::i;:::-;2420:35;-1:-1:-1;2465:16:10;2484:21;:4;2420:35;2484:21;:8;:21;:::i;:::-;2465:40;-1:-1:-1;2515:16:10;2534:24;2465:40;;2534:24;:13;:24;:::i;:::-;2515:43;-1:-1:-1;2568:19:10;2590:24;2515:43;;2590:24;:13;:24;:::i;:::-;2568:46;-1:-1:-1;2624:23:10;2650:30;2568:46;;2650:30;:16;:30;:::i;:::-;2624:56;-1:-1:-1;2690:24:10;2717:38;2624:56;;2717:38;:20;:38;:::i;:::-;2690:65;-1:-1:-1;2765:22:10;2790:40;2690:65;;2790:40;:21;:40;:::i;:::-;2765:65;-1:-1:-1;2840:23:10;2866:30;2765:65;2886:9;2866:30;:19;:30;:::i;:::-;2840:56;2260:676;-1:-1:-1;;;;;;;;;;2260:676:10:o;5352:5160:8:-;5397:8;794:66;5421:1;:14;5417:74;;;5451:29;;;;;;;;;;;5417:74;5509:1;5504;:6;5500:66;;5526:29;;;;;;;;;;;5500:66;794;5579:1;:12;5575:51;;;-1:-1:-1;5614:1:8;5607:8;;5575:51;1273:66;5639:1;:15;5635:64;;-1:-1:-1;1453:75:8;5670:18;;5635:64;5709:8;5727;5745;6058:66;6046:1;:79;6042:316;;6141:79;;;;;6267:66;794;6246:11;;:88;6242:92;;6042:316;6402:66;6390:1;:79;6386:316;;6485:79;;;;;6611:66;794;6590:11;;:88;6586:92;;6386:316;6745:66;6733:1;:79;6729:314;;6828:79;;;;;6953:66;794;6932:11;;:88;6928:92;;6729:314;7086:66;7074:1;:79;7070:314;;7169:79;;;;;7294:66;794;7273:11;;:88;7269:92;;7070:314;7427:66;7415:1;:79;7411:314;;7510:79;;;;;7635:66;794;7614:11;;:88;7610:92;;7411:314;7768:66;7756:1;:79;7752:314;;7851:79;;;;;7976:66;7863;7955:11;;:88;7951:92;;7752:314;8111:66;8099:1;:79;8095:318;;8194:79;;;;;8321:66;794;8300:11;;:88;8296:92;;8095:318;8459:66;8447:1;:79;8443:320;;8542:79;;;;;8670:66;794;8649:11;;:88;8645:92;;8443:320;8810:66;8798:1;:79;8794:322;;8893:79;;;;;9022:66;794;9001:11;;:88;8997:92;;8794:322;9281:11;;;;-1:-1:-1;9281:11:8;;-1:-1:-1;794:66:8;9306:5;;;:15;;-1:-1:-1;9384:35:8;9341:39;;;9336:45;;:83;9331:88;;;;794:66;9429:1;9425;:5;:15;;;;;;9421:19;;9532:35;9527:1;9489:35;:39;9484:1;:45;:83;;;;;;9479:88;;;;794:66;9577:1;9573;:5;:15;;;;;;9569:19;;9680:35;9675:1;9637:35;:39;9632:1;:45;:83;;;;;;9627:88;;;;794:66;9725:1;9721;:5;:15;;;;;;9717:19;;9828:35;9823:1;9785:35;:39;9780:1;:45;:83;;;;;;9775:88;;;;794:66;9873:1;9869;:5;:15;;;;;;9865:19;;9976:35;9971:1;9933:35;:39;9928:1;:45;:83;;;;;;9923:88;;;;794:66;10021:1;10017;:5;:15;;;;;;10013:19;;10124:35;10119:1;10081:35;:39;10076:1;:45;:83;;;;;;10071:88;;;;794:66;10169:1;10165;:5;:15;;;;;;10161:19;;10272:35;10267:1;10229:35;:39;10224:1;:45;:83;;;;;;10219:88;;;;794:66;10317:1;10313;:5;:15;;;;;;10309:19;;10420:35;10415:1;10377:35;:39;10372:1;:45;:83;;;;;;10367:88;;;;5352:5160;;;;;;:::o;10609:5613::-;10655:8;1453:75;10679:15;;10675:105;;;-1:-1:-1;10768:1:8;10761:8;;10675:105;10793:6;10789:51;;-1:-1:-1;794:66:8;10815:14;;10789:51;1393:1;10853;:15;10849:77;;;10885:30;;;;;;;;;;;10849:77;794:66;11395;11391:70;;11475:5;;;:15;;;11501:18;11497:22;;11492:27;;;;;11391:70;;11559:5;;;:15;11555:19;;11581:1;11585:18;11581:22;11576:27;;;;794:66;11647:1;11643;:5;:15;;;;;;11639:19;;11665:1;11669:18;11665:22;11660:27;;;;794:66;11731:1;11727;:5;:15;;;;;;11723:19;;11749:1;11753:18;11749:22;11744:27;;;;794:66;11815:1;11811;:5;:15;;;;;;11807:19;;11833:1;11837:18;11833:22;11828:27;;;;794:66;11899:1;11895;:5;:15;;;;;;11891:19;;11917:1;11921:18;11917:22;11912:27;;;;794:66;11983:1;11979;:5;:15;;;;;;11975:19;;12001:1;12005:18;12001:22;11996:27;;;;794:66;12067:1;12063;:5;:15;;;;;;12059:19;;12085:1;12089:18;12085:22;12080:27;;;;794:66;12151:1;12147;:5;:15;;;;;;12143:19;;12169:1;12173:18;12169:22;12164:27;;;;794:66;12235:1;12231;:5;:15;;;;;;12227:19;;12253:1;12257:18;12253:22;12248:27;;;;794:66;12319:1;12315;:5;:15;;;;;;12311:19;;12337:1;12341:18;12337:22;12332:27;;;;794:66;12403:1;12399;:5;:15;;;;;;12395:19;;12421:1;12425:18;12421:22;12416:27;;;;794:66;12487:1;12483;:5;:15;;;;;;12479:19;;12505:1;12509:18;12505:22;12500:27;;;;794:66;12571:1;12567;:5;:15;;;;;;12563:19;;12589:1;12593:18;12589:22;12584:27;;;;794:66;12655:1;12651;:5;:15;;;;;;12647:19;;12673:1;12677:18;12673:22;12668:27;;;;794:66;12739:1;12735;:5;:15;;;;;;12731:19;;12757:1;12761:18;12757:22;12752:27;;;;794:66;12823:1;12819;:5;:15;;;;;;12815:19;;12841:1;12845:18;12841:22;12836:27;;;;794:66;12907:1;12903;:5;:15;;;;;;12899:19;;12925:1;12929:18;12925:22;12920:27;;;;794:66;12991:1;12987;:5;:15;;;;;13221:2;;;;;;13075:18;12987:15;;;13004:27;;;13071:22;:26;;794:66;13071:36;;12987:15;-1:-1:-1;13268:66:8;13257:78;;13256:85;13252:304;;13465:66;13372;13361:78;;:171;13357:175;;13252:304;13600:66;13589:78;;13588:85;13584:304;;13797:66;13704;13693:78;;:171;13689:175;;13584:304;13931:66;13920:78;;13919:85;13915:303;;14128:66;14035;14024:78;;:171;14020:175;;13915:303;14261:66;14250:78;;14249:85;14245:303;;14458:66;14365;14354:78;;:171;14350:175;;14245:303;14591:66;14580:78;;14579:85;14575:303;;14788:66;14695;14684:78;;:171;14680:175;;14575:303;14921:66;14910:78;;14909:85;14905:303;;15118:66;15025;15014:78;;:171;15010:175;;14905:303;15253:66;15242:78;;15241:85;15237:305;;15450:66;15357;15346:78;;:171;15342:175;;15237:305;15588:66;15577:78;;15576:85;15572:306;;15785:66;15692;15681:78;;:171;15677:175;;15572:306;15925:66;15914:78;;15913:85;15909:307;;16122:66;16029;16018:78;;:171;16014:175;;15909:307;10609:5613;;;;;:::o;3925:97::-;3975:8;3999:16;4004:1;794:66;3999:4;:16::i;5164:97::-;794:66;5243:11;;;5164:97::o;154:1083:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;25020:42;25009:54;;25592:35;;25582:2;;25641:1;;25631:12;414:241;;518:2;506:9;497:7;493:23;489:32;486:2;;;-1:-1;;524:12;486:2;586:53;631:7;607:22;586:53;;662:366;;;783:2;771:9;762:7;758:23;754:32;751:2;;;-1:-1;;789:12;751:2;851:53;896:7;872:22;851:53;;;841:63;;959:53;1004:7;941:2;984:9;980:22;959:53;;;949:63;;745:283;;;;;;1035:491;;;;1173:2;1161:9;1152:7;1148:23;1144:32;1141:2;;;-1:-1;;1179:12;1141:2;85:6;72:20;97:33;124:5;97:33;;;1231:63;-1:-1;1331:2;1370:22;;72:20;97:33;72:20;97:33;;;1135:391;;1339:63;;-1:-1;;;1439:2;1478:22;;;;344:20;;1135:391;1533:257;;1645:2;1633:9;1624:7;1620:23;1616:32;1613:2;;;-1:-1;;1651:12;1613:2;223:6;217:13;25738:5;24843:13;24836:21;25716:5;25713:32;25703:2;;-1:-1;;25749:12;1797:241;;1901:2;1889:9;1880:7;1876:23;1872:32;1869:2;;;-1:-1;;1907:12;1869:2;-1:-1;344:20;;1863:175;-1:-1;1863:175;2045:366;;;2166:2;2154:9;2145:7;2141:23;2137:32;2134:2;;;-1:-1;;2172:12;2134:2;-1:-1;;344:20;;;2324:2;2363:22;;;344:20;;-1:-1;2128:283;10899:213;25020:42;25009:54;;;;2638:37;;11017:2;11002:18;;10988:124;11119:340;25020:42;25009:54;;;2497:58;;25009:54;;11445:2;11430:18;;2638:37;11273:2;11258:18;;11244:215;11466:675;25020:42;25009:54;;;2497:58;;25009:54;;;11877:2;11862:18;;2638:37;25009:54;;;;11960:2;11945:18;;2638:37;12043:2;12028:18;;2867:36;;;;12126:3;12111:19;;2867:36;;;;11704:3;11689:19;;11675:466;12148:451;25020:42;25009:54;;;2497:58;;25009:54;;;;12502:2;12487:18;;2638:37;12585:2;12570:18;;2867:36;;;;12330:2;12315:18;;12301:298;12606:443;25020:42;25009:54;;;;2497:58;;12954:2;12939:18;;2867:36;;;;13035:2;13020:18;;2867:36;12784:2;12769:18;;12755:294;13056:340;25020:42;25009:54;;;;2497:58;;13382:2;13367:18;;2867:36;13210:2;13195:18;;13181:215;13403:1521;24843:13;;24836:21;2752:34;;25020:42;25009:54;;;13999:2;13984:18;;2638:37;25009:54;;;;14082:2;14067:18;;2638:37;14163:2;14148:18;;2867:36;;;;14244:3;14229:19;;2867:36;;;;14328:3;14313:19;;2867:36;;;;14410:3;14395:19;;2867:36;;;;14494:3;14479:19;;2867:36;14576:3;14561:19;;2867:36;14658:3;14643:19;;2867:36;14743:3;14728:19;;2867:36;14826:3;14811:19;;2867:36;;;;14909:3;14894:19;;2867:36;13840:3;13825:19;;13811:1113;14931:423;2867:36;;;15259:2;15244:18;;2867:36;;;;15340:2;15325:18;;2867:36;15099:2;15084:18;;15070:284;15361:639;2867:36;;;15742:2;15727:18;;2867:36;;;;15823:2;15808:18;;2867:36;;;;15904:2;15889:18;;2867:36;15985:3;15970:19;;2867:36;15581:3;15566:19;;15552:448;16007:407;16198:2;16212:47;;;3140:2;16183:18;;;24611:19;3176:66;24651:14;;;3156:87;3262:12;;;16169:245;16421:407;16612:2;16626:47;;;3513:2;16597:18;;;24611:19;3549:66;24651:14;;;3529:87;3650:66;3636:12;;;3629:88;3736:12;;;16583:245;16835:407;17026:2;17040:47;;;3987:2;17011:18;;;24611:19;4023:66;24651:14;;;4003:87;4109:12;;;16997:245;17249:407;17440:2;17454:47;;;4360:2;17425:18;;;24611:19;4396:66;24651:14;;;4376:87;4482:12;;;17411:245;17663:407;17854:2;17868:47;;;4733:2;17839:18;;;24611:19;4769:66;24651:14;;;4749:87;4855:12;;;17825:245;18077:407;18268:2;18282:47;;;5106:2;18253:18;;;24611:19;5142:66;24651:14;;;5122:87;5228:12;;;18239:245;18491:407;18682:2;18696:47;;;5479:2;18667:18;;;24611:19;5515:66;24651:14;;;5495:87;5601:12;;;18653:245;18905:407;19096:2;19110:47;;;5852:2;19081:18;;;24611:19;5888:66;24651:14;;;5868:87;5974:12;;;19067:245;19319:407;19510:2;19524:47;;;6225:2;19495:18;;;24611:19;6261:66;24651:14;;;6241:87;6362:66;6348:12;;;6341:88;6448:12;;;19481:245;19733:407;19924:2;19938:47;;;6699:2;19909:18;;;24611:19;6735:66;24651:14;;;6715:87;6821:12;;;19895:245;20147:407;20338:2;20352:47;;;7072:2;20323:18;;;24611:19;7108:66;24651:14;;;7088:87;7209:66;7195:12;;;7188:88;7295:12;;;20309:245;20561:407;20752:2;20766:47;;;7546:2;20737:18;;;24611:19;7582:66;24651:14;;;7562:87;7668:12;;;20723:245;20975:407;21166:2;21180:47;;;7919:2;21151:18;;;24611:19;7955:66;24651:14;;;7935:87;8041:12;;;21137:245;21389:407;21580:2;21594:47;;;8292:2;21565:18;;;24611:19;8328:66;24651:14;;;8308:87;8414:12;;;21551:245;21803:407;21994:2;22008:47;;;8665:2;21979:18;;;24611:19;8701:66;24651:14;;;8681:87;8787:12;;;21965:245;22217:407;22408:2;22422:47;;;9038:2;22393:18;;;24611:19;9074:66;24651:14;;;9054:87;9160:12;;;22379:245;22631:407;22822:2;22836:47;;;9411:2;22807:18;;;24611:19;9447:66;24651:14;;;9427:87;9533:12;;;22793:245;23045:407;23236:2;23250:47;;;9784:2;23221:18;;;24611:19;9820:66;24651:14;;;9800:87;9921:66;9907:12;;;9900:88;10007:12;;;23207:245;23459:407;23650:2;23664:47;;;10258:2;23635:18;;;24611:19;10294:66;24651:14;;;10274:87;10380:12;;;23621:245;23873:407;24064:2;24078:47;;;10631:2;24049:18;;;24611:19;10667:66;24651:14;;;10647:87;10753:12;;;24035:245;24287:213;2867:36;;;24405:2;24390:18;;24376:124;25533:117;25020:42;25620:5;25009:54;25595:5;25592:35;25582:2;;25641:1;;25631:12"
			}
		}
	},
	"sources": {
		"test/TestScam.sol": {
			"id": 12
		},
		"interfaces/IStructs.sol": {
			"id": 7
		},
		"Scam.sol": {
			"id": 0
		},
		"core/State.sol": {
			"id": 3
		},
		"libs/LibFixedMath.sol": {
			"id": 8
		},
		"libs/LibScamMath.sol": {
			"id": 10
		},
		"core/Ownable.sol": {
			"id": 2
		},
		"core/Liquidity.sol": {
			"id": 1
		},
		"libs/LibSafeMath.sol": {
			"id": 9
		},
		"interfaces/IERC20.sol": {
			"id": 5
		},
		"core/Swapper.sol": {
			"id": 4
		},
		"interfaces/IEvents.sol": {
			"id": 6
		},
		"libs/LibToken.sol": {
			"id": 11
		}
	},
	"sourceCodes": {
		"test/TestScam.sol": "pragma solidity 0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IStructs.sol\";\nimport \"../Scam.sol\";\nimport \"../libs/LibFixedMath.sol\";\n\n\ncontract TestScam is\n    Scam\n{\n\n    using LibFixedMath for uint256;\n    using LibFixedMath for int256;\n\n    //uint256 block;\n\n    function init()\n        external\n    {\n         _initState(0x0000000000000000000000000000000000000001, 0x0000000000000000000000000000000000000002);\n\n        // set initial blaances\n        gState.x = uint256(500).toFixed();           // initial balance of Token X\n        gState.y = uint256(1000).toFixed();            // initial balance of Token Y\n    }\n\n     function runBasicTest()\n        external\n    {\n        //block = 570;\n        swap(\n            gState.xAddress,\n            gState.yAddress,\n            75 * 10**18\n        );\n\n/*\n        block = 1570;\n        swap(\n            gState.xAddress,\n            gState.yAddress,\n            400 * 10**18\n        );\n\n        block = 4000;\n        swap(\n            gState.yAddress,\n            gState.xAddress,\n            220 * 10**6\n        );\n        */\n    }\n\n    function _getCurrentBlockNumber()\n        internal\n        returns (uint256)\n    {\n        return block.number; // block\n    }\n}\n",
		"interfaces/IStructs.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ninterface IStructs {\n\n    struct State {\n        bool isInitialized;\n        address xAddress;                                   // address of token x\n        address yAddress;                                   // address of token y\n        int256 x;                                           // contract's balance of token x (fixed point)\n        int256 y;                                           // contract's balance of token y (fixed point)\n        uint256 l;                                          // total liquidity token balance\n        int256 pBarX;                                       // expected future price of x in terms of y (fixed point)\n        uint256 rhoNumerator;\n        int256 rhoRatio;\n        int256 fee;\n        uint256 t;                                          // most recent block\n        mapping (address => uint256) liquidityBalance;\n        int256 beta;    // persistence of expercted price - the larger the more persistent\n        int256 eToKappa;   // clamp that prevents the expected price changing by a lot in an expected tx\n    }\n\n}\n",
		"Scam.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"./core/State.sol\";\nimport \"./core/Liquidity.sol\";\nimport \"./core/Swapper.sol\";\n\n\ncontract Scam is\n    State,\n    Liquidity,\n    Swapper\n{\n\n    constructor()\n        public\n    {}\n}\n",
		"core/State.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IStructs.sol\";\nimport \"../libs/LibFixedMath.sol\";\nimport \"../libs/LibScamMath.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract State is\n    Ownable\n{\n\n    using LibFixedMath for int256;\n\n    IStructs.State public gState;\n\n    function initState(address xAddress, address yAddress)\n        external\n        onlyOwner\n    {\n        _initState(xAddress, yAddress);\n    }\n\n    function _loadGlobalState()\n        internal\n        returns (IStructs.State storage state)\n    {\n        /*\n        state.x = gState.x;\n        state.y = gState.y;\n        state.pBarX = gState.pBarX;\n        state.t = gState.t;\n\n        state.rhoNumerator = gState.rhoNumerator;\n        state.rhoRatio = gState.rhoRatio;\n\n        state.xAddress = gState.xAddress;\n        state.yAddress = gState.yAddress;\n\n\n        state.fee = gState.fee;\n        state.t = gState.t;\n        state.beta = gState.beta;\n        state.eToKappa = gState.eToKappa;\n        */\n\n\n        return gState;\n    }\n\n    function _saveGlobalState(IStructs.State memory state)\n        internal\n    {\n        gState.x = state.x;\n        gState.y = state.y;\n        gState.pBarX = state.pBarX;\n        gState.t = state.t;\n    }\n\n    function _initState(address xAddress, address yAddress)\n        internal\n    {\n        require(\n            !gState.isInitialized,\n            'Already Initialized'\n        );\n\n        gState.xAddress = xAddress;\n        gState.yAddress = yAddress;\n        gState.pBarX = LibFixedMath.toFixed(uint256(99), uint256(100));  // initial expected price of X given Y\n        gState.rhoNumerator = uint256(99);\n        gState.rhoRatio = LibFixedMath.toFixed(uint256(99), uint256(100));\n        gState.fee = LibFixedMath.toFixed(uint256(5), uint256(10000));    // 0.0005\n        gState.beta = LibFixedMath.one().sub(\n            LibFixedMath.toFixed(int256(1), int256(1000000))\n        );\n        gState.eToKappa = LibFixedMath.toFixed(int256(10005), int256(1000));\n        gState.isInitialized = true;\n    }\n\n}\n",
		"libs/LibFixedMath.sol": "/*\n  Copyright 2017 Bprotocol Foundation, 2019 ZeroEx Intl.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\npragma solidity ^0.5.9;\n\n\n// solhint-disable indent\n/// @dev Signed, fixed-point, 127-bit precision math library.\nlibrary LibFixedMath {\n\n    // 1\n    int256 private constant FIXED_1 = int256(0x0000000000000000000000000000000080000000000000000000000000000000);\n    // 2**255\n    int256 private constant MIN_FIXED_VAL = int256(0x8000000000000000000000000000000000000000000000000000000000000000);\n    // 1^2 (in fixed-point)\n    int256 private constant FIXED_1_SQUARED = int256(0x4000000000000000000000000000000000000000000000000000000000000000);\n    // 1\n    int256 private constant LN_MAX_VAL = FIXED_1;\n    // e ^ -63.875\n    int256 private constant LN_MIN_VAL = int256(0x0000000000000000000000000000000000000000000000000000000733048c5a);\n    // 0\n    int256 private constant EXP_MAX_VAL = 0;\n    // -63.875\n    int256 private constant EXP_MIN_VAL = -int256(0x0000000000000000000000000000001ff0000000000000000000000000000000);\n\n    /// @dev Get one as a fixed-point number.\n    function one() internal pure returns (int256 f) {\n        f = FIXED_1;\n    }\n\n    /// @dev Returns the addition of two fixed point numbers, reverting on overflow.\n    function add(int256 a, int256 b) internal pure returns (int256 c) {\n        c = _add(a, b);\n    }\n\n    /// @dev Returns the addition of two fixed point numbers, reverting on overflow.\n    function sub(int256 a, int256 b) internal pure returns (int256 c) {\n        if (b == MIN_FIXED_VAL) {\n            revert(\"sub: value too small\");\n        }\n        c = _add(a, -b);\n    }\n\n    /// @dev Returns the multiplication of two fixed point numbers, reverting on overflow.\n    function mul(int256 a, int256 b) internal pure returns (int256 c) {\n        int256 base = FIXED_1;\n        if (b != 0) {\n            b /= 2**40;\n            base = 2**87;\n        }\n\n        int256 product = _mul(a, b);\n        c = product / base;\n    }\n\n    /// @dev Returns the division of two fixed point numbers.\n    function div(int256 a, int256 b) internal pure returns (int256 c) {\n        c = _div(_mul(a, FIXED_1 / 2**40), b) * 2**40;\n    }\n\n    /// @dev Performs (a * n) / d, without scaling for precision.\n    function mulDiv(int256 a, int256 n, int256 d) internal pure returns (int256 c) {\n        c = _div(_mul(a, n), d);\n    }\n\n    /// @dev Returns the unsigned integer result of multiplying a fixed-point\n    ///      number with an integer, reverting if the multiplication overflows.\n    ///      Negative results are clamped to zero.\n    function uintMul(int256 f, uint256 u) internal pure returns (uint256) {\n        if (int256(u) < int256(0)) {\n            revert(\"uintMul: overflow\");\n        }\n        int256 c = _mul(f, int256(u));\n        if (c <= 0) {\n            return 0;\n        }\n        return uint256(uint256(c) >> 127);\n    }\n\n    /// @dev Returns the absolute value of a fixed point number.\n    function abs(int256 f) internal pure returns (int256 c) {\n        if (f == MIN_FIXED_VAL) {\n           revert(\"abs: value too small\");\n        }\n        if (f >= 0) {\n            c = f;\n        } else {\n            c = -f;\n        }\n    }\n\n    /// @dev Returns 1 / `x`, where `x` is a fixed-point number.\n    function invert(int256 f) internal pure returns (int256 c) {\n        c = _div(FIXED_1_SQUARED, f);\n    }\n\n    /// @dev Convert signed `n` / 1 to a fixed-point number.\n    function toFixed(int256 n) internal pure returns (int256 f) {\n        f = _mul(n, FIXED_1);\n    }\n\n    /// @dev Convert signed `n` / `d` to a fixed-point number.\n    function toFixed(int256 n, int256 d) internal pure returns (int256 f) {\n        f = _div(_mul(n, FIXED_1), d);\n    }\n\n    /// @dev Convert unsigned `n` / 1 to a fixed-point number.\n    ///      Reverts if `n` is too large to fit in a fixed-point number.\n    function toFixed(uint256 n) internal pure returns (int256 f) {\n        if (int256(n) < int256(0)) {\n            revert(\"toFixed: value cannot be less than zero\");\n        }\n        f = _mul(int256(n), FIXED_1);\n    }\n\n    /// @dev Convert unsigned `n` / `d` to a fixed-point number.\n    ///      Reverts if `n` / `d` is too large to fit in a fixed-point number.\n    function toFixed(uint256 n, uint256 d) internal pure returns (int256 f) {\n        if (int256(n) < int256(0)) {\n            revert(\"toFixed(uint,uint): numerator cannot be less than zero\");\n        }\n        if (int256(d) < int256(0)) {\n            revert(\"toFixed(uint,uint): denominator cannot be less than zero\");\n        }\n        f = _div(_mul(int256(n), FIXED_1), int256(d));\n    }\n\n    /// @dev Convert a fixed-point number to an integer.\n    function toInteger(int256 f) internal pure returns (int256 n) {\n        return f / FIXED_1;\n    }\n\n    /// @dev Get the natural logarithm of a fixed-point number 0 < `x` <= LN_MAX_VAL\n    function ln(int256 x) internal pure returns (int256 r) {\n        if (x > LN_MAX_VAL) {\n            revert(\"ln: value too large\");\n        }\n        if (x <= 0) {\n            revert(\"ln: value too small\");\n        }\n        if (x == FIXED_1) {\n            return 0;\n        }\n        if (x <= LN_MIN_VAL) {\n            return EXP_MIN_VAL;\n        }\n\n        int256 y;\n        int256 z;\n        int256 w;\n\n        // Rewrite the input as a quotient of negative natural exponents and a single residual q, such that 1 < q < 2\n        // For example: log(0.3) = log(e^-1 * e^-0.25 * 1.0471028872385522)\n        //              = 1 - 0.25 - log(1 + 0.0471028872385522)\n        // e ^ -32\n        if (x <= int256(0x00000000000000000000000000000000000000000001c8464f76164760000000)) {\n            r -= int256(0x0000000000000000000000000000001000000000000000000000000000000000); // - 32\n            x = x * FIXED_1 / int256(0x00000000000000000000000000000000000000000001c8464f76164760000000); // / e ^ -32\n        }\n        // e ^ -16\n        if (x <= int256(0x00000000000000000000000000000000000000f1aaddd7742e90000000000000)) {\n            r -= int256(0x0000000000000000000000000000000800000000000000000000000000000000); // - 16\n            x = x * FIXED_1 / int256(0x00000000000000000000000000000000000000f1aaddd7742e90000000000000); // / e ^ -16\n        }\n        // e ^ -8\n        if (x <= int256(0x00000000000000000000000000000000000afe10820813d78000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000400000000000000000000000000000000); // - 8\n            x = x * FIXED_1 / int256(0x00000000000000000000000000000000000afe10820813d78000000000000000); // / e ^ -8\n        }\n        // e ^ -4\n        if (x <= int256(0x0000000000000000000000000000000002582ab704279ec00000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000200000000000000000000000000000000); // - 4\n            x = x * FIXED_1 / int256(0x0000000000000000000000000000000002582ab704279ec00000000000000000); // / e ^ -4\n        }\n        // e ^ -2\n        if (x <= int256(0x000000000000000000000000000000001152aaa3bf81cc000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000100000000000000000000000000000000); // - 2\n            x = x * FIXED_1 / int256(0x000000000000000000000000000000001152aaa3bf81cc000000000000000000); // / e ^ -2\n        }\n        // e ^ -1\n        if (x <= int256(0x000000000000000000000000000000002f16ac6c59de70000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000080000000000000000000000000000000); // - 1\n            x = x * FIXED_1 / int256(0x000000000000000000000000000000002f16ac6c59de70000000000000000000); // / e ^ -1\n        }\n        // e ^ -0.5\n        if (x <= int256(0x000000000000000000000000000000004da2cbf1be5828000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000040000000000000000000000000000000); // - 0.5\n            x = x * FIXED_1 / int256(0x000000000000000000000000000000004da2cbf1be5828000000000000000000); // / e ^ -0.5\n        }\n        // e ^ -0.25\n        if (x <= int256(0x0000000000000000000000000000000063afbe7ab2082c000000000000000000)) {\n            r -= int256(0x0000000000000000000000000000000020000000000000000000000000000000); // - 0.25\n            x = x * FIXED_1 / int256(0x0000000000000000000000000000000063afbe7ab2082c000000000000000000); // / e ^ -0.25\n        }\n        // e ^ -0.125\n        if (x <= int256(0x0000000000000000000000000000000070f5a893b608861e1f58934f97aea57d)) {\n            r -= int256(0x0000000000000000000000000000000010000000000000000000000000000000); // - 0.125\n            x = x * FIXED_1 / int256(0x0000000000000000000000000000000070f5a893b608861e1f58934f97aea57d); // / e ^ -0.125\n        }\n        // `x` is now our residual in the range of 1 <= x <= 2 (or close enough).\n\n        // Add the taylor series for log(1 + z), where z = x - 1\n        z = y = x - FIXED_1;\n        w = y * y / FIXED_1;\n        r += z * (0x100000000000000000000000000000000 - y) / 0x100000000000000000000000000000000; z = z * w / FIXED_1; // add y^01 / 01 - y^02 / 02\n        r += z * (0x0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa - y) / 0x200000000000000000000000000000000; z = z * w / FIXED_1; // add y^03 / 03 - y^04 / 04\n        r += z * (0x099999999999999999999999999999999 - y) / 0x300000000000000000000000000000000; z = z * w / FIXED_1; // add y^05 / 05 - y^06 / 06\n        r += z * (0x092492492492492492492492492492492 - y) / 0x400000000000000000000000000000000; z = z * w / FIXED_1; // add y^07 / 07 - y^08 / 08\n        r += z * (0x08e38e38e38e38e38e38e38e38e38e38e - y) / 0x500000000000000000000000000000000; z = z * w / FIXED_1; // add y^09 / 09 - y^10 / 10\n        r += z * (0x08ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b - y) / 0x600000000000000000000000000000000; z = z * w / FIXED_1; // add y^11 / 11 - y^12 / 12\n        r += z * (0x089d89d89d89d89d89d89d89d89d89d89 - y) / 0x700000000000000000000000000000000; z = z * w / FIXED_1; // add y^13 / 13 - y^14 / 14\n        r += z * (0x088888888888888888888888888888888 - y) / 0x800000000000000000000000000000000;                      // add y^15 / 15 - y^16 / 16\n    }\n\n    /// @dev Compute the natural exponent for a fixed-point number EXP_MIN_VAL <= `x` <= 1\n    function exp(int256 x) internal pure returns (int256 r) {\n        if (x < EXP_MIN_VAL) {\n            // Saturate to zero below EXP_MIN_VAL.\n            return 0;\n        }\n        if (x == 0) {\n            return FIXED_1;\n        }\n        if (x > EXP_MAX_VAL) {\n             revert(\"exp: value too small\");\n        }\n\n        // Rewrite the input as a product of natural exponents and a\n        // single residual q, where q is a number of small magnitude.\n        // For example: e^-34.419 = e^(-32 - 2 - 0.25 - 0.125 - 0.044)\n        //              = e^-32 * e^-2 * e^-0.25 * e^-0.125 * e^-0.044\n        //              -> q = -0.044\n\n        // Multiply with the taylor series for e^q\n        int256 y;\n        int256 z;\n        // q = x % 0.125 (the residual)\n        z = y = x % 0x0000000000000000000000000000000010000000000000000000000000000000;\n        z = z * y / FIXED_1; r += z * 0x10e1b3be415a0000; // add y^02 * (20! / 02!)\n        z = z * y / FIXED_1; r += z * 0x05a0913f6b1e0000; // add y^03 * (20! / 03!)\n        z = z * y / FIXED_1; r += z * 0x0168244fdac78000; // add y^04 * (20! / 04!)\n        z = z * y / FIXED_1; r += z * 0x004807432bc18000; // add y^05 * (20! / 05!)\n        z = z * y / FIXED_1; r += z * 0x000c0135dca04000; // add y^06 * (20! / 06!)\n        z = z * y / FIXED_1; r += z * 0x0001b707b1cdc000; // add y^07 * (20! / 07!)\n        z = z * y / FIXED_1; r += z * 0x000036e0f639b800; // add y^08 * (20! / 08!)\n        z = z * y / FIXED_1; r += z * 0x00000618fee9f800; // add y^09 * (20! / 09!)\n        z = z * y / FIXED_1; r += z * 0x0000009c197dcc00; // add y^10 * (20! / 10!)\n        z = z * y / FIXED_1; r += z * 0x0000000e30dce400; // add y^11 * (20! / 11!)\n        z = z * y / FIXED_1; r += z * 0x000000012ebd1300; // add y^12 * (20! / 12!)\n        z = z * y / FIXED_1; r += z * 0x0000000017499f00; // add y^13 * (20! / 13!)\n        z = z * y / FIXED_1; r += z * 0x0000000001a9d480; // add y^14 * (20! / 14!)\n        z = z * y / FIXED_1; r += z * 0x00000000001c6380; // add y^15 * (20! / 15!)\n        z = z * y / FIXED_1; r += z * 0x000000000001c638; // add y^16 * (20! / 16!)\n        z = z * y / FIXED_1; r += z * 0x0000000000001ab8; // add y^17 * (20! / 17!)\n        z = z * y / FIXED_1; r += z * 0x000000000000017c; // add y^18 * (20! / 18!)\n        z = z * y / FIXED_1; r += z * 0x0000000000000014; // add y^19 * (20! / 19!)\n        z = z * y / FIXED_1; r += z * 0x0000000000000001; // add y^20 * (20! / 20!)\n        r = r / 0x21c3677c82b40000 + y + FIXED_1; // divide by 20! and then add y^1 / 1! + y^0 / 0!\n\n        // Multiply with the non-residual terms.\n        x = -x;\n        // e ^ -32\n        if ((x & int256(0x0000000000000000000000000000001000000000000000000000000000000000)) != 0) {\n            r = r * int256(0x00000000000000000000000000000000000000f1aaddd7742e56d32fb9f99744)\n                / int256(0x0000000000000000000000000043cbaf42a000812488fc5c220ad7b97bf6e99e); // * e ^ -32\n        }\n        // e ^ -16\n        if ((x & int256(0x0000000000000000000000000000000800000000000000000000000000000000)) != 0) {\n            r = r * int256(0x00000000000000000000000000000000000afe10820813d65dfe6a33c07f738f)\n                / int256(0x000000000000000000000000000005d27a9f51c31b7c2f8038212a0574779991); // * e ^ -16\n        }\n        // e ^ -8\n        if ((x & int256(0x0000000000000000000000000000000400000000000000000000000000000000)) != 0) {\n            r = r * int256(0x0000000000000000000000000000000002582ab704279e8efd15e0265855c47a)\n                / int256(0x0000000000000000000000000000001b4c902e273a58678d6d3bfdb93db96d02); // * e ^ -8\n        }\n        // e ^ -4\n        if ((x & int256(0x0000000000000000000000000000000200000000000000000000000000000000)) != 0) {\n            r = r * int256(0x000000000000000000000000000000001152aaa3bf81cb9fdb76eae12d029571)\n                / int256(0x00000000000000000000000000000003b1cc971a9bb5b9867477440d6d157750); // * e ^ -4\n        }\n        // e ^ -2\n        if ((x & int256(0x0000000000000000000000000000000100000000000000000000000000000000)) != 0) {\n            r = r * int256(0x000000000000000000000000000000002f16ac6c59de6f8d5d6f63c1482a7c86)\n                / int256(0x000000000000000000000000000000015bf0a8b1457695355fb8ac404e7a79e3); // * e ^ -2\n        }\n        // e ^ -1\n        if ((x & int256(0x0000000000000000000000000000000080000000000000000000000000000000)) != 0) {\n            r = r * int256(0x000000000000000000000000000000004da2cbf1be5827f9eb3ad1aa9866ebb3)\n                / int256(0x00000000000000000000000000000000d3094c70f034de4b96ff7d5b6f99fcd8); // * e ^ -1\n        }\n        // e ^ -0.5\n        if ((x & int256(0x0000000000000000000000000000000040000000000000000000000000000000)) != 0) {\n            r = r * int256(0x0000000000000000000000000000000063afbe7ab2082ba1a0ae5e4eb1b479dc)\n                / int256(0x00000000000000000000000000000000a45af1e1f40c333b3de1db4dd55f29a7); // * e ^ -0.5\n        }\n        // e ^ -0.25\n        if ((x & int256(0x0000000000000000000000000000000020000000000000000000000000000000)) != 0) {\n            r = r * int256(0x0000000000000000000000000000000070f5a893b608861e1f58934f97aea57d)\n                / int256(0x00000000000000000000000000000000910b022db7ae67ce76b441c27035c6a1); // * e ^ -0.25\n        }\n        // e ^ -0.125\n        if ((x & int256(0x0000000000000000000000000000000010000000000000000000000000000000)) != 0) {\n            r = r * int256(0x00000000000000000000000000000000783eafef1c0a8f3978c7f81824d62ebf)\n                / int256(0x0000000000000000000000000000000088415abbe9a76bead8d00cf112e4d4a8); // * e ^ -0.125\n        }\n    }\n\n    /// @dev Returns the multiplication two numbers, reverting on overflow.\n    function _mul(int256 a, int256 b) private pure returns (int256 c) {\n        if (a == 0 || b == 0) {\n            return 0;\n        }\n        c = a * b;\n        if (c / a != b || c / b != a) {\n             revert(\"_mul: overflow\");\n        }\n    }\n\n    /// @dev Returns the division of two numbers, reverting on division by zero.\n    function _div(int256 a, int256 b) private pure returns (int256 c) {\n        if (b == 0) {\n            revert(\"_div: divide by zero\");\n        }\n        if (a == MIN_FIXED_VAL && b == -1) {\n           revert(\"_div: overflow\");\n        }\n        c = a / b;\n    }\n\n    /// @dev Adds two numbers, reverting on overflow.\n    function _add(int256 a, int256 b) private pure returns (int256 c) {\n        c = a + b;\n        if ((a < 0 && b < 0 && c > a) || (a > 0 && b > 0 && c < a)) {\n            revert(\"_add: overflow\");\n        }\n    }\n}",
		"libs/LibScamMath.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"./LibFixedMath.sol\";\n\nlibrary LibScamMath {\n\n    using LibFixedMath for int256;\n\n    event TestMidpointOnBondCurve(\n        int256 a,\n        int256 b,\n        int256 pBarA,\n        int256 rhoRatio,\n        int256 result\n    );\n\n    /// @dev computes midpoint, inputs are all fixed point values.\n    function computeMidpointOnBondCurve(\n        int256 a,\n        int256 b,\n        int256 pBarA,\n        int256 rhoRatio\n    )\n        internal\n        returns (int256 result)\n    {\n        int term0 = pBarA.mul(a);\n        int term1A = b.div(term0);\n        int term1B = term0.div(b);\n        int term2 = LibFixedMath.one().sub(rhoRatio);\n        int256 term3;\n        if (term1A < LibFixedMath.one()) {\n            term3 = term1A.ln().mul(term2).exp();\n        } else {\n            term3 = LibFixedMath.one().div(\n                term1B.ln().mul(term2).exp()\n            );\n        }\n        result = term3.mul(pBarA);\n\n        emit TestMidpointOnBondCurve(\n            a,\n            b,\n            pBarA,\n            rhoRatio,\n            result.toInteger()\n        );\n\n        return result;\n    }\n\n    function computeNewPBarA(\n        uint256 t,\n        uint256 newT,\n        int256 beta,\n        int256 pA,\n        int256 pBarA\n    )\n        internal\n        returns (int256)\n    {\n        int256 deltaT = LibFixedMath.toFixed(newT - t);\n        int256 betaToDeltaT = deltaT.mul(beta.ln()).exp();\n        int256 oneMinusBToDeltaT = LibFixedMath.one().sub(betaToDeltaT);\n        int256 term1 = pA.mul(oneMinusBToDeltaT);\n        int256 term2 = pBarA.mul(betaToDeltaT);\n\n        int256 term3Denominator = LibFixedMath.add(\n            oneMinusBToDeltaT.div(pA),\n            betaToDeltaT.div(pBarA)\n        );\n        int256 term3 = LibFixedMath.one().div(term3Denominator);\n        int256 result = term1.add(term2).add(term3).div(LibFixedMath.toFixed(int256(2)));\n        return result;\n    }\n\n    function computeMidpoint(\n        int256 a,\n        int256 b\n    )\n        internal\n        returns (int256 midpoint)\n    {\n        return a.add(b).div(LibFixedMath.one().add(LibFixedMath.one())); // @todo store FIXED_2 as a constant.\n    }\n\n    /// @dev Hardcoded for rhoNumerator = 99\n    function computeBaseToNinetyNine(\n        int256 base\n    )\n        internal\n        returns (int256)\n    {\n        // Hack.gif ToDaMoon.gif TopKek.gif\n        int256 baseSquared = base.mul(base);\n        int256 baseCubed = base.mul(baseSquared);\n        int256 baseToSix = baseCubed.mul(baseCubed);\n        int256 baseToTwelve = baseToSix.mul(baseToSix);\n        int256 baseToTwentyFour = baseToTwelve.mul(baseToTwelve);\n        int256 baseToFourtyEight = baseToTwentyFour.mul(baseToTwentyFour);\n        int256 baseToNinetySix = baseToFourtyEight.mul(baseToFourtyEight);\n        int256 baseToNinetyNine = baseToNinetySix.mul(baseCubed);\n        return baseToNinetyNine;\n    }\n\n    function fastExponentiation(uint256 x, uint256 y)\n        internal\n        pure\n        returns (uint256)\n    {\n\n        if (y == 0) {\n            return 1;\n        } else if (y == 1) {\n            return x;\n        } else if (y % 2 == 0) {\n            return fastExponentiation(x * x, y / 2);\n        } else {\n            return x * fastExponentiation(x * x, (y - 1) / 2);\n        }\n    }\n\n    function tokenToFixed(uint256 amount, uint256 nDecimals)\n        internal\n        pure\n        returns (int256 fixedAmount)\n    {\n        return LibFixedMath.toFixed(amount, 10**nDecimals);\n    }\n\n    function tokenFromFixed(int256 amount, uint256 nDecimals)\n        internal\n        pure\n        returns (uint256 tokenAmount)\n    {\n        return uint256((amount * int256(10**nDecimals)).toInteger());\n    }\n}\n",
		"core/Ownable.sol": "\npragma solidity ^0.5.9;\n\n\ncontract Ownable\n{\n    address public owner;\n\n    event OwnershipTransferred(\n        address oldOwner,\n        address newOwner\n    );\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        _assertSenderIsOwner();\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner == address(0)) {\n            revert('TransferOwnerToZeroError');\n        } else {\n            owner = newOwner;\n            emit OwnershipTransferred(msg.sender, newOwner);\n        }\n    }\n\n    function _assertSenderIsOwner()\n        internal\n        view\n    {\n        if (msg.sender != owner) {\n            revert('OnlyOwnerError');\n        }\n    }\n}",
		"core/Liquidity.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/LibSafeMath.sol\";\nimport \"../libs/LibFixedMath.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/IStructs.sol\";\nimport \"../core/State.sol\";\n\n\n/// FIXME(jalextowle): Add in the bias factor and ponzi scheme\ncontract Liquidity is\n    State,\n    IStructs\n{\n    using LibSafeMath for uint256;\n    function balanceOf(address account)\n        public\n        view\n        returns (uint256)\n    {\n        IStructs.State storage state = gState;\n        return state.liquidityBalance[account];\n    }\n\n    /// @dev Allows a sender to deposit tokens into the contract to provide liquidity.\n    /// @param x_amount The amount of x that should be taken from the sender's balance.\n    /// @param y_amount The amount of x that should be taken from the sender's balance.\n    function addLiquidity(uint256 x_amount, uint256 y_amount)\n        external\n    {\n        // Load the contract's state.\n        IStructs.State storage state = gState;\n        int256 xAmountFixed = LibFixedMath.toFixed(x_amount, 10**18);\n        int256 yAmountFixed = LibFixedMath.toFixed(y_amount, 10**6);\n\n        // Ensure that the amount of x and y that are being deposited are proportional.\n       require(\n            xAmountFixed.mul(state.y) == yAmountFixed.mul(state.x),\n            \"Liquidty:Amount deposited not proportional\"\n        );\n\n        // Charge the sender the amount of x and y tokens that were specified\n        IERC20(state.xAddress).transferFrom(msg.sender, address(this), x_amount);\n        IERC20(state.yAddress).transferFrom(msg.sender, address(this), y_amount);\n\n        // Grant the sender some liquidity tokens.\n        // FIXME(jalextowle): (Look into whether more precision is needed)\n        uint256 liquidity_reward;\n        if (state.x == 0) {\n            liquidity_reward = 0;\n            state.l = 1;\n        } else {\n            liquidity_reward = x_amount.safeMul(state.l).safeDiv(uint256(state.x) >> 127);\n        }\n\n        // Increase the balances of x and y\n        state.x = LibFixedMath.add(state.x, xAmountFixed);\n        state.y = LibFixedMath.add(state.y, yAmountFixed);\n\n        // Grant the liquidity tokens\n        state.liquidityBalance[msg.sender] = state.liquidityBalance[msg.sender].safeAdd(\n            liquidity_reward\n        );\n        state.l = state.l.safeAdd(liquidity_reward);\n    }\n\n    /// @dev Allows a sender to withdraw tokens by burning liquidity tokens.\n    /// @param l_amount The amount of liquidity tokens to burn.\n    function removeLiquidity(uint256 l_amount)\n        external\n    {\n        // Load the contract's state.\n        IStructs.State storage state = gState;\n\n        // Calculate the amounts of tokens that should be sent to the sender.\n        uint256 x_amount = l_amount.safeMul(uint256(state.x) >> 127).safeDiv(state.l);\n        uint256 y_amount = l_amount.safeMul(uint256(state.y) >> 127).safeDiv(state.l);\n\n        // Decrease the balances of x and y\n        state.x = LibFixedMath.sub(state.x, LibFixedMath.toFixed(x_amount));\n        state.y = LibFixedMath.sub(state.y, LibFixedMath.toFixed(y_amount));\n\n        // Destroy the liquidity tokens\n        state.liquidityBalance[msg.sender] = state.liquidityBalance[msg.sender].safeSub(\n            l_amount\n        );\n        state.l = state.l.safeAdd(l_amount);\n\n        // Reward sender in the correct amounts of x and y.\n        IERC20(state.xAddress).transfer(msg.sender, x_amount);\n        IERC20(state.yAddress).transfer(msg.sender, y_amount);\n    }\n}\n",
		"libs/LibSafeMath.sol": "pragma solidity ^0.5.9;\n\n\nlibrary LibSafeMath {\n\n    function safeMul(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        if (c / a != b) {\n            revert(\"safeMul: overflow\");\n        }\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (b == 0) {\n            revert(\"safeDiv: overflow\");\n        }\n        uint256 c = a / b;\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (b > a) {\n            revert(\"safeSub: underflow\");\n        }\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 c = a + b;\n        if (c < a) {\n            revert(\"safeAdd: overflow\");\n        }\n        return c;\n    }\n\n    function max256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}",
		"interfaces/IERC20.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\ninterface IERC20 {\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function transfer(address, uint256) external returns (bool);\n\n}\n",
		"core/Swapper.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IStructs.sol\";\nimport \"../interfaces/IEvents.sol\";\nimport \"../libs/LibFixedMath.sol\";\nimport \"../libs/LibSafeMath.sol\";\nimport \"../libs/LibScamMath.sol\";\nimport \"../libs/LibToken.sol\";\nimport \"../core/State.sol\";\nimport \"../interfaces/IERC20.sol\";\n\n\ncontract Swapper is\n    IEvents,\n    State\n{\n\n    using LibFixedMath for int256;\n\n    event Price(int256 price, int256 deltaB, int256 newPBarX, int256 pA);\n\n    function swap(\n        address fromToken,\n        address toToken,\n        uint256 amount\n    )\n        public\n        returns (uint256 amountReceived)\n    {\n        IStructs.State memory state = _loadGlobalState();\n\n        if (fromToken == state.xAddress && toToken == state.yAddress) {\n            int256 amountReceivedFixed = _swap(\n                fromToken,\n                toToken,\n                LibToken.daiToFixed(amount),\n                state\n            );\n            amountReceived = LibToken.usdcFromFixed(amountReceivedFixed);\n        } else if(fromToken == state.yAddress && toToken == state.xAddress) {\n            int256 amountReceivedFixed = _swap(\n                fromToken,\n                toToken,\n                LibToken.usdcToFixed(amount),\n                state\n            );\n            amountReceived = LibToken.daiFromFixed(amountReceivedFixed);\n        } else {\n            revert(\"Invalid token addresses\");\n        }\n\n        // Make transfers\n        /*\n        require(\n            IERC20(fromToken).transferFrom(msg.sender, address(this), amount),\n            'INSUFFICIENT_FROM_TOKEN_BALANCE'\n        );\n        require(\n            // IERC20(toToken).transferFrom(address(this), msg.sender, amountReceived),\n            IERC20(toToken).transfer(msg.sender, amountReceived),\n            'INSUFFICIENT_TO_TOKEN_BALANCE'\n        );\n        */\n\n        // Emit event\n        emit IEvents.Fill(\n            msg.sender,\n            fromToken,\n            toToken,\n            amount,\n            amountReceived\n        );\n\n        return amountReceived;\n    }\n\n    function _swap(\n        address fromToken,\n        address toToken,\n        int256 deltaA,\n        IStructs.State memory state\n    )\n        internal\n        returns (int256 amountReceived)\n    {\n        // Compute initial balances (fixed point).\n        int256 a = 0;\n        int256 b = 0;\n        int256 pBarA = 0;\n        bool fromIsX;\n        if (fromToken == state.xAddress && toToken == state.yAddress) {\n            a = state.x;\n            b = state.y;\n            pBarA = state.pBarX;\n            fromIsX = true;\n        } else if(fromToken == state.yAddress && toToken == state.xAddress) {\n            a = state.y;\n            b = state.x;\n            pBarA = LibFixedMath.one().div(state.pBarX);\n        } else {\n            revert(\"Invalid token addresses\");\n        }\n\n        // Compute\n        (int256 pA, int256 price) = _bisect(\n            a,\n            b,\n            pBarA,\n            deltaA,\n            state\n        );\n\n        // Compute about of `tokenB`\n        int256 deltaB = deltaA\n            .mul(price)\n            .mul(\n                LibFixedMath.one().sub(state.fee)\n            );\n        deltaB = int256(0).sub(deltaB); // negate\n\n        // Edge Cases\n        int256 epsilon = LibFixedMath.toFixed(int256(1), int256(100000)); // Good for USDC, may vary w token.\n        if (deltaB > 0) {\n            deltaB = 0;\n        } else if (b.add(deltaB) <= epsilon) {\n            deltaB = epsilon.sub(b);\n        }\n\n        // Handle additional edge cases\n        int256 newPBarA = LibScamMath.computeNewPBarA(\n            state.t,\n            _getCurrentBlockNumber(),\n            state.beta,\n            pA,\n            pBarA\n        );\n        if (newPBarA > state.eToKappa.mul(pBarA)) {\n            newPBarA = state.eToKappa.mul(pBarA);\n        } else if(newPBarA < LibFixedMath.one().div(state.eToKappa).mul(pBarA)) {\n            newPBarA = LibFixedMath.one().div(state.eToKappa).mul(pBarA);\n        }\n\n        // Update state\n        state.t = _getCurrentBlockNumber();\n        if (fromIsX) {\n            state.x = a.add(deltaA);\n            state.y = b.add(deltaB);\n            state.pBarX = newPBarA;\n        } else {\n            state.x = b.add(deltaB);\n            state.y = a.add(deltaA);\n            state.pBarX = LibFixedMath.one().div(newPBarA);\n        }\n\n        // Update state\n        _saveGlobalState(state);\n\n        emit IEvents.FillInternal(\n                msg.sender,\n                deltaA,\n                deltaB\n        );\n\n        amountReceived = -deltaB;\n        return amountReceived;\n    }\n\n    event Bisect(\n        int256 lhs1,\n        int256 mid,\n        int256 lhs\n    );\n\n    function _bisect(\n        int256 a,\n        int256 b,\n        int256 pBarA,\n        int256 deltaA,\n        IStructs.State memory state\n    )\n        internal\n        returns (int256 pA, int256 r)\n    {\n        // Compute initial midpoint on bond curve; this will be the initial lower bound.\n        pA = LibScamMath.computeMidpointOnBondCurve(\n            a,\n            b,\n            pBarA,\n            state.rhoRatio\n        );\n\n        // Compute initial bounds.\n        int256 lowerBound = 0;\n        int256 upperBound = pA;\n\n        // Cache this value for computations.\n        int256 aPlusAmount = a.add(deltaA);\n\n        //\n        for (uint256 i = 0; i < 20; ++i) {\n            int256 mid = LibScamMath.computeMidpoint(lowerBound, upperBound);\n            int256 lhs1 = LibScamMath.computeBaseToNinetyNine(mid.div(pBarA));\n            int256 lhs = aPlusAmount\n                .mul(lhs1)\n                .mul(mid)\n                .add(deltaA.mul(mid));\n            emit Bisect(\n                lhs1,\n                mid,\n                lhs\n            );\n            if (lhs > b) {\n                upperBound = mid;\n            } else {\n                lowerBound = mid;\n            }\n        }\n\n        return (pA, lowerBound);\n    }\n\n    function _getCurrentBlockNumber()\n        internal\n        returns (uint256)\n    {\n        return block.number;\n    }\n}\n",
		"interfaces/IEvents.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ninterface IEvents {\n\n    event Fill(\n        address from,\n        address fromToken,\n        address toToken,\n        uint256 amountSpent,\n        uint256 amountReceived\n    );\n\n    event FillInternal(\n        address from,\n        int256 amountSpent,\n        int256 amountReceived\n    );\n}\n",
		"libs/LibToken.sol": "pragma solidity ^0.5.9;\n\nimport \"../libs/LibScamMath.sol\";\n\n\nlibrary LibToken {\n\n    uint256 private constant DAI_DECIMALS = 18;\n    uint256 private constant USDC_DECIMALS = 6;\n\n    function daiToFixed(uint256 amount)\n        internal\n        pure\n        returns (int256 fixedAmount)\n    {\n        return LibScamMath.tokenToFixed(amount, DAI_DECIMALS);\n    }\n\n    function daiFromFixed(int256 amount)\n        internal\n        pure\n        returns (uint256 tokenAmount)\n    {\n        return LibScamMath.tokenFromFixed(amount, DAI_DECIMALS);\n    }\n\n    function usdcToFixed(uint256 amount)\n        internal\n        pure\n        returns (int256 fixedAmount)\n    {\n        return LibScamMath.tokenToFixed(amount, USDC_DECIMALS);\n    }\n\n    function usdcFromFixed(int256 amount)\n        internal\n        pure\n        returns (uint256 tokenAmount)\n    {\n        return LibScamMath.tokenFromFixed(amount, USDC_DECIMALS);\n    }\n}"
	},
	"sourceTreeHashHex": "0x18705f6822938f6199643be822a16b6178b7807b942e3791fdaa3aef95451f84",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.9+commit.e560f70d.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000000,
				"details": {
					"yul": true,
					"deduplicate": true,
					"cse": true,
					"constantOptimizer": true
				}
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"chains": {}
}