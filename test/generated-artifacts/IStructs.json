{
	"schemaVersion": "2.0.0",
	"contractName": "IStructs",
	"compilerOutput": {
		"abi": [],
		"devdoc": {
			"methods": {}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x6080604052348015600f57600080fd5b50604c80601d6000396000f3fe6080604052600080fdfea365627a7a72315820cb8f5c39c987ca23a75c1f8f183322a111fd3274d0b6c050c16d115562c852666c6578706572696d656e74616cf564736f6c634300050e0040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4C DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xCB DUP16 0x5C CODECOPY 0xC9 DUP8 0xCA 0x23 0xA7 0x5C 0x1F DUP16 XOR CALLER 0x22 LOG1 GT REVERT ORIGIN PUSH21 0xD0B6C050C16D115562C852666C6578706572696D65 PUSH15 0x74616CF564736F6C634300050E0040 ",
				"sourceMap": "60:1073:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:1073:7;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x6080604052600080fdfea365627a7a72315820cb8f5c39c987ca23a75c1f8f183322a111fd3274d0b6c050c16d115562c852666c6578706572696d656e74616cf564736f6c634300050e0040",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xCB DUP16 0x5C CODECOPY 0xC9 DUP8 0xCA 0x23 0xA7 0x5C 0x1F DUP16 XOR CALLER 0x22 LOG1 GT REVERT ORIGIN PUSH21 0xD0B6C050C16D115562C852666C6578706572696D65 PUSH15 0x74616CF564736F6C634300050E0040 ",
				"sourceMap": "60:1073:7:-;;;;;"
			}
		}
	},
	"sources": {
		"interfaces/IStructs.sol": {
			"id": 7
		}
	},
	"sourceCodes": {
		"interfaces/IStructs.sol": "pragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\n\ninterface IStructs {\n\n    struct State {\n        bool isInitialized;\n        address xAddress;                                   // address of token x\n        address yAddress;                                   // address of token y\n        int256 x;                                           // contract's balance of token x (fixed point)\n        int256 y;                                           // contract's balance of token y (fixed point)\n        uint256 l;                                          // total liquidity token balance\n        int256 pBarX;                                       // expected future price of x in terms of y (fixed point)\n        uint256 rhoNumerator;\n        int256 rhoRatio;\n        int256 fee;\n        uint256 t;                                          // most recent block\n        mapping (address => uint256) liquidityBalance;\n        int256 beta;    // persistence of expercted price - the larger the more persistent\n        int256 eToKappa;   // clamp that prevents the expected price changing by a lot in an expected tx\n    }\n\n}\n"
	},
	"sourceTreeHashHex": "0x52880e27603b6c5c749dbc1fc3dd316760e101df99fa1a5d0362322efd22e7da",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.14+commit.1f1aaa4.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000000,
				"details": {
					"yul": true,
					"deduplicate": true,
					"cse": true,
					"constantOptimizer": true
				}
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"chains": {}
}